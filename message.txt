// ==UserScript==
// @name AutoDefense
// @version Release
// @author C3real and Ganso
// @include https://*tribalwars*
// @grant GM_addStyle
// @grant GM_setValue
// @grant GM_getValue
// @grant GM_addStyle
// @grant GM_deleteValue
// @require https://cdn.tribalkit.com/commonFunctions.js
// ==/UserScript==

(()=>{var __webpack_modules__={"./node_modules/crypto-js/aes.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/aes.js?')},"./node_modules/crypto-js/blowfish.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx\'s pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/blowfish.js?')},"./node_modules/crypto-js/cipher-core.js":function(module,exports,__webpack_require__){eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./evpkdf */ \"./node_modules/crypto-js/evpkdf.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt, hasher) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            if (!hasher) {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t            } else {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t            }\n\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/cipher-core.js?")},"./node_modules/crypto-js/core.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse {}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.crypto) {\n\t        crypto = __webpack_require__.g.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && \"function\" === 'function') {\n\t        try {\n\t            crypto = __webpack_require__(/*! crypto */ \"?9157\");\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/core.js?")},"./node_modules/crypto-js/enc-base64.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/enc-base64.js?")},"./node_modules/crypto-js/enc-base64url.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64url;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/enc-base64url.js?")},"./node_modules/crypto-js/enc-utf16.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/enc-utf16.js?")},"./node_modules/crypto-js/evpkdf.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha1 */ "./node_modules/crypto-js/sha1.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/evpkdf.js?')},"./node_modules/crypto-js/format-hex.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/format-hex.js?')},"./node_modules/crypto-js/hmac.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/hmac.js?")},"./node_modules/crypto-js/index.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"), __webpack_require__(/*! ./lib-typedarrays */ "./node_modules/crypto-js/lib-typedarrays.js"), __webpack_require__(/*! ./enc-utf16 */ "./node_modules/crypto-js/enc-utf16.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./enc-base64url */ "./node_modules/crypto-js/enc-base64url.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./sha1 */ "./node_modules/crypto-js/sha1.js"), __webpack_require__(/*! ./sha256 */ "./node_modules/crypto-js/sha256.js"), __webpack_require__(/*! ./sha224 */ "./node_modules/crypto-js/sha224.js"), __webpack_require__(/*! ./sha512 */ "./node_modules/crypto-js/sha512.js"), __webpack_require__(/*! ./sha384 */ "./node_modules/crypto-js/sha384.js"), __webpack_require__(/*! ./sha3 */ "./node_modules/crypto-js/sha3.js"), __webpack_require__(/*! ./ripemd160 */ "./node_modules/crypto-js/ripemd160.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"), __webpack_require__(/*! ./pbkdf2 */ "./node_modules/crypto-js/pbkdf2.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"), __webpack_require__(/*! ./mode-cfb */ "./node_modules/crypto-js/mode-cfb.js"), __webpack_require__(/*! ./mode-ctr */ "./node_modules/crypto-js/mode-ctr.js"), __webpack_require__(/*! ./mode-ctr-gladman */ "./node_modules/crypto-js/mode-ctr-gladman.js"), __webpack_require__(/*! ./mode-ofb */ "./node_modules/crypto-js/mode-ofb.js"), __webpack_require__(/*! ./mode-ecb */ "./node_modules/crypto-js/mode-ecb.js"), __webpack_require__(/*! ./pad-ansix923 */ "./node_modules/crypto-js/pad-ansix923.js"), __webpack_require__(/*! ./pad-iso10126 */ "./node_modules/crypto-js/pad-iso10126.js"), __webpack_require__(/*! ./pad-iso97971 */ "./node_modules/crypto-js/pad-iso97971.js"), __webpack_require__(/*! ./pad-zeropadding */ "./node_modules/crypto-js/pad-zeropadding.js"), __webpack_require__(/*! ./pad-nopadding */ "./node_modules/crypto-js/pad-nopadding.js"), __webpack_require__(/*! ./format-hex */ "./node_modules/crypto-js/format-hex.js"), __webpack_require__(/*! ./aes */ "./node_modules/crypto-js/aes.js"), __webpack_require__(/*! ./tripledes */ "./node_modules/crypto-js/tripledes.js"), __webpack_require__(/*! ./rc4 */ "./node_modules/crypto-js/rc4.js"), __webpack_require__(/*! ./rabbit */ "./node_modules/crypto-js/rabbit.js"), __webpack_require__(/*! ./rabbit-legacy */ "./node_modules/crypto-js/rabbit-legacy.js"), __webpack_require__(/*! ./blowfish */ "./node_modules/crypto-js/blowfish.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/index.js?')},"./node_modules/crypto-js/lib-typedarrays.js":function(module,exports,__webpack_require__){eval(';(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != \'function\') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/lib-typedarrays.js?')},"./node_modules/crypto-js/md5.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/md5.js?")},"./node_modules/crypto-js/mode-cfb.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-cfb.js?')},"./node_modules/crypto-js/mode-ctr-gladman.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman\'s counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ctr-gladman.js?')},"./node_modules/crypto-js/mode-ctr.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ctr.js?')},"./node_modules/crypto-js/mode-ecb.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ecb.js?')},"./node_modules/crypto-js/mode-ofb.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/mode-ofb.js?')},"./node_modules/crypto-js/pad-ansix923.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-ansix923.js?')},"./node_modules/crypto-js/pad-iso10126.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-iso10126.js?')},"./node_modules/crypto-js/pad-iso97971.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-iso97971.js?')},"./node_modules/crypto-js/pad-nopadding.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-nopadding.js?')},"./node_modules/crypto-js/pad-zeropadding.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pad-zeropadding.js?')},"./node_modules/crypto-js/pbkdf2.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha256 */ "./node_modules/crypto-js/sha256.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t         * @property {number} iterations The number of iterations to perform. Default: 250000\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA256,\n\t            iterations: 250000\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/pbkdf2.js?')},"./node_modules/crypto-js/rabbit-legacy.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn\'t affect the cipher\'s security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/rabbit-legacy.js?')},"./node_modules/crypto-js/rabbit.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/rabbit.js?')},"./node_modules/crypto-js/rc4.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/rc4.js?')},"./node_modules/crypto-js/ripemd160.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/ripemd160.js?")},"./node_modules/crypto-js/sha1.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha1.js?")},"./node_modules/crypto-js/sha224.js":function(module,exports,__webpack_require__){eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./sha256 */ \"./node_modules/crypto-js/sha256.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha224.js?")},"./node_modules/crypto-js/sha256.js":function(module,exports,__webpack_require__){eval(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha256.js?")},"./node_modules/crypto-js/sha3.js":function(module,exports,__webpack_require__){eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./x64-core */ \"./node_modules/crypto-js/x64-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha3.js?")},"./node_modules/crypto-js/sha384.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"), __webpack_require__(/*! ./sha512 */ "./node_modules/crypto-js/sha512.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher\'s object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384(\'message\');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC\'s object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha384.js?')},"./node_modules/crypto-js/sha512.js":function(module,exports,__webpack_require__){eval(";(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./x64-core */ \"./node_modules/crypto-js/x64-core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/sha512.js?")},"./node_modules/crypto-js/tripledes.js":function(module,exports,__webpack_require__){eval(';(function (root, factory, undef) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error(\'Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.\');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher\'s object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/tripledes.js?')},"./node_modules/crypto-js/x64-core.js":function(module,exports,__webpack_require__){eval(';(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array\'s data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone "words" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));\n\n//# sourceURL=webpack:///./node_modules/crypto-js/x64-core.js?')},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/ui/dialog.css":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.autodefense-tabs {\r\n    display: flex;\r\n    border-bottom: 1px solid #ccc;\r\n}\r\n\r\n.tab-button {\r\n    background: none;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n}\r\n\r\n.tab-button.active {\r\n    border-bottom: 2px solid #6e4b27;\r\n}\r\n\r\n.autodefense-tab-content {\r\n    padding: 15px 0;\r\n}\r\n\r\n.tab-pane {\r\n    display: none;\r\n}\r\n\r\n.tab-pane.active {\r\n    display: block;\r\n}\r\n\r\n#stats-summary {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.stat-box {\r\n    background-color: #f0f0f0;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    width: 23%;\r\n}\r\n\r\n.stat-box h5 {\r\n    margin-top: 0;\r\n    border-bottom: 1px solid #ccc;\r\n    padding-bottom: 5px;\r\n}\r\n\r\n#advanced_settings_overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 1000;\r\n}\r\n\r\n#advanced .vis {\r\n    position: relative;\r\n}\r\n\r\n.task-item {\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.task-item:hover {\r\n    background-color: #f0f0f0;\r\n}\r\n\r\n.unit-selection-container {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n}\r\n\r\n.unit-selection-header {\r\n    margin-bottom: 10px;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid #ccc;\r\n}\r\n\r\n.unit-grid {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex-wrap: nowrap;\r\n}\r\n\r\n.unit-checkbox {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 5px 10px;\r\n    gap: 5px;\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    background: #fff;\r\n    min-width: 80px;\r\n    justify-content: center;\r\n}\r\n\r\n.unit-checkbox:hover:not(.disabled) {\r\n    background: #f5f5f5;\r\n}\r\n\r\n.unit-checkbox.disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    background: #f5f5f5;\r\n}\r\n\r\n.unit-checkbox input {\r\n    margin: 0;\r\n}\r\n\r\n.unit-checkbox img {\r\n    width: 16px;\r\n    height: 16px;\r\n    vertical-align: middle;\r\n}\r\n\r\n.noble-train-selection {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n}\r\n\r\n.noble-train-grid,\r\n.noble-attack-grid {\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\n.noble-train-item,\r\n.noble-attack-item {\r\n    width: 35px;\r\n    height: 35px;\r\n    border: 2px solid #ccc;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    background-color: #ff6666;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.noble-train-item.selected,\r\n.noble-attack-item.selected {\r\n    background-color: #28a745;\r\n    border-color: #218838;\r\n}\r\n\r\n.noble-attack-item.disabled {\r\n    background-color: #f5f5f5;\r\n    border: 2px dashed #bbb;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.noble-train-item img,\r\n.noble-attack-item img {\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n\r\n.help-text {\r\n    font-size: 0.9em;\r\n    color: #666;\r\n    margin: 5px 0;\r\n}\r\n\r\n.noble-attack-grid {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-top: 25px;\r\n}\r\n\r\n.noble-attack-item {\r\n    width: 35px;\r\n    height: 35px;\r\n    border: 2px solid #ccc;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    background-color: #ff6666;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.noble-attack-item.selected {\r\n    background-color: #66cc66;\r\n    border-color: #006600;\r\n}\r\n\r\n.noble-attack-item.disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n    background-color: #ff6666;\r\n}\r\n\r\n.noble-selections-container {\r\n    display: flex;\r\n    gap: 50px;\r\n    margin-top: 15px;\r\n}\r\n\r\n.noble-train-grid,\r\n.noble-attack-grid {\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\n.noble-train-item,\r\n.noble-attack-item {\r\n    width: 35px;\r\n    height: 35px;\r\n    border: 2px solid #ccc;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    background-color: #ff6666;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.noble-train-item.selected,\r\n.noble-attack-item.selected {\r\n    background-color: #28a745;\r\n    border-color: #218838;\r\n}\r\n\r\n.noble-attack-item.disabled {\r\n    background-color: #f5f5f5;\r\n    border: 2px dashed #bbb;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.noble-train-item img,\r\n.noble-attack-item img {\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n\r\nh4 {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.help-text {\r\n    margin-bottom: 15px;\r\n    color: #666;\r\n    font-size: 0.9em;\r\n}\r\n\r\n.noble-selections-wrapper {\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 6px;\r\n    background: #f4e4bc;\r\n}\r\n\r\n.noble-selection-section {\r\n    flex: 1;\r\n    padding: 15px;\r\n    border-right: 1px solid #d4c59d;\r\n    background-color: #f8f0d8;\r\n    border-radius: 4px;\r\n}\r\n\r\n.noble-selection-section:last-child {\r\n    border-right: none;\r\n}\r\n\r\n.noble-selection-section h4 {\r\n    margin: 0 0 10px 0;\r\n    font-size: 14px;\r\n    color: #603000;\r\n    text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.noble-selection-grid {\r\n    display: flex;\r\n    gap: 25px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.fallback-section {\r\n    margin-top: 25px;\r\n    padding: 15px;\r\n    background-color: #fff5da;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 4px;\r\n}\r\n\r\n.fallback-section h4 {\r\n    margin: 0 0 8px 0;\r\n    font-size: 13px;\r\n    color: #603000;\r\n    text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.help-text {\r\n    font-size: 12px;\r\n    color: #5a2800;\r\n    margin: 5px 0 15px 0;\r\n    line-height: 1.4;\r\n}\r\n\r\n.noble-auto-settings {\r\n    margin-top: 20px;\r\n    padding-top: 15px;\r\n    border-top: 1px solid #d4c59d;\r\n}\r\n\r\n.noble-auto-settings h4 {\r\n    margin: 0 0 10px 0;\r\n    font-size: 13px;\r\n    color: #603000;\r\n    text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.settings-row {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 8px 0;\r\n}\r\n\r\n.settings-row label {\r\n    font-size: 12px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.settings-row input[type="number"] {\r\n    width: 60px;\r\n}\r\n\r\n.noble-action-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    padding: 6px 12px;\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.noble-action-item:hover {\r\n    background: #f5f5f5;\r\n}\r\n\r\n.noble-action-item.selected {\r\n    background: #e3efd8;\r\n    border-color: #9ab973;\r\n}\r\n\r\n.noble-action-item img {\r\n    width: 16px;\r\n    height: 16px;\r\n}\r\n\r\n.noble-action-item .action-label {\r\n    font-size: 12px;\r\n    color: #333;\r\n}\r\n\r\n.noble-fallback-grid {\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\n.noble-isolated-grid {\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\n/* Cores específicas para cada tipo de ação */\r\n.noble-action-item[data-action="dodge"] {\r\n    border-color: #9ab973;\r\n}\r\n\r\n.noble-action-item[data-action="dodge"].selected {\r\n    background: #e3efd8;\r\n}\r\n\r\n.noble-action-item[data-action="ignore"] {\r\n    border-color: #c62828;\r\n}\r\n\r\n.noble-action-item[data-action="ignore"].selected {\r\n    background: #ffebee;\r\n}\r\n\r\n.noble-action-item[data-action="snipe"] {\r\n    border-color: #1565c0;\r\n}\r\n\r\n.noble-action-item[data-action="snipe"].selected {\r\n    background: #e3f2fd;\r\n}\r\n\r\n.noble-selection-section {\r\n    position: relative;\r\n    margin-bottom: 30px;\r\n    padding: 15px;\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 4px;\r\n    min-height: 300px;\r\n    /* Altura mínima para garantir espaço para o fallback */\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.noble-section-content {\r\n    flex: 1;\r\n}\r\n\r\n.noble-section-content h4 {\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.help-text {\r\n    margin: 5px 0;\r\n    color: #666;\r\n}\r\n\r\n.fallback-section {\r\n    margin-top: auto;\r\n    /* Empurra para o fundo */\r\n    padding-top: 15px;\r\n    border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.noble-train-grid,\r\n.noble-attack-grid {\r\n    margin: 15px 0;\r\n}\r\n\r\n.settings-row {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin: 10px 0;\r\n}\r\n\r\n.input-with-help {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.noble-fallback-grid {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.noble-action-item {\r\n    flex: 1;\r\n    text-align: center;\r\n}\r\n\r\n/* Estilo TribalWars para os itens de trem de nobres */\r\n.noble-train-item,\r\n.noble-attack-item {\r\n    width: 35px;\r\n    height: 35px;\r\n    border: 2px solid #bb8e41;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.noble-train-item.selected,\r\n.noble-attack-item.selected {\r\n    background-color: 804000;\r\n    border-color: #5c7d3a;\r\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.noble-attack-item.disabled {\r\n    background-color: #e0d4b5;\r\n    border: 2px dashed #bb9d6c;\r\n    cursor: not-allowed;\r\n    opacity: 0.8;\r\n}\r\n\r\n.example-container {\r\n    border: 1px solid #d4c59d !important;\r\n    background-color: #f4e4bc !important;\r\n}\r\n\r\n/* Melhorias para os elementos de formulário */\r\n.noble-snipe-settings-section input[type="number"],\r\n.noble-snipe-settings-section input[type="text"],\r\n.noble-snipe-settings-section select {\r\n    background-color: #fff5da;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 3px;\r\n    padding: 3px 6px;\r\n    color: #603000;\r\n}\r\n\r\n.noble-snipe-settings-section input[type="checkbox"] {\r\n    cursor: pointer;\r\n}\r\n\r\n.unit-checkbox {\r\n    background: #fff5da;\r\n    border: 1px solid #d4c59d;\r\n}\r\n\r\n.unit-checkbox:hover:not(.disabled) {\r\n    background: #ffe5b3;\r\n}\r\n\r\n.noble-snipe-settings-section {\r\n    background-color: #f8f0d8;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 6px;\r\n    padding: 15px;\r\n}\r\n\r\n.noble-snipe-settings-section h4 {\r\n    color: #603000;\r\n    margin: 0 0 15px 0;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid #d4c59d;\r\n    text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.noble-snipe-settings-section .vis {\r\n    background-color: transparent;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.noble-snipe-settings-section .vis td {\r\n    padding: 6px;\r\n    color: #603000;\r\n    border: 1px solid #e2d5b4;\r\n}\r\n\r\n.unit-selection-container {\r\n    border: 1px solid #d4c59d;\r\n    background-color: #fff5da;\r\n}\r\n\r\n.unit-selection-header {\r\n    border-bottom: 1px solid #d4c59d;\r\n}\r\n\r\n.noble-selection-section {\r\n    padding: 8px;\r\n    min-height: auto !important;\r\n}\r\n\r\n.noble-selection-grid {\r\n    gap: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.noble-section-content h4 {\r\n    font-size: 12px;\r\n    margin: 0 0 5px 0;\r\n}\r\n\r\n.noble-section-content .help-text {\r\n    margin: 3px 0 6px 0;\r\n    font-size: 10px;\r\n    line-height: 1.3;\r\n}\r\n\r\n.fallback-section {\r\n    margin-top: 10px;\r\n    padding: 8px;\r\n}\r\n\r\n.fallback-section h4 {\r\n    font-size: 11px;\r\n    margin: 0 0 5px 0;\r\n}\r\n\r\n.noble-train-grid,\r\n.noble-attack-grid,\r\n.noble-isolated-grid,\r\n.noble-fallback-grid {\r\n    gap: 5px;\r\n}\r\n\r\n.noble-train-item,\r\n.noble-attack-item {\r\n    width: 28px;\r\n    height: 28px;\r\n}\r\n\r\n.settings-row {\r\n    margin: 5px 0;\r\n}\r\n\r\n.input-with-help {\r\n    margin: 0;\r\n}\r\n\r\n.example-container {\r\n    padding: 5px !important;\r\n    margin-top: 8px !important;\r\n}\r\n\r\n.example-container p {\r\n    margin: 0 0 5px 0 !important;\r\n    font-size: 10px !important;\r\n}\r\n\r\n.noble-action-item {\r\n    padding: 4px 8px;\r\n    gap: 4px;\r\n}\r\n\r\n.noble-action-item .action-label {\r\n    font-size: 11px;\r\n}\r\n\r\n/* Ajuste para compactar a visualização vertical */\r\n#noble_train_selection {\r\n    max-height: 500px;\r\n    overflow-y: auto;\r\n}\r\n\r\n/* Estilos adicionais de compactação para todos os elementos do diálogo */\r\n#autodefense_config {\r\n    max-width: 95%;\r\n    max-height: 90vh;\r\n}\r\n\r\n#noble-snipe .vis {\r\n    margin-bottom: 5px;\r\n}\r\n\r\n#noble-snipe .vis td {\r\n    padding: 3px;\r\n}\r\n\r\n.example-container table {\r\n    font-size: 10px !important;\r\n}\r\n\r\n.example-container table td {\r\n    padding: 2px !important;\r\n}\r\n\r\n.example-container p {\r\n    font-size: 9px !important;\r\n    margin: 2px 0 !important;\r\n}\r\n\r\n/* Reduzir o tamanho da seção de exemplo */\r\n.noble-selection-section:nth-child(2) .example-container {\r\n    transform: scale(0.9);\r\n    transform-origin: top left;\r\n    margin-right: -10%;\r\n}\r\n\r\n/* Tornar a visualização mais compacta */\r\n.noble-snipe-settings-section .vis {\r\n    margin: 0;\r\n}\r\n\r\n/* Reduzir o espaço vertical ocupado pelas opções */\r\n.noble-selection-section {\r\n    max-height: 350px;\r\n    overflow-y: auto;\r\n}\r\n\r\n/* Ajustar a altura da segunda grade para corresponder à primeira */\r\n.noble-selection-grid:nth-child(2) {\r\n    margin-top: 5px !important;\r\n}\r\n\r\n/* Estilos para a seção de padrões de NT */\r\n.noble-train-patterns-container {\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 4px;\r\n    background: #f8f0d8;\r\n}\r\n\r\n.noble-train-patterns {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\n.pattern-header {\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr 1fr 40px;\r\n    gap: 10px;\r\n    font-weight: bold;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid #d4c59d;\r\n    color: #603000;\r\n}\r\n\r\n.pattern-item {\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr 0fr 1fr 40px;\r\n    gap: 10px;\r\n    padding: 8px 0;\r\n    border-bottom: 1px solid #e2d5b4;\r\n    align-items: center;\r\n}\r\n\r\n.pattern-visual {\r\n    display: flex;\r\n    gap: 5px;\r\n}\r\n\r\n/* Nova seleção interativa de nobres */\r\n.noble-selector {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n.noble-selector-item {\r\n    position: relative;\r\n    width: 36px;\r\n    height: 36px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    transition: all 0.2s ease;\r\n    border: 2px solid transparent;\r\n}\r\n\r\n.noble-selector-item:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.noble-selector-item.selected {\r\n    background-color: rgba(122, 166, 81, 0.2);\r\n    border: 2px solid 804000;\r\n}\r\n\r\n.noble-selector-item .position-number {\r\n    position: absolute;\r\n    bottom: -2px;\r\n    right: -2px;\r\n    background-color: #603000;\r\n    color: white;\r\n    border-radius: 50%;\r\n    width: 14px;\r\n    height: 14px;\r\n    font-size: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.noble-icon {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 50%;\r\n    font-weight: bold;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid #bb8e41;\r\n}\r\n\r\n.noble-icon.green {\r\n    background-color: 804000;\r\n    color: white;\r\n    border-color: #5c7d3a;\r\n}\r\n\r\n.noble-icon.full {\r\n    background: linear-gradient(to right, #8a0808 50%, #a55605 50%);\r\n    color: white;\r\n    border: 2px solid #8c2e2e;\r\n}\r\n\r\n.positions-input {\r\n    width: 100%;\r\n    padding: 5px;\r\n    background-color: #fff5da;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 3px;\r\n    color: #603000;\r\n}\r\n\r\n.action-select {\r\n    width: 100%;\r\n    padding:.3em;\r\n    background-color: #fff5da;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 3px;\r\n    color: #603000;\r\n}\r\n\r\n.pattern-controls {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.remove-pattern-btn {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    color: #a52a2a;\r\n}\r\n\r\n.add-pattern-container {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.pattern-input {\r\n    flex-grow: 1;\r\n}\r\n\r\n#new-pattern-input {\r\n    width: 100%;\r\n    padding: 5px;\r\n    background-color: #fff5da;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 3px;\r\n    color: #603000;\r\n}\r\n\r\n.add-pattern-btn {\r\n    padding: 5px 15px;\r\n    background-color: 804000;\r\n    color: white;\r\n    border: 1px solid #5c7d3a;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.add-pattern-btn:hover {\r\n    background-color: #6c9141;\r\n}\r\n\r\n.pattern-help {\r\n    margin-top: 15px;\r\n    padding: 10px;\r\n    background-color: #fff5da;\r\n    border: 1px solid #d4c59d;\r\n    border-radius: 3px;\r\n    font-size: 12px;\r\n    color: #603000;\r\n}\r\n\r\n.pattern-help ul {\r\n    margin: 5px 0;\r\n    padding-left: 20px;\r\n}\r\n\r\n/* Condition Settings Styles */\r\n.noble-conditions-container {\r\n  margin-bottom: 20px;\r\n  border: 1px solid #d4c59d;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  background-color: #f8f0d8;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.noble-conditions-container:not(.show-conditions) {\r\n  max-height: 0;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n  opacity: 0.5;\r\n}\r\n\r\n.noble-conditions-container.show-conditions {\r\n  max-height: 1000px;\r\n  opacity: 1;\r\n}\r\n\r\n.condition-settings {\r\n  width: 100%;\r\n  margin: 10px 0;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.condition-settings th {\r\n  text-align: left;\r\n  padding: 6px 10px;\r\n  background-color: #e2d5b4;\r\n  color: #603000;\r\n  border: 1px solid #d4c59d;\r\n}\r\n\r\n.condition-settings td {\r\n  padding: 8px 10px;\r\n  border: 1px solid #e2d5b4;\r\n  color: #603000;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.condition-settings tr:hover td {\r\n  background-color: rgba(255, 245, 218, 0.7);\r\n}\r\n\r\n.condition-settings tr.highlight-row td {\r\n  background-color: rgba(215, 200, 170, 0.15);\r\n}\r\n\r\n.condition-settings tr.condition-active td {\r\n  background-color: rgba(126, 166, 81, 0.1);\r\n}\r\n\r\n.condition-settings tr.condition-inactive td {\r\n  opacity: 0.7;\r\n}\r\n\r\n.condition-settings tr.condition-inactive .condition-icon {\r\n  opacity: 0.5;\r\n}\r\n\r\n/* Priority level indicators */\r\n.priority-critical {\r\n  display: inline-block;\r\n  background-color: #7b1fa2;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 2px 6px;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.priority-high {\r\n  display: inline-block;\r\n  background-color: #1565c0;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 2px 6px;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.priority-medium-high {\r\n  display: inline-block;\r\n  background-color: #0288d1;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 2px 6px;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.priority-medium {\r\n  display: inline-block;\r\n  background-color: #00897b;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 2px 6px;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.priority-low {\r\n  display: inline-block;\r\n  background-color: #689f38;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 2px 6px;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* Custom checkbox styling */\r\n.condition-toggle {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 22px;\r\n}\r\n\r\n.condition-toggle input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.condition-slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  transition: .4s;\r\n  border-radius: 34px;\r\n}\r\n\r\n.condition-slider:before {\r\n  position: absolute;\r\n  content: "";\r\n  height: 16px;\r\n  width: 16px;\r\n  left: 3px;\r\n  bottom: 3px;\r\n  background-color: white;\r\n  transition: .4s;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput:checked + .condition-slider {\r\n  background-color: 804000;\r\n}\r\n\r\ninput:focus + .condition-slider {\r\n  box-shadow: 0 0 1px 804000;\r\n}\r\n\r\ninput:checked + .condition-slider:before {\r\n  transform: translateX(18px);\r\n}\r\n\r\n.condition-name {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-weight: bold;\r\n}\r\n\r\n.condition-description {\r\n  font-size: 0.95em;\r\n  color: #603000;\r\n  line-height: 1.4;\r\n}\r\n\r\n.condition-icon {\r\n  width: 28px;\r\n  height: 28px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  color: white;\r\n  font-size: 16px;\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.15);\r\n}\r\n\r\n.icon-manual {\r\n  background-color: #7b1fa2;\r\n  font-size: 15px;\r\n}\r\n\r\n.icon-small {\r\n  background-color: #1565c0;\r\n  font-size: 15px;\r\n}\r\n\r\n.icon-large {\r\n  background-color: #0288d1;\r\n  font-size: 15px;\r\n}\r\n\r\n.icon-train {\r\n  background-color: #00897b;\r\n  font-size: 15px;\r\n}\r\n\r\n.icon-time {\r\n  background-color: #689f38;\r\n  font-size: 15px;\r\n}\r\n\r\n.conditions-help {\r\n  margin-top: 10px;\r\n  padding: 8px;\r\n  background-color: #fff5da;\r\n  border: 1px solid #d4c59d;\r\n  border-radius: 3px;\r\n  font-size: 12px;\r\n  color: #603000;\r\n}\r\n\r\n.conditions-help h5 {\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  font-size: 13px;\r\n  color: #603000;\r\n}\r\n\r\n.conditions-legend {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.legend-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  padding: 3px 8px;\r\n  border-radius: 4px;\r\n  font-size: 11px;\r\n  border: 1px solid #e2d5b4;\r\n}\r\n\r\n.legend-priority {\r\n  width: 10px;\r\n  height: 10px;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n}\r\n\r\n/* Info message styling */\r\n.info-message {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: #fff8e1;\r\n  border: 1px solid #ffd54f;\r\n  border-radius: 4px;\r\n  color: #5d4037;\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n  position: relative;\r\n}\r\n\r\n.info-icon {\r\n  font-size: 18px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.info-content {\r\n  flex: 1;\r\n}\r\n\r\n.info-content p {\r\n  margin: 0;\r\n}\r\n\r\n.info-content strong {\r\n  color: #5d4037;\r\n}\r\n\r\n/* ======================================\r\n   Estatísticas\r\n   ====================================== */\r\n.stats-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stats-summary {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.stat-summary-card {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.stat-summary-card:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.stat-summary-card.primary {\r\n  background: linear-gradient(135deg, #69b578, #3a7d44);\r\n  border: 1px solid #5aaa69;\r\n}\r\n\r\n.stat-summary-card.secondary {\r\n  background: linear-gradient(135deg, #d4546a, #ba324f);\r\n  border: 1px solid #c4445a;\r\n}\r\n\r\n.stat-summary-card.tertiary {\r\n  background: linear-gradient(135deg, #e6aa68, #cc8c3e);\r\n  border: 1px solid #d69b58;\r\n}\r\n\r\n.stat-summary-card.quaternary {\r\n  background: linear-gradient(135deg, #5e8b7e, #3c7465);\r\n  border: 1px solid #4e7b6e;\r\n}\r\n\r\n.stat-icon {\r\n  font-size: 28px;\r\n  margin-right: 15px;\r\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.stat-info {\r\n  flex: 1;\r\n}\r\n\r\n.stat-title {\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n  font-weight: normal;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.stat-rate {\r\n  font-size: 12px;\r\n  opacity: 0.8;\r\n}\r\n\r\n.stats-details {\r\n  margin-top: 20px;\r\n}\r\n\r\n.stat-detail-section {\r\n  background-color: #fff5da;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 8px;\r\n  margin-bottom: 15px;\r\n  overflow: hidden;\r\n}\r\n\r\n.section-title {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #efe3c9;\r\n  padding: 10px 15px;\r\n  border-bottom: 1px solid #d7b56d;\r\n}\r\n\r\n.section-icon {\r\n  width: 28px;\r\n  height: 28px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.section-title h4 {\r\n  margin: 0;\r\n  color: #603000;\r\n  font-size: 16px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 10px;\r\n  padding: 15px;\r\n}\r\n\r\n.stat-item {\r\n  padding: 10px;\r\n  background-color: #f9f2e3;\r\n  border-radius: 4px;\r\n  border: 1px solid #e2d5b4;\r\n}\r\n\r\n.stat-item.span-2 {\r\n  grid-column: span 2;\r\n}\r\n\r\n.stat-item.success {\r\n  background-color: rgba(126, 166, 81, 0.1);\r\n  border-color: rgba(126, 166, 81, 0.3);\r\n}\r\n\r\n.stat-item.failure {\r\n  background-color: rgba(187, 62, 62, 0.1);\r\n  border-color: rgba(187, 62, 62, 0.3);\r\n}\r\n\r\n.stat-label {\r\n  font-size: 12px;\r\n  color: #603000;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #804000;\r\n}\r\n\r\n.stat-text {\r\n  font-size: 14px;\r\n  color: #603000;\r\n}\r\n\r\n.stats-btn {\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.stats-btn.primary {\r\n  background-color: #7ea651;\r\n  color: white;\r\n}\r\n\r\n.stats-btn.primary:hover {\r\n  background-color: #6c9145;\r\n}\r\n\r\n.stats-btn.danger {\r\n  background-color: #bb3e3e;\r\n  color: white;\r\n}\r\n\r\n.stats-btn.danger:hover {\r\n  background-color: #992e2e;\r\n}\r\n\r\n/* ======================================\r\n   Estrutura Principal do Diálogo\r\n   ====================================== */\r\n.fullscreen-dialog-container {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 100000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.fullscreen-dialog-backdrop {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.fullscreen-dialog {\r\n  position: relative;\r\n  width: 95%;\r\n  height: 90%;\r\n  background-color: #f4e4bc;\r\n  border: 2px solid #804000;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\r\n  max-width: 1400px;\r\n}\r\n\r\n/* Cabeçalho do Diálogo */\r\n.dialog-header {\r\n  background-color: #804000;\r\n  padding: 10px 20px;\r\n  border-radius: 6px 6px 0 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #f4e4bc;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.dialog-header h2 {\r\n  margin: 0;\r\n  font-size: 1.4em;\r\n  font-weight: bold;\r\n}\r\n\r\n.header-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.player-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.player-avatar {\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: #d7b56d;\r\n  border-radius: 50%;\r\n  border: 1px solid #9c7d44;\r\n}\r\n\r\n.player-name {\r\n  font-weight: bold;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  color: #f4e4bc;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  line-height: 24px;\r\n  width: 24px;\r\n  height: 24px;\r\n  text-align: center;\r\n}\r\n\r\n.close-button:hover {\r\n  color: #ff9e5e;\r\n}\r\n\r\n/* Corpo Principal do Diálogo */\r\n.dialog-body {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.dialog-content {\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: auto;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  background-color: #f4e4bc;\r\n}\r\n\r\n/* Barra Lateral */\r\n.dialog-sidebar {\r\n  width: 220px;\r\n  border-right: 1px solid #d7b56d;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #efe3c9;\r\n  flex-shrink: 0;\r\n  overflow-y: auto;\r\n}\r\n\r\n.sidebar-header {\r\n  padding: 15px;\r\n  border-bottom: 1px solid #d7b56d;\r\n}\r\n\r\n.logo-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.app-logo {\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #804000;\r\n  color: #f4e4bc;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.app-title {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: #603000;\r\n}\r\n\r\n.license-info {\r\n  font-size: 12px;\r\n  color: #603000;\r\n  line-height: 1.3;\r\n}\r\n\r\n.sidebar-nav {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 10px 0;\r\n}\r\n\r\n.nav-button {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  background: none;\r\n  border: none;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  color: #603000;\r\n  border-left: 3px solid transparent;\r\n  gap: 10px;\r\n}\r\n\r\n.nav-button:hover {\r\n  background-color: rgba(215, 181, 109, 0.2);\r\n}\r\n\r\n.nav-button.active {\r\n  background-color: rgba(215, 181, 109, 0.4);\r\n  border-left-color: #804000;\r\n  font-weight: bold;\r\n}\r\n\r\n.nav-icon {\r\n  font-size: 18px;\r\n  width: 24px;\r\n  text-align: center;\r\n}\r\n\r\n.highlight-button {\r\n  background-color: rgba(128, 64, 0, 0.1);\r\n}\r\n\r\n.sidebar-footer {\r\n  padding: 15px;\r\n  border-top: 1px solid #d7b56d;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.version-info {\r\n  font-size: 12px;\r\n  color: #8d6b3d;\r\n  text-align: center;\r\n}\r\n\r\n/* Conteúdo das Abas */\r\n.tab-content {\r\n  display: none;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  padding-bottom: 40px;\r\n  overflow-y: auto;\r\n  flex: 1;\r\n  background-color: #f4e4bc;\r\n}\r\n\r\n.tab-content.active {\r\n  display: flex;\r\n}\r\n\r\n.content-card {\r\n  background-color: #fff5d9;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  background-color: #efe3c9;\r\n  padding: 10px 15px;\r\n  border-bottom: 1px solid #d7b56d;\r\n}\r\n\r\n.card-header h3 {\r\n  margin: 0;\r\n  color: #603000;\r\n  font-size: 16px;\r\n}\r\n\r\n.card-body {\r\n  padding: 15px;\r\n  max-height: 75vh;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #d7b56d #f8f0d8;\r\n  padding-bottom: 30px;\r\n}\r\n\r\n/* Estilo da Scrollbar para Card Body */\r\n.card-body::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.card-body::-webkit-scrollbar-track {\r\n  background: #f8f0d8;\r\n  border-radius: 4px;\r\n}\r\n\r\n.card-body::-webkit-scrollbar-thumb {\r\n  background-color: #d7b56d;\r\n  border-radius: 4px;\r\n  border: 2px solid #f8f0d8;\r\n}\r\n\r\n.card-body::-webkit-scrollbar-thumb:hover {\r\n  background-color: #bb8e41;\r\n}\r\n\r\n/* Ensure content is fully visible when scrolling */\r\n.card-body > *:last-child {\r\n  margin-bottom: 140px!important;\r\n}\r\n\r\n/* Cards de Estatísticas */\r\n.quick-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 15px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.stat-card {\r\n  background-color: #efe3c9;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  text-align: center;\r\n}\r\n\r\n.stat-title {\r\n  font-size: 14px;\r\n  color: #603000;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #804000;\r\n}\r\n\r\n/* Grade de Opções */\r\n.option-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.option {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.option label {\r\n  color: #603000;\r\n  font-weight: bold;\r\n}\r\n\r\n/* ======================================\r\n   Toggle Switches\r\n   ====================================== */\r\n.toggle-switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.toggle-switch:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.toggle-switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.toggle-slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  transition: .3s;\r\n  border-radius: 24px;\r\n  box-shadow: inset 0 0 2px rgba(0,0,0,0.2);\r\n}\r\n\r\n.toggle-slider:before {\r\n  position: absolute;\r\n  content: "";\r\n  height: 18px;\r\n  width: 18px;\r\n  left: 3px;\r\n  bottom: 3px;\r\n  background-color: white;\r\n  transition: .3s;\r\n  border-radius: 50%;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.3);\r\n}\r\n\r\ninput:checked + .toggle-slider {\r\n  background-color: #804000;\r\n}\r\n\r\ninput:focus + .toggle-slider {\r\n  box-shadow: 0 0 1px #804000;\r\n}\r\n\r\ninput:checked + .toggle-slider:before {\r\n  transform: translateX(26px);\r\n}\r\n\r\n.toggle-switch:active .toggle-slider:before {\r\n  width: 22px;\r\n}\r\n\r\n/* Condição Toggle */\r\n.condition-toggle {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 22px;\r\n}\r\n\r\n.condition-toggle input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.condition-slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  transition: .4s;\r\n  border-radius: 34px;\r\n}\r\n\r\n.condition-slider:before {\r\n  position: absolute;\r\n  content: "";\r\n  height: 16px;\r\n  width: 16px;\r\n  left: 3px;\r\n  bottom: 3px;\r\n  background-color: white;\r\n  transition: .4s;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput:checked + .condition-slider {\r\n  background-color: #804000;\r\n}\r\n\r\ninput:focus + .condition-slider {\r\n  box-shadow: 0 0 1px #804000;\r\n}\r\n\r\ninput:checked + .condition-slider:before {\r\n  transform: translateX(18px);\r\n}\r\n\r\n/* ======================================\r\n   Filtros (Whitelist/Blacklist)\r\n   ====================================== */\r\n.filter-lists {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.filter-list {\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n}\r\n\r\n.list-header {\r\n  background-color: #efe3c9;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #d7b56d;\r\n}\r\n\r\n.list-container {\r\n  padding: 15px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.description-text {\r\n  font-size: 11px;\r\n  color: #845d35;\r\n  margin-top: 2px;\r\n  margin-bottom: 5px;\r\n  padding-left: 2px;\r\n  line-height: 1.3;\r\n  font-style: italic;\r\n  max-width: 95%;\r\n}\r\n\r\n/* Itens de Lista */\r\n.names-list {\r\n  margin-bottom: 15px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  padding-right: 5px;\r\n}\r\n\r\n.dodge-name-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  background-color: #fff5da;\r\n  border: 1px solid #d4c59d;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.dodge-name-container:hover {\r\n  border-color: #bb8e41;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dodge-name-input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: none;\r\n  background-color: transparent!important;\r\n  color: #603000;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\n.dodge-name-input:focus {\r\n  outline: none;\r\n  background-color: #fffbec;\r\n}\r\n\r\n.ad-remove-name {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30px;\r\n  height: 36px;\r\n  background-color: #f3e6c8;\r\n  color: #a52a2a;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.ad-remove-name:hover {\r\n  background-color: #a52a2a;\r\n  color: white;\r\n}\r\n\r\n/* Botão de Adicionar */\r\n.ad-btn-add {\r\n  background-color: #804000;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.ad-btn-add:hover {\r\n  background-color: #6c9145;\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.ad-btn-add:before {\r\n  content: "+";\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Estilo da Scrollbar */\r\n.names-list::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.names-list::-webkit-scrollbar-track {\r\n  background: #f1e8d0;\r\n  border-radius: 3px;\r\n}\r\n\r\n.names-list::-webkit-scrollbar-thumb {\r\n  background-color: #d4c59d;\r\n  border-radius: 3px;\r\n}\r\n\r\n.names-list::-webkit-scrollbar-thumb:hover {\r\n  background-color: #bb8e41;\r\n}\r\n\r\n/* ======================================\r\n   Modal de Entrada de Nome\r\n   ====================================== */\r\n.ad-modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000000;\r\n  animation: adFadeIn 0.2s ease;\r\n}\r\n\r\n@keyframes adFadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n\r\n.ad-modal-content {\r\n  background-color: #f4e4bc;\r\n  border: 2px solid #804000;\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  max-width: 90%;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n  animation: adSlideDown 0.3s ease;\r\n}\r\n\r\n@keyframes adSlideDown {\r\n  from { transform: translateY(-30px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n.ad-modal-header {\r\n  background-color: #804000;\r\n  color: #f4e4bc;\r\n  padding: 12px 15px;\r\n  border-radius: 6px 6px 0 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.ad-modal-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.ad-modal-close {\r\n  background: none;\r\n  border: none;\r\n  color: #f4e4bc;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  line-height: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.ad-modal-close:hover {\r\n  color: #ff9e5e;\r\n}\r\n\r\n.ad-modal-body {\r\n  padding: 15px;\r\n}\r\n\r\n.ad-modal-body p {\r\n  margin: 0 0 12px 0;\r\n  color: #603000;\r\n  font-size: 14px;\r\n}\r\n\r\n.ad-name-input-field {\r\n  width: 95%;\r\n  padding: 10px;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 4px;\r\n  background-color: #fff5da;\r\n  color: #603000;\r\n  font-size: 14px;\r\n}\r\n\r\n.ad-name-input-field:focus {\r\n  outline: none;\r\n  border-color: #804000;\r\n  box-shadow: 0 0 0 2px rgba(128, 64, 0, 0.2);\r\n}\r\n\r\n.ad-modal-footer {\r\n  padding: 12px 15px;\r\n  border-top: 1px solid #d7b56d;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  background-color: #efe3c9;\r\n  border-radius: 0 0 6px 6px;\r\n}\r\n\r\n.ad-btn-cancel,\r\n.ad-btn-confirm {\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border: 1px solid transparent;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.ad-btn-cancel {\r\n  background-color: #e0c89f;\r\n  color: #603000;\r\n  border-color: #d7b56d;\r\n}\r\n\r\n.ad-btn-cancel:hover {\r\n  background-color: #d7b56d;\r\n}\r\n\r\n.ad-btn-confirm {\r\n  background-color: #804000;\r\n  color: white;\r\n  border-color: #6c9145;\r\n}\r\n\r\n.ad-btn-confirm:hover {\r\n  background-color: #6c9145;\r\n}\r\n\r\n/* ======================================\r\n   Rodapé do Diálogo\r\n   ====================================== */\r\n.dialog-footer {\r\n  padding: 15px 20px;\r\n  border-top: 1px solid #d7b56d;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  background-color: #efe3c9;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.dialog-button {\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.primary-button {\r\n  background-color: #804000;\r\n  color: white;\r\n  border-color: #6c9145;\r\n}\r\n\r\n.primary-button:hover {\r\n  background-color: #6c9145;\r\n}\r\n\r\n.secondary-button {\r\n  background-color: #e0c89f;\r\n  color: #603000;\r\n  border-color: #d7b56d;\r\n}\r\n\r\n.secondary-button:hover {\r\n  background-color: #d7b56d;\r\n}\r\n\r\n/* ======================================\r\n   Noble Snipe Settings\r\n   ====================================== */\r\n.noble-settings-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.settings-tabs {\r\n  display: flex;\r\n  border-bottom: 1px solid #d7b56d;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.settings-tab {\r\n  padding: 8px 15px;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  color: #603000;\r\n  border-bottom: 3px solid transparent;\r\n  margin-right: 5px;\r\n}\r\n\r\n.settings-tab:hover {\r\n  background-color: rgba(215, 181, 109, 0.2);\r\n}\r\n\r\n.settings-tab.active {\r\n  border-bottom-color: #804000;\r\n  font-weight: bold;\r\n}\r\n\r\n.settings-content {\r\n  position: relative;\r\n}\r\n\r\n.settings-tab-content {\r\n  display: none;\r\n}\r\n\r\n.settings-tab-content.active {\r\n  display: block;\r\n}\r\n\r\n.settings-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.setting-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.setting-item label {\r\n  color: #603000;\r\n  font-weight: bold;\r\n}\r\n\r\n.input-with-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.info-tooltip {\r\n  cursor: help;\r\n  color: #804000;\r\n}\r\n\r\n/* ======================================\r\n   Entradas e Formulários\r\n   ====================================== */\r\ninput[type="text"],\r\ninput[type="number"],\r\nselect,\r\ntextarea {\r\n  padding: 6px 10px;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  color: #603000;\r\n}\r\n\r\ninput[type="text"]:focus,\r\ninput[type="number"]:focus,\r\nselect:focus,\r\ntextarea:focus {\r\n  border-color: #804000;\r\n  outline: none;\r\n}\r\n\r\n/* ======================================\r\n   Noble Train Patterns\r\n   ====================================== */\r\n.pattern-header {\r\n  display: grid;\r\n  grid-template-columns: 120px 1fr 120px 40px;\r\n  gap: 10px;\r\n  padding: 8px 10px;\r\n  background-color: #efe3c9;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 4px 4px 0 0;\r\n  font-weight: bold;\r\n  color: #603000;\r\n}\r\n\r\n.pattern-item {\r\n  display: grid;\r\n  grid-template-columns: 120px 1fr 120px 40px;\r\n  gap: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #d7b56d;\r\n  border-top: none;\r\n  align-items: center;\r\n}\r\n\r\n.pattern-visual {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.noble-icon {\r\n  width: 25px;\r\n  height: 25px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.noble-icon.green {\r\n  background-color: #804000;\r\n}\r\n\r\n.noble-icon.full {\r\n  background-color: #d9534f;\r\n}\r\n\r\n.positions-input {\r\n  width: 100%;\r\n  padding: 5px;\r\n  background-color: #fff5da;\r\n  border: 1px solid #d4c59d;\r\n  border-radius: 3px;\r\n  color: #603000;\r\n}\r\n\r\n.action-select {\r\n  width: 100%;\r\n  padding: .3em;\r\n  background-color: #fff5da;\r\n  border: 1px solid #d4c59d;\r\n  border-radius: 3px;\r\n  color: #603000;\r\n}\r\n\r\n.add-pattern-container {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.pattern-input {\r\n  flex: 1;\r\n}\r\n\r\n.help-text {\r\n  color: #785838;\r\n  font-size: 13px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* ======================================\r\n   Media Queries para Responsividade\r\n   ====================================== */\r\n@media (max-width: 800px) {\r\n  .dialog-sidebar {\r\n    width: 60px;\r\n  }\r\n  \r\n  .nav-text {\r\n    display: none;\r\n  }\r\n  \r\n  .nav-button {\r\n  justify-content: center;\r\n  }\r\n  \r\n  .sidebar-header, .sidebar-footer {\r\n    display: none;\r\n  }\r\n  \r\n  .dialog-content {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .tab-content {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .option-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .filter-lists {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .fullscreen-dialog {\r\n    width: 95%;\r\n    height: 95%;\r\n  }\r\n  \r\n  .dialog-body {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .dialog-content {\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .dialog-sidebar {\r\n  width: 100%;\r\n    height: auto;\r\n    border-right: none;\r\n    border-bottom: 1px solid #d7b56d;\r\n    flex-direction: row;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .sidebar-nav {\r\n    flex-direction: row;\r\n  padding: 5px;\r\n    overflow-x: auto;\r\n  }\r\n  \r\n  .nav-button {\r\n    padding: 8px;\r\n    min-width: auto;\r\n  }\r\n}\r\n\r\n/* ======================================\r\n   Coming Soon Overlay\r\n   ====================================== */\r\n.coming-soon-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(244, 228, 188, 0.92);\r\n  z-index: 100;\r\n  backdrop-filter: blur(3px);\r\n  border-radius: inherit;\r\n  cursor: not-allowed;\r\n  box-shadow: inset 0 0 40px rgba(128, 64, 0, 0.15);\r\n  pointer-events: all; /* Garantir que cliques não passem para elementos abaixo */\r\n}\r\n\r\n.coming-soon-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 15px;\r\n  color: #804000;\r\n  animation: pulse 2s infinite;\r\n  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.coming-soon-text {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #603000;\r\n  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.5);\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.coming-soon-description {\r\n  font-size: 14px;\r\n  color: #603000;\r\n  text-align: center;\r\n  max-width: 80%;\r\n  line-height: 1.4;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n  padding: 10px 15px;\r\n  border-radius: 6px;\r\n  border: 1px solid rgba(128, 64, 0, 0.2);\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/* Modificador para quando usado dentro de um card */\r\n.card-body .coming-soon-overlay {\r\n  position: absolute;\r\n  min-height: unset;\r\n  margin: 0;\r\n  border-radius: 6px;\r\n  background-color: rgba(244, 228, 188, 0.92);\r\n}\r\n\r\n/* ======================================\r\n   Tarefas\r\n   ====================================== */\r\n.tasks-summary {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 15px;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.summary-card {\r\n  background: #f8f0d8;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\r\n  text-align: center;\r\n}\r\n\r\n.summary-title {\r\n  font-size: 14px;\r\n  color: #85662b;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.summary-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #704b15;\r\n}\r\n\r\n.tasks-list-container {\r\n  margin-top: 20px;\r\n  background: #f8f0d8;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  border: 1px solid #d7b56d;\r\n}\r\n\r\n.tasks-list-container h4 {\r\n  margin-top: 0;\r\n  margin-bottom: 15px;\r\n  color: #704b15;\r\n  border-bottom: 1px solid #d7b56d;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.tasks-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.task-item {\r\n  background: white;\r\n  border-radius: 6px;\r\n  padding: 12px;\r\n  border-left: 4px solid #bbbbbb;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.task-item.dodge-task {\r\n  border-left-color: #69b578;\r\n}\r\n\r\n.task-item.cancel-task {\r\n  border-left-color: #d4546a;\r\n}\r\n\r\n.task-item.snipe-task {\r\n  border-left-color: #e6aa68;\r\n}\r\n\r\n.task-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n}\r\n\r\n.task-type {\r\n  background: #f8f0d8;\r\n  padding: 3px 8px;\r\n  border-radius: 4px;\r\n  font-size: 13px;\r\n}\r\n\r\n.dodge-task .task-type {\r\n  background: #dcf2e3;\r\n  color: #357745;\r\n}\r\n\r\n.cancel-task .task-type {\r\n  background: #f9e1e5;\r\n  color: #ad3b50;\r\n}\r\n\r\n.snipe-task .task-type {\r\n  background: #f8edd7;\r\n  color: #b87920;\r\n}\r\n\r\n.task-details {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 13px;\r\n  color: #666;\r\n}\r\n\r\n.task-time, .countdown-value {\r\n  font-weight: bold;\r\n  color: #444;\r\n  margin-left: 5px;\r\n}\r\n\r\n.countdown-value {\r\n  color: #704b15;\r\n}\r\n\r\n.more-tasks {\r\n  text-align: center;\r\n  color: #85662b;\r\n  font-style: italic;\r\n  margin-top: 10px;\r\n  padding: 8px;\r\n  border-top: 1px dashed #d7b56d;\r\n}\r\n\r\n.no-tasks {\r\n  text-align: center;\r\n  padding: 30px;\r\n  color: #85662b;\r\n  font-style: italic;\r\n  background: #faf6e9;\r\n  border-radius: 6px;\r\n  border: 1px dashed #d7b56d;\r\n}\r\n\r\n/* ======================================\r\n   Modules\r\n   ====================================== */\r\n.modules-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.modules-description {\r\n  color: #603000;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.modules-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.modules-section-title {\r\n  font-size: 16px;\r\n  color: #603000;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 1px solid #d7b56d;\r\n}\r\n\r\n.modules-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.module-card {\r\n  background-color: #fff5da;\r\n  border: 1px solid #d7b56d;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.module-card:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.module-header {\r\n  background-color: #efe3c9;\r\n  padding: 12px 15px;\r\n  border-bottom: 1px solid #d7b56d;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.module-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-weight: bold;\r\n  color: #603000;\r\n}\r\n\r\n.module-icon {\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  color: #603000;\r\n}\r\n\r\n.module-body {\r\n  padding: 15px;\r\n}\r\n\r\n.module-description {\r\n  color: #603000;\r\n  margin-bottom: 15px;\r\n  font-size: 13px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.module-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.module-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-size: 12px;\r\n  color: #603000;\r\n}\r\n\r\n.status-indicator {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.status-enabled {\r\n  background-color: #69b578;\r\n}\r\n\r\n.status-disabled {\r\n  background-color: #d4546a;\r\n}\r\n\r\n.module-settings {\r\n  margin-top: 20px;\r\n  padding-top: 15px;\r\n  border-top: 1px solid #e2d5b4;\r\n}\r\n\r\n.module-settings-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.module-settings-title {\r\n  font-weight: bold;\r\n  color: #603000;\r\n  font-size: 14px;\r\n}\r\n\r\n.module-toggle-btn {\r\n  background: none;\r\n  border: none;\r\n  color: #804000;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n}\r\n\r\n.module-settings-content {\r\n  overflow: hidden;\r\n  transition: max-height 0.3s ease;\r\n}\r\n\r\n.module-settings-content.collapsed {\r\n  max-height: 0;\r\n}\r\n\r\n.module-settings-content.expanded {\r\n  max-height: 500px;\r\n}\r\n\r\n.module-keywords {\r\n  margin-top: 10px;\r\n}\r\n\r\n.keywords-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.keywords-title {\r\n  font-weight: bold;\r\n  color: #603000;\r\n  font-size: 13px;\r\n}\r\n\r\n.keywords-list {\r\n  margin: 10px 0;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.keyword-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  background-color: #fff5da;\r\n  border: 1px solid #d4c59d;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.keyword-input {\r\n  flex: 1;\r\n  padding: 6px 10px;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: #603000;\r\n}\r\n\r\n.keyword-remove {\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f3e6c8;\r\n  color: #a52a2a;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.keyword-add-btn {\r\n  padding: 5px 15px;\r\n  background-color: #804000;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.keyword-add-btn:before {\r\n  content: "+";\r\n  font-weight: bold;\r\n}\r\n\r\n.module-configure-btn {\r\n  padding: 5px 15px;\r\n  background-color: #804000;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n}\r\n\r\n.module-coming-soon {\r\n  position: relative;\r\n  overflow: hidden;\r\n  opacity: 0.7;\r\n}\r\n\r\n.module-coming-soon::after {\r\n  content: "Coming Soon";\r\n  position: absolute;\r\n  top: 15px;\r\n  right: -30px;\r\n  background-color: #804000;\r\n  color: white;\r\n  padding: 5px 30px;\r\n  font-size: 10px;\r\n  transform: rotate(45deg);\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.module-coming-soon .module-actions, \r\n.module-coming-soon .module-settings {\r\n  opacity: 0.5;\r\n  pointer-events: none;\r\n}\r\n\r\n/* Noble Snipe Tab Improvements */\r\n#noble-snipe .card-like-container {\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    margin: 15px 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n#noble-snipe .help-text {\r\n    color: #666;\r\n    font-size: 13px;\r\n    margin-bottom: 15px;\r\n    line-height: 1.5;\r\n}\r\n\r\n.pattern-controls-header {\r\n    margin-bottom: 15px;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.pattern-header {\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr 1fr 0.5fr;\r\n    gap: 10px;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    color: #555;\r\n}\r\n\r\n.pattern-header div {\r\n    padding: 5px 0;\r\n}\r\n\r\n.patterns-list {\r\n    max-height: 300px;\r\n    overflow-y: auto;\r\n    margin-bottom: 15px;\r\n    padding-right: 5px;\r\n}\r\n\r\n.patterns-list::-webkit-scrollbar {\r\n    width: 6px;\r\n}\r\n\r\n.patterns-list::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n    border-radius: 10px;\r\n}\r\n\r\n.patterns-list::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n    border-radius: 10px;\r\n}\r\n\r\n.patterns-list::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n}\r\n\r\n.pattern-item {\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr 1fr 0.5fr;\r\n    gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n    background-color: #f9f9f9;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.pattern-item:hover {\r\n    background-color: #f0f0f0;\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.help-header {\r\n    margin-bottom: 10px;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.help-header h4 {\r\n    margin: 0;\r\n    color: #333;\r\n    font-size: 14px;\r\n}\r\n\r\n.help-content {\r\n    color: #666;\r\n}\r\n\r\n.legend-items {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin: 10px 0;\r\n}\r\n\r\n.legend-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n}\r\n\r\n.legend-text {\r\n    font-size: 13px;\r\n}\r\n\r\n.positions-help {\r\n    margin-top: 10px;\r\n    font-size: 13px;\r\n    line-height: 1.5;\r\n}\r\n\r\n.add-pattern-container {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-top: 15px;\r\n    align-items: center;\r\n}\r\n\r\n.pattern-input {\r\n    flex: 1;\r\n}\r\n\r\n.pattern-input input {\r\n    width: 100%;\r\n    padding: 8px 12px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n}\r\n\r\n.add-pattern-btn {\r\n    background-color: #804000;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    padding: 8px 15px;\r\n    cursor: pointer;\r\n    font-size: 13px;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.add-pattern-btn:hover {\r\n    background-color: #45a049;\r\n}\r\n\r\n.remove-pattern-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #f44336;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.remove-pattern-btn:hover {\r\n    background-color: #ffebee;\r\n    transform: scale(1.1);\r\n}\r\n\r\n/* Adjust condition settings table */\r\n.condition-settings {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.condition-settings th {\r\n    background-color: #f5f5f5;\r\n    color: #333;\r\n    font-weight: bold;\r\n    padding: 10px;\r\n    text-align: left;\r\n    border-bottom: 2px solid #ddd;\r\n}\r\n\r\n.condition-settings td {\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n    color: #603000;\r\n    transition: background-color 0.2s ease;\r\n}\r\n\r\n.condition-settings tr:hover td {\r\n    background-color: rgba(255, 245, 218, 0.7);\r\n}\r\n\r\n.condition-name {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-weight: 500;\r\n}\r\n\r\n.condition-icon {\r\n    font-size: 16px;\r\n    width: 24px;\r\n    height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    background-color: #f0f0f0;\r\n}\r\n\r\n.priority-medium {\r\n    color: #ff9800;\r\n    font-weight: 500;\r\n    background-color: #fff3e0;\r\n    padding: 4px 8px;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n}\r\n\r\n/* Enhanced Noble Train Pattern Styles */\r\n.noble-train-patterns {\r\n    position: relative;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n.noble-train-patterns .help-text {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.pattern-builder-container {\r\n    background: linear-gradient(to right, #f9f6f0, #f5eee0);\r\n    border-radius: 8px;\r\n    border: 1px solid #e0d5c1;\r\n    padding: 15px;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.pattern-builder-title {\r\n    font-weight: bold;\r\n    color: #603000;\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    font-size: 14px;\r\n}\r\n\r\n.pattern-builder-title .icon {\r\n    font-size: 18px;\r\n}\r\n\r\n.pattern-preview {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.pattern-train-builder {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.pattern-slots {\r\n    display: flex;\r\n    gap: 8px;\r\n    min-height: 50px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    border: 1px dashed #d0c0a0;\r\n    border-radius: 4px;\r\n    padding: 8px;\r\n    flex: 1;\r\n}\r\n\r\n.pattern-controls {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n}\r\n\r\n.pattern-control-btn {\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: #fff;\r\n    border: 1px solid #d0c0a0;\r\n    color: #603000;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.pattern-control-btn:hover {\r\n    background: #f9f6f0;\r\n    transform: scale(1.05);\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.pattern-btn-icon {\r\n    font-size: 18px;\r\n}\r\n\r\n.pattern-tips {\r\n    background: rgba(255, 255, 255, 0.7);\r\n    border: 1px solid #e0d5c1;\r\n    border-radius: 4px;\r\n    padding: 5px;\r\n    color: #603000;\r\n    font-size: 13px;\r\n    line-height: 1.4;\r\n    font-style: italic;\r\n    text-align: center;\r\n}\r\n\r\n.noble-drag-item {\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: bold;\r\n    font-size: 14px;\r\n    color: white;\r\n    cursor: grab;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    transition: all 0.2s ease;\r\n    position: relative;\r\n    user-select: none;\r\n}\r\n\r\n.noble-drag-item.green {\r\n    background: #5cc500;\r\n    border: 2px solid #1b5e20;\r\n}\r\n\r\n.noble-drag-item.full {\r\n    background: linear-gradient(135deg, #f44336, #c62828);\r\n    border: 2px solid #b71c1c;\r\n}\r\n\r\n.noble-drag-item:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.noble-drag-item:active {\r\n    cursor: grabbing;\r\n    transform: scale(0.95);\r\n}\r\n\r\n.pattern-slot {\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 4px;\r\n    border: 1px dashed #d0c0a0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #a68c6d;\r\n    font-size: 12px;\r\n    transition: all 0.2s ease;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.pattern-slot:hover {\r\n    background: rgba(255, 255, 255, 0.9);\r\n    border-color: #bb8e41;\r\n    transform: scale(1.05);\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.pattern-slot.filled {\r\n    border: none;\r\n    background: transparent;\r\n}\r\n\r\n.pattern-slot:before {\r\n    content: "";\r\n    position: absolute;\r\n    inset: 0;\r\n    border: 2px dashed transparent;\r\n    border-radius: 4px;\r\n    pointer-events: none;\r\n    z-index: 2;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.pattern-slot:hover:before {\r\n    border-color: #bb8e41;\r\n}\r\n\r\n.pattern-slot.drop-hover:before {\r\n    border-color: #804000;\r\n    background: rgba(76, 175, 80, 0.1);\r\n}\r\n\r\n.target-indicator {\r\n    position: absolute;\r\n    top: -8px;\r\n    right: -8px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: #804000;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    font-size: 12px;\r\n    font-weight: bold;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid white;\r\n    z-index: 3;\r\n}\r\n\r\n.pattern-library {\r\n    background: #fff;\r\n    border: 1px solid #e0d5c1;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n}\r\n\r\n.pattern-library-header {\r\n    background: linear-gradient(to right, #f0e6d2, #e0d5c1);\r\n    padding: 12px 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-bottom: 1px solid #e0d5c1;\r\n}\r\n\r\n.pattern-library-title {\r\n    font-weight: bold;\r\n    color: #603000;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.pattern-library-count {\r\n    background: #603000;\r\n    color: white;\r\n    padding: 2px 8px;\r\n    border-radius: 10px;\r\n    font-size: 12px;\r\n    font-weight: bold;\r\n}\r\n\r\n.patterns-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    gap: 15px;\r\n    padding: 15px;\r\n    max-height: 300px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.pattern-card {\r\n    background: #f9f9f9;\r\n    border-radius: 8px;\r\n    border: 1px solid #e0e0e0;\r\n    padding: 12px;\r\n    transition: all 0.2s ease;\r\n    position: relative;\r\n}\r\n\r\n.pattern-card:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.pattern-card.pattern-disabled {\r\n    opacity: 0.6;\r\n    background-color: #f1f1f1;\r\n    border-color: #ddd;\r\n}\r\n\r\n.pattern-card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.pattern-status {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.pattern-toggle {\r\n    transform: scale(0.8);\r\n    margin-left: 5px;\r\n}\r\n\r\n.pattern-display {\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: center;\r\n}\r\n\r\n.pattern-target-positions {\r\n    margin: 10px 0;\r\n    padding: 10px 0;\r\n    border-top: 1px dashed #e0e0e0;\r\n}\r\n\r\n.pattern-targeting {\r\n    display: flex;\r\n    gap: 8px;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    margin-bottom: 12px;\r\n}\r\n\r\n.empty-target-message {\r\n    color: #999;\r\n    font-style: italic;\r\n    font-size: 12px;\r\n    margin-left: 8px;\r\n}\r\n\r\n.noble-icon-mini {\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 12px;\r\n    color: white;\r\n    font-weight: bold;\r\n}\r\n\r\n.noble-icon-mini.green {\r\n    background: #5cc500;\r\n    border: 1px solid #2e7d32;\r\n}\r\n\r\n.noble-icon-mini.full {\r\n    background: #f44336;\r\n    border: 1px solid #c62828;\r\n}\r\n\r\n.pattern-card-actions {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.pattern-action-select {\r\n    padding: 5px 8px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ccc;\r\n    background: white;\r\n    color: #333;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n}\r\n\r\n.pattern-action-select:focus {\r\n    outline: none;\r\n    border-color: #603000;\r\n}\r\n\r\n.pattern-action-display {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    font-size: 12px;\r\n    color: #555;\r\n}\r\n\r\n.action-badge {\r\n    padding: 2px 8px;\r\n    border-radius: 10px;\r\n    font-size: 11px;\r\n    font-weight: bold;\r\n    margin-left: 5px;\r\n}\r\n\r\n.action-badge.dodge {\r\n    background: #e3f2fd;\r\n    color: #1565c0;\r\n    border: 1px solid #bbdefb;\r\n}\r\n\r\n.action-badge.ignore {\r\n    background: #ffebee;\r\n    color: #c62828;\r\n    border: 1px solid #ffcdd2;\r\n}\r\n\r\n.pattern-card-buttons {\r\n    position: absolute;\r\n    top: 8px;\r\n    right: 8px;\r\n    display: flex;\r\n    gap: 5px;\r\n}\r\n\r\n.pattern-card-btn {\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid #ddd;\r\n    cursor: pointer;\r\n    font-size: 12px;\r\n    color: #555;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.pattern-card-btn:hover {\r\n    background: white;\r\n    transform: scale(1.1);\r\n}\r\n\r\n.pattern-card-btn.delete {\r\n    color: #f44336;\r\n}\r\n\r\n.pattern-card-btn.delete:hover {\r\n    background: #ffebee;\r\n    border-color: #ef9a9a;\r\n}\r\n\r\n.pattern-card-btn.edit {\r\n    color: #2196f3;\r\n}\r\n\r\n.pattern-card-btn.edit:hover {\r\n    background: #e3f2fd;\r\n    border-color: #90caf9;\r\n}\r\n\r\n.empty-patterns {\r\n    padding: 20px;\r\n    text-align: center;\r\n    color: #999;\r\n    font-style: italic;\r\n}\r\n\r\n.add-pattern-btn-large {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n    background: #804000;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    transition: all 0.3s;\r\n    margin: 15px auto;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.add-pattern-btn-large:hover {\r\n    background: #9d5813;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.add-pattern-btn-large .icon {\r\n    font-size: 16px;\r\n}\r\n\r\n/* Draggable interaction styles */\r\n.dragging {\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 1000;\r\n}\r\n\r\n.drop-hover {\r\n    background: rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.target-position {\r\n    width: 24px;\r\n    height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 12px;\r\n    border-radius: 4px;\r\n    background: #e8f5e9;\r\n    border: 1px solid #a5d6a7;\r\n    color: #2e7d32;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    user-select: none;\r\n}\r\n\r\n.target-position:hover {\r\n    background: #c8e6c9;\r\n    transform: scale(1.1);\r\n}\r\n\r\n.target-position.selected {\r\n    background: #5cc500 !important;\r\n    color: white;\r\n    border-color: #2e7d32;\r\n}`, ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack:///./src/ui/dialog.css?./node_modules/css-loader/dist/cjs.js??ruleSet%5B1%5D.rules%5B1%5D.use%5B1%5D')},"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?')},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/noSourceMaps.js?")},"./node_modules/sortablejs/modular/sortable.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MultiDrag: () => (/* binding */ MultiDragPlugin),\n/* harmony export */   Sortable: () => (/* binding */ Sortable),\n/* harmony export */   Swap: () => (/* binding */ SwapPlugin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**!\n * Sortable 1.15.6\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.6\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction matches( /**HTMLElement*/el, /**String*/selector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\nfunction closest( /**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n  return null;\n}\nvar R_SPACE = /\\s+/g;\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\nfunction css(el, prop, val) {\n  var style = el && el.style;\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n    return list;\n  }\n  return [];\n}\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n      } while (container = container.parentNode);\n    }\n  }\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n      visible = void 0;\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n  return false;\n}\n\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n    i = 0,\n    children = el.children;\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n    i++;\n  }\n  return null;\n}\n\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n  return last || null;\n}\n\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\nfunction index(el, selector) {\n  var index = 0;\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n  return index;\n}\n\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n  return [offsetLeft, offsetTop];\n}\n\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while (elem = elem.parentNode);\n  return getWindowScrollingElement();\n}\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n  return dst;\n}\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\nvar _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n        _this = this;\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\nfunction getChildContainingRectFromElement(container, options, ghostEl) {\n  var rect = {};\n  Array.from(container.children).forEach(function (child) {\n    var _rect$left, _rect$top, _rect$right, _rect$bottom;\n    if (!closest(child, options.draggable, container, false) || child.animated || child === ghostEl) return;\n    var childRect = getRect(child);\n    rect.left = Math.min((_rect$left = rect.left) !== null && _rect$left !== void 0 ? _rect$left : Infinity, childRect.left);\n    rect.top = Math.min((_rect$top = rect.top) !== null && _rect$top !== void 0 ? _rect$top : Infinity, childRect.top);\n    rect.right = Math.max((_rect$right = rect.right) !== null && _rect$right !== void 0 ? _rect$right : -Infinity, childRect.right);\n    rect.bottom = Math.max((_rect$bottom = rect.bottom) !== null && _rect$bottom !== void 0 ? _rect$bottom : -Infinity, childRect.bottom);\n  });\n  rect.width = rect.right - rect.left;\n  rect.height = rect.bottom - rect.top;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n    animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect);\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n      var animating = false,\n        animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n          target = state.target,\n          fromRect = target.fromRect,\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n        target.toRect = toRect;\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) &&\n          // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n          if (!time) {\n            time = _this.options.animation;\n          }\n          _this.animate(target, animatingRect, toRect, time);\n        }\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\nfunction repaint(target) {\n  return target.offsetWidth;\n}\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n    this.eventCanceled = false;\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      _extends(defaults, initialized.defaults);\n    });\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n    rootEl = _ref.rootEl,\n    name = _ref.name,\n    targetEl = _ref.targetEl,\n    cloneEl = _ref.cloneEl,\n    toEl = _ref.toEl,\n    fromEl = _ref.fromEl,\n    oldIndex = _ref.oldIndex,\n    newIndex = _ref.newIndex,\n    oldDraggableIndex = _ref.oldDraggableIndex,\n    newDraggableIndex = _ref.newDraggableIndex,\n    originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n    options = sortable.options,\n    onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    originalEvent = _ref.evt,\n    data = _objectWithoutProperties(_ref, _excluded);\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\nvar dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [],\n  // (left, top)\n\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nvar documentExists = typeof document !== 'undefined',\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n  supportCssPointerEvents = function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    var el = document.createElement('x');\n    el.style.cssText = 'pointer-events:auto';\n    return el.style.pointerEvents === 'auto';\n  }(),\n  _detectDirection = function _detectDirection(el, options) {\n    var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n    if (elCSS.display === 'flex') {\n      return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n    }\n    if (elCSS.display === 'grid') {\n      return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n    }\n    if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n      var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n      return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n    }\n    return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n  },\n  _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n    var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n    return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n  },\n  /**\r\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n   * @param  {Number} x      X position\r\n   * @param  {Number} y      Y position\r\n   * @return {HTMLElement}   Element of the first found nearest Sortable\r\n   */\n  _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n    var ret;\n    sortables.some(function (sortable) {\n      var threshold = sortable[expando].options.emptyInsertThreshold;\n      if (!threshold || lastChild(sortable)) return;\n      var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n      if (insideHorizontally && insideVertically) {\n        return ret = sortable;\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function _prepareGroup(options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === 'clone') {\n          return value;\n        } else if (typeof value === 'function') {\n          return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n        } else {\n          var otherGroup = (pull ? to : from).options.group.name;\n          return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n        }\n      };\n    }\n    var group = {};\n    var originalGroup = options.group;\n    if (!originalGroup || _typeof(originalGroup) != 'object') {\n      originalGroup = {\n        name: originalGroup\n      };\n    }\n    group.name = originalGroup.name;\n    group.checkPull = toFn(originalGroup.pull, true);\n    group.checkPut = toFn(originalGroup.put);\n    group.revertClone = originalGroup.revertClone;\n    options.group = group;\n  },\n  _hideGhostForTarget = function _hideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', 'none');\n    }\n  },\n  _unhideGhostForTarget = function _unhideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', '');\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists && !ChromeForAndroid) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n  this.el = el; // root element\n  this.options = options = _extends({}, options);\n\n  // Export instance\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    // Disabled on Safari: #1571; Enabled on Safari IOS: #2244\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && (!Safari || IOS),\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store && options.store.get && this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  _extends(this, AnimationStateManager());\n}\nSortable.prototype = /** @lends Sortable.prototype */{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart( /** Event|TouchEvent */evt) {\n    if (!evt.cancelable) return;\n    var _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n      target = (touch || evt).target,\n      originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n      filter = options.filter;\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n    target = closest(target, options.draggable, el, false);\n    if (target && target.animated) {\n      return;\n    }\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n      if (filter) {\n        preventOnFilter && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart( /** Event */evt, /** Touch */touch, /** HTMLElement */target) {\n    var _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      if (options.supportPointer) {\n        on(ownerDocument, 'pointerup', _this._onDrop);\n        // Native D&D triggers pointercancel\n        !this.nativeDraggable && on(ownerDocument, 'pointercancel', _this._onDrop);\n      } else {\n        on(ownerDocument, 'mouseup', _this._onDrop);\n        on(ownerDocument, 'touchend', _this._onDrop);\n        on(ownerDocument, 'touchcancel', _this._onDrop);\n      }\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n      pluginEvent('delayStart', this, {\n        evt: evt\n      });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        if (options.supportPointer) {\n          on(ownerDocument, 'pointerup', _this._disableDelayedDrag);\n          on(ownerDocument, 'pointercancel', _this._disableDelayedDrag);\n        } else {\n          on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n          on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n          on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        }\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler( /** TouchEvent|PointerEvent **/e) {\n    var touch = e.touches ? e.touches[0] : e;\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'pointerup', this._disableDelayedDrag);\n    off(ownerDocument, 'pointercancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart( /** Event */evt, /** Touch */touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n    try {\n      if (document.selection) {\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n      var options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n      _hideGhostForTarget();\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n          target = parent; // store last element\n        }\n        /* jshint boss:true */ while (parent = getParentOrHost(parent));\n      }\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove( /**TouchEvent*/evt) {\n    if (tapEvt) {\n      var options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n        dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n        dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart( /**Event*/evt, /**boolean*/fallback) {\n    var _this = this;\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n    pluginEvent('setupClone', this);\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.removeAttribute(\"id\");\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n      this._hideClone();\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n      on(document, 'drop', _this);\n\n      // #1276 fix:\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n    window.getSelection().removeAllRanges();\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver( /**Event*/evt) {\n    var el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n    if (_silent) return;\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    }\n\n    // Capture animation state\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n    ignoreNextClick = false;\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n        this._hideClone();\n        dragOverEvent('revert');\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n        return completed(true);\n      }\n      var elLastChild = lastChild(el, options.draggable);\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // if there is a last element, it is the target\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n        if (target) {\n          targetRect = getRect(target);\n        }\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          if (elLastChild && elLastChild.nextSibling) {\n            // the last draggable element is not the last node\n            el.insertBefore(dragEl, elLastChild.nextSibling);\n          } else {\n            el.appendChild(dragEl);\n          }\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n        target = firstChild;\n        targetRect = getRect(target);\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n          side1 = vertical ? 'top' : 'left',\n          scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n          after = false;\n        after = direction === 1;\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n          changed();\n          return completed(true);\n        }\n      }\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'pointercancel', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop( /**Event*/evt) {\n    var el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n    css(dragEl, 'transform', '');\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n        _disableDraggable(dragEl);\n        dragEl.style['will-change'] = '';\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent( /**Event*/evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n        break;\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\n  toArray: function toArray() {\n    var order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n    return order;\n  },\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n      rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n  /**\r\n   * Save the current sorting\r\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\n  option: function option(name, value) {\n    var options = this.options;\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n  /**\r\n   * Destroy\r\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n    this._onDrop();\n    this._disableDelayedDragEvents();\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n      return;\n    }\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\nfunction _globalDragOver( /**Event*/evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n  evt.cancelable && evt.preventDefault();\n}\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n  return retVal;\n}\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\nfunction _unsilent() {\n  _silent = false;\n}\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var firstElRect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var childContainingRect = getChildContainingRectFromElement(sortable.el, sortable.options, ghostEl);\n  var spacer = 10;\n  return vertical ? evt.clientX < childContainingRect.left - spacer || evt.clientY < firstElRect.top && evt.clientX < firstElRect.right : evt.clientY < childContainingRect.top - spacer || evt.clientY < firstElRect.bottom && evt.clientX < firstElRect.left;\n}\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var lastElRect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var childContainingRect = getChildContainingRectFromElement(sortable.el, sortable.options, ghostEl);\n  var spacer = 10;\n  return vertical ? evt.clientX > childContainingRect.right + spacer || evt.clientY > lastElRect.bottom && evt.clientX > lastElRect.left : evt.clientY > childContainingRect.bottom + spacer || evt.clientX > lastElRect.right && evt.clientY > lastElRect.top;\n}\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n  invert = invert || invertSwap;\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n  return 0;\n}\n\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n  return sum.toString(36);\n}\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild,\n  expando: expando\n};\n\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nvar autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt$1,\n  pointerElemChangedInterval;\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    };\n\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n  var layersOut = 0;\n  var currentParent = scrollEl;\n  do {\n    var el = currentParent,\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX = void 0,\n      canScrollY = void 0,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n          }\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    dragEl = _ref.dragEl,\n    activeSortable = _ref.activeSortable,\n    dispatchSortableEvent = _ref.dispatchSortableEvent,\n    hideGhostForTarget = _ref.hideGhostForTarget,\n    unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\nfunction Revert() {}\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n      putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\nfunction Remove() {}\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n      putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n        target = _ref2.target,\n        onMove = _ref2.onMove,\n        activeSortable = _ref2.activeSortable,\n        changed = _ref2.changed,\n        cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n        putSortable = _ref3.putSortable,\n        dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect,\n  // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false,\n  // Initial multi-drag fold when drag started\n  folding = false,\n  // Folding any other time\n  dragStarted = false,\n  dragEl$1,\n  clonesFromRect,\n  clonesHidden;\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n    if (!sortable.options.avoidImplicitDeselect) {\n      if (sortable.options.supportPointer) {\n        on(document, 'pointerup', this._deselectMultiDrag);\n      } else {\n        on(document, 'mouseup', this._deselectMultiDrag);\n        on(document, 'touchend', this._deselectMultiDrag);\n      }\n    }\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      avoidImplicitDeselect: false,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n        cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n      sortable._hideClone();\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n        rootEl = _ref3.rootEl,\n        dispatchSortableEvent = _ref3.dispatchSortableEvent,\n        cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n        rootEl = _ref4.rootEl,\n        cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n      var sortable = _ref5.sortable,\n        cloneNowHidden = _ref5.cloneNowHidden,\n        cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n        completed = _ref8.completed,\n        cancel = _ref8.cancel;\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n        rootEl = _ref9.rootEl,\n        sortable = _ref9.sortable,\n        dragRect = _ref9.dragRect;\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n        isOwner = _ref10.isOwner,\n        insertion = _ref10.insertion,\n        activeSortable = _ref10.activeSortable,\n        parentEl = _ref10.parentEl,\n        putSortable = _ref10.putSortable;\n      var options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n        isOwner = _ref11.isOwner,\n        activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n        rootEl = _ref12.rootEl,\n        parentEl = _ref12.parentEl,\n        sortable = _ref12.sortable,\n        dispatchSortableEvent = _ref12.dispatchSortableEvent,\n        oldIndex = _ref12.oldIndex,\n        putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n              currentIndex = index(dragEl$1);\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              (function () {\n                // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n                // (but previous selection existed)\n                var n, i;\n                if (currentIndex > lastIndex) {\n                  i = lastIndex;\n                  n = currentIndex;\n                } else {\n                  i = currentIndex;\n                  n = lastIndex + 1;\n                }\n                var filter = options.filter;\n                for (; i < n; i++) {\n                  if (~multiDragElements.indexOf(children[i])) continue;\n                  // Check if element is draggable\n                  if (!closest(children[i], options.draggable, parentEl, false)) continue;\n                  // Check if element is filtered\n                  var filtered = filter && (typeof filter === 'function' ? filter.call(sortable, evt, children[i], sortable) : filter.split(',').some(function (criteria) {\n                    return closest(children[i], criteria.trim(), parentEl, false);\n                  }));\n                  if (filtered) continue;\n                  toggleClass(children[i], options.selectedClass, true);\n                  multiDragElements.push(children[i]);\n                  dispatchEvent({\n                    sortable: sortable,\n                    rootEl: rootEl,\n                    name: 'select',\n                    targetEl: children[i],\n                    originalEvent: evt\n                  });\n                }\n              })();\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        folding = false;\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n            multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n              if (update) {\n                dispatchSortableEvent('update');\n                dispatchSortableEvent('sort');\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvent: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n      var oldIndicies = [],\n        newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        });\n\n        // multiDragElements will already be sorted if folding\n        var newIndex;\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      }\n    }\n  });\n}\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sortable);\n\n\n\n//# sourceURL=webpack:///./node_modules/sortablejs/modular/sortable.esm.js?")},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?')},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js?')},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js?')},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?')},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js?')},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js?")},"./src/TaskManager/TaskManager.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TaskManager = void 0;\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar types_1 = __webpack_require__(/*! ./types */ "./src/TaskManager/types.ts");\nvar utils_1 = __webpack_require__(/*! ./utils */ "./src/TaskManager/utils.ts");\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/TaskManager/storage.ts");\nvar handlers_1 = __webpack_require__(/*! ./handlers */ "./src/TaskManager/handlers/index.ts");\nvar TaskManager = /** @class */ (function () {\n    function TaskManager() {\n        this.tasks = new Map();\n        this.activeTimers = new Map();\n        this.isProcessing = false;\n        this.initialize();\n    }\n    /**\n     * Obtém a instância do TaskManager (padrão Singleton)\n     */\n    TaskManager.getInstance = function () {\n        if (!TaskManager.instance) {\n            TaskManager.instance = new TaskManager();\n        }\n        return TaskManager.instance;\n    };\n    /**\n     * Inicializa o TaskManager carregando tarefas salvas e configurando processamento\n     */\n    TaskManager.prototype.initialize = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var savedTasks;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0, logging_utils_1.sendLog)("Inicializando TaskManager...", "info");\n                        return [4 /*yield*/, storage_1.TaskStorage.loadTasks()];\n                    case 1:\n                        savedTasks = _a.sent();\n                        if (savedTasks && savedTasks.length > 0) {\n                            savedTasks.forEach(function (task) {\n                                _this.tasks.set(task.id, task);\n                            });\n                            (0, logging_utils_1.sendLog)("".concat(savedTasks.length, " tarefas carregadas do armazenamento"), "info");\n                        }\n                        // Iniciar processamento de tarefas agendadas\n                        this.scheduleTaskProcessing();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Configura processamento periódico de tarefas\n     */\n    TaskManager.prototype.scheduleTaskProcessing = function () {\n        var _this = this;\n        // Verificar tarefas a cada 500ms para maior precisão\n        setInterval(function () {\n            _this.processScheduledTasks();\n        }, 500);\n        // Adicionalmente, programar verificações pontuais para tarefas iminentes\n        var checkImminentTasks = function () {\n            try {\n                var now_1 = new Date();\n                var nextMinute_1 = new Date(now_1.getTime() + 60 * 1000);\n                // Verificar tarefas que serão executadas em breve (próximo minuto)\n                var imminentTasks = _this.getTasksByStatus(types_1.TaskStatus.SCHEDULED)\n                    .filter(function (task) {\n                    if (!task.scheduledFor)\n                        return false;\n                    var scheduledTime;\n                    if (task.scheduledFor instanceof Date) {\n                        scheduledTime = task.scheduledFor;\n                    }\n                    else if (typeof task.scheduledFor === \'string\') {\n                        scheduledTime = new Date(task.scheduledFor);\n                    }\n                    else {\n                        return false;\n                    }\n                    return scheduledTime.getTime() > now_1.getTime() &&\n                        scheduledTime.getTime() <= nextMinute_1.getTime();\n                });\n                if (imminentTasks.length > 0) {\n                    imminentTasks.forEach(function (task) {\n                        var timeDiff = task.scheduledFor instanceof Date\n                            ? task.scheduledFor.getTime() - now_1.getTime()\n                            : 0;\n                        if (timeDiff <= 0) {\n                            // Já deveria ter sido executada, executar imediatamente\n                            _this.executeTask(task.id);\n                        }\n                        else {\n                            // Programar execução precisa\n                            var timer = setTimeout(function () {\n                                _this.executeTask(task.id);\n                            }, timeDiff);\n                            _this.activeTimers.set(task.id, timer);\n                            (0, logging_utils_1.sendLog)("Agendamento preciso para tarefa ".concat(task.id, " em ").concat(Math.floor(timeDiff / 1000), "s"), "debug");\n                        }\n                    });\n                }\n                // Agendar próxima verificação\n                setTimeout(checkImminentTasks, 15 * 1000); // A cada 15 segundos\n            }\n            catch (error) {\n                (0, logging_utils_1.sendLog)("Erro ao verificar tarefas iminentes: ".concat(error), "error");\n                setTimeout(checkImminentTasks, 30 * 1000); // Tentar novamente após 30s em caso de erro\n            }\n        };\n        // Iniciar verificação de tarefas iminentes\n        checkImminentTasks();\n    };\n    /**\n     * Adicionar uma nova tarefa\n     */\n    TaskManager.prototype.addTask = function (task) {\n        var newTask = __assign(__assign({}, task), { id: (0, utils_1.generateId)(), createdAt: new Date(), status: types_1.TaskStatus.PENDING, retries: 0 });\n        this.tasks.set(newTask.id, newTask);\n        (0, logging_utils_1.sendLog)("Tarefa adicionada: ".concat(newTask.id, " (").concat(newTask.type, ")"), "info");\n        // Salvar no armazenamento\n        storage_1.TaskStorage.saveTasks(Array.from(this.tasks.values()));\n        // Agendar a tarefa se tiver uma data programada\n        this.scheduleTask(newTask);\n        return newTask;\n    };\n    /**\n     * Agendar uma tarefa para execução em um momento específico\n     */\n    TaskManager.prototype.scheduleTask = function (task) {\n        var _this = this;\n        // Se a tarefa tem uma data programada e está pendente\n        if (task.scheduledFor && task.status === types_1.TaskStatus.PENDING) {\n            var now = new Date();\n            // Garantir que task.scheduledFor seja uma instância de Date\n            var scheduledTime = void 0;\n            if (task.scheduledFor instanceof Date) {\n                scheduledTime = task.scheduledFor;\n            }\n            else if (typeof task.scheduledFor === \'string\') {\n                // Tentar converter string para Date\n                scheduledTime = new Date(task.scheduledFor);\n            }\n            else {\n                (0, logging_utils_1.sendLog)("Erro ao agendar tarefa ".concat(task.id, ": scheduledFor n\\u00E3o \\u00E9 uma data v\\u00E1lida"), "error");\n                return;\n            }\n            var delay = scheduledTime.getTime() - now.getTime();\n            // Se a data já passou, execute imediatamente\n            if (delay <= 0) {\n                this.executeTask(task.id);\n                return;\n            }\n            // Cancelar timer existente se houver\n            if (this.activeTimers.has(task.id)) {\n                clearTimeout(this.activeTimers.get(task.id));\n            }\n            // Configurar novo timer\n            var timerId = setTimeout(function () {\n                _this.executeTask(task.id);\n            }, delay);\n            this.activeTimers.set(task.id, timerId);\n            // Atualizar status\n            task.status = types_1.TaskStatus.SCHEDULED;\n            (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " agendada para ").concat(scheduledTime.toLocaleString()), "info");\n            // Salvar no armazenamento\n            storage_1.TaskStorage.saveTasks(Array.from(this.tasks.values()));\n        }\n    };\n    /**\n     * Processa tarefas agendadas que estão prontas para execução\n     */\n    TaskManager.prototype.processScheduledTasks = function () {\n        var _this = this;\n        if (this.isProcessing)\n            return;\n        this.isProcessing = true;\n        try {\n            var now_2 = new Date();\n            (0, logging_utils_1.sendLog)("Verificando tarefas agendadas em: ".concat(now_2.toISOString()), "debug");\n            var pendingTasks = this.getTasksByStatus(types_1.TaskStatus.SCHEDULED)\n                .filter(function (task) {\n                var _a;\n                // Verificar se scheduledFor é uma data válida\n                if (!task.scheduledFor)\n                    return false;\n                var scheduledTime;\n                try {\n                    if (task.scheduledFor instanceof Date) {\n                        scheduledTime = task.scheduledFor;\n                    }\n                    else if (typeof task.scheduledFor === \'string\') {\n                        // Tentar converter string para Date\n                        scheduledTime = new Date(task.scheduledFor);\n                        // Atualizar a tarefa com o valor convertido\n                        task.scheduledFor = scheduledTime;\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " tem scheduledFor inv\\u00E1lido: ").concat(typeof task.scheduledFor), "warning");\n                        return false;\n                    }\n                    // Verificar se a data resultante é válida\n                    if (isNaN(scheduledTime.getTime())) {\n                        (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " tem scheduledFor com data inv\\u00E1lida"), "warning");\n                        return false;\n                    }\n                    // Verificar se o tempo de execução já chegou\n                    var shouldExecute = scheduledTime.getTime() <= now_2.getTime();\n                    // Ajustar a hora de execução para evitar atrasos excessivos\n                    var timeUntilExecution = Math.max(0, scheduledTime.getTime() - now_2.getTime());\n                    if (timeUntilExecution > 24 * 60 * 60 * 1000) { // Mais de 24 horas\n                        (0, logging_utils_1.sendLog)("Aviso: Tarefa ".concat(task.id, " est\\u00E1 agendada para muito tempo no futuro (").concat(Math.floor(timeUntilExecution / 1000 / 60 / 60), " horas)"), "warning");\n                    }\n                    if (shouldExecute) {\n                        var commandName = ((_a = task.command) === null || _a === void 0 ? void 0 : _a.name) || "Desconhecido";\n                        (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " (").concat(task.type, ") para \\"").concat(commandName, "\\" est\\u00E1 pronta para execu\\u00E7\\u00E3o"), "info");\n                    }\n                    return shouldExecute;\n                }\n                catch (error) {\n                    (0, logging_utils_1.sendLog)("Erro ao processar scheduledFor da tarefa ".concat(task.id, ": ").concat(error), "error");\n                    return false;\n                }\n            });\n            if (pendingTasks.length > 0) {\n                (0, logging_utils_1.sendLog)("".concat(pendingTasks.length, " tarefas prontas para execu\\u00E7\\u00E3o"), "info");\n            }\n            // Ordenar por prioridade\n            pendingTasks.sort(function (a, b) { return a.priority - b.priority; });\n            // Executar tarefas pendentes\n            for (var _i = 0, pendingTasks_1 = pendingTasks; _i < pendingTasks_1.length; _i++) {\n                var task = pendingTasks_1[_i];\n                this.executeTask(task.id);\n            }\n            // Manutenção: Verificar tarefas agendadas e mostrar as próximas\n            var scheduledTasks = this.getTasksByStatus(types_1.TaskStatus.SCHEDULED);\n            if (scheduledTasks.length > 0) {\n                var nextTasks = scheduledTasks\n                    .filter(function (task) { return task.scheduledFor instanceof Date; })\n                    .sort(function (a, b) { return a.scheduledFor.getTime() - b.scheduledFor.getTime(); })\n                    .slice(0, 3);\n                if (nextTasks.length > 0) {\n                    nextTasks.forEach(function (task) {\n                        var timeUntil = task.scheduledFor instanceof Date ?\n                            Math.floor((task.scheduledFor.getTime() - now_2.getTime()) / 1000) : 0;\n                        if (timeUntil < 0) {\n                            // Tarefa atrasada, executar imediatamente\n                            (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " (").concat(task.type, ") est\\u00E1 atrasada, executando imediatamente"), "warning");\n                            _this.executeTask(task.id);\n                        }\n                        else if (timeUntil < 300) { // Menos de 5 minutos\n                            (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " (").concat(task.type, ") ser\\u00E1 executada em breve (").concat(timeUntil, "s)"), "info");\n                        }\n                    });\n                }\n            }\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao processar tarefas agendadas: ".concat(error), "error");\n        }\n        finally {\n            this.isProcessing = false;\n        }\n    };\n    /**\n     * Executa uma tarefa específica pelo ID\n     */\n    TaskManager.prototype.executeTask = function (taskId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var task, pendingDependencies, commandName, success, error_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        task = this.tasks.get(taskId);\n                        if (!task) {\n                            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " n\\u00E3o encontrada para execu\\u00E7\\u00E3o"), "error");\n                            return [2 /*return*/];\n                        }\n                        // Verificar se a tarefa já está em execução ou concluída\n                        if (task.status === types_1.TaskStatus.RUNNING) {\n                            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " j\\u00E1 est\\u00E1 em execu\\u00E7\\u00E3o"), "warning");\n                            return [2 /*return*/];\n                        }\n                        if (task.status === types_1.TaskStatus.COMPLETED) {\n                            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " j\\u00E1 est\\u00E1 conclu\\u00EDda"), "warning");\n                            return [2 /*return*/];\n                        }\n                        // Verificar dependências\n                        if (task.dependencies && task.dependencies.length > 0) {\n                            pendingDependencies = task.dependencies.filter(function (depId) {\n                                var dep = _this.tasks.get(depId);\n                                return !dep || dep.status !== types_1.TaskStatus.COMPLETED;\n                            });\n                            if (pendingDependencies.length > 0) {\n                                (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " aguardando depend\\u00EAncias: ").concat(pendingDependencies.join(\', \')), "info");\n                                return [2 /*return*/];\n                            }\n                        }\n                        // Verificar se o comando ainda existe e é válido\n                        if (!task.command) {\n                            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " n\\u00E3o tem comando associado"), "error");\n                            this.failTask(taskId, "Comando não encontrado");\n                            return [2 /*return*/];\n                        }\n                        // Atualizar status\n                        task.status = types_1.TaskStatus.RUNNING;\n                        task.startedAt = new Date();\n                        // Remover timer se existir\n                        if (this.activeTimers.has(taskId)) {\n                            clearTimeout(this.activeTimers.get(taskId));\n                            this.activeTimers.delete(taskId);\n                        }\n                        commandName = task.command.name || "Desconhecido";\n                        (0, logging_utils_1.sendLog)("Executando tarefa ".concat(taskId, " (").concat(task.type, ") para comando \\"").concat(commandName, "\\""), "info");\n                        // Verificações específicas por tipo\n                        if (task.type === types_1.TaskType.DODGE && !task.command.dodgeDestination) {\n                            (0, logging_utils_1.sendLog)("Tarefa de dodge ".concat(taskId, " n\\u00E3o tem destino definido"), "warning");\n                        }\n                        // Salvar no armazenamento\n                        storage_1.TaskStorage.saveTasks(Array.from(this.tasks.values()));\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, (0, handlers_1.executeTask)(task)];\n                    case 2:\n                        success = _a.sent();\n                        if (success) {\n                            this.completeTask(taskId);\n                        }\n                        else {\n                            this.failTask(taskId, "Falha na execução da tarefa");\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        (0, logging_utils_1.sendLog)("Erro detalhado na execu\\u00E7\\u00E3o da tarefa ".concat(taskId, ": ").concat(JSON.stringify(error_1)), "error");\n                        this.failTask(taskId, "Erro ao executar tarefa: ".concat(error_1));\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Marca uma tarefa como concluída\n     */\n    TaskManager.prototype.completeTask = function (taskId) {\n        var task = this.tasks.get(taskId);\n        if (!task) {\n            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " n\\u00E3o encontrada para marcar como conclu\\u00EDda"), "error");\n            return;\n        }\n        task.status = types_1.TaskStatus.COMPLETED;\n        task.completedAt = new Date();\n        (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " conclu\\u00EDda com sucesso"), "info");\n        // Executar callback se existir\n        if (task.callback) {\n            try {\n                task.callback();\n            }\n            catch (error) {\n                (0, logging_utils_1.sendLog)("Erro ao executar callback da tarefa ".concat(taskId, ": ").concat(error), "error");\n            }\n        }\n        // Verificar se há tarefas dependentes que podem ser executadas agora\n        this.checkDependentTasks(taskId);\n        // Salvar no armazenamento\n        storage_1.TaskStorage.saveTasks(Array.from(this.tasks.values()));\n    };\n    /**\n     * Marca uma tarefa como falha\n     */\n    TaskManager.prototype.failTask = function (taskId, error) {\n        var _this = this;\n        var _a, _b, _c;\n        var task = this.tasks.get(taskId);\n        if (!task) {\n            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " n\\u00E3o encontrada para marcar como falha"), "error");\n            return;\n        }\n        task.retries = (task.retries || 0) + 1;\n        task.error = error;\n        // Verificar se deve tentar novamente\n        var maxRetries = ((_a = task.config) === null || _a === void 0 ? void 0 : _a.maxRetries) || 3;\n        if (task.retries < maxRetries) {\n            var retryDelay = ((_b = task.config) === null || _b === void 0 ? void 0 : _b.retryDelay) || 5000;\n            task.status = types_1.TaskStatus.PENDING;\n            (0, logging_utils_1.sendLog)("Tentando novamente tarefa ".concat(taskId, " (tentativa ").concat(task.retries, "/").concat(maxRetries, ") em ").concat(retryDelay, "ms"), "warning");\n            // Agendar nova tentativa\n            setTimeout(function () {\n                _this.executeTask(taskId);\n            }, retryDelay);\n        }\n        else {\n            task.status = types_1.TaskStatus.FAILED;\n            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " falhou ap\\u00F3s ").concat(task.retries, " tentativas: ").concat(error), "error");\n            // Notificar falha se configurado\n            if ((_c = task.config) === null || _c === void 0 ? void 0 : _c.notifyOnFail) {\n                // TODO: Implementar sistema de notificação\n            }\n        }\n        // Salvar no armazenamento\n        storage_1.TaskStorage.saveTasks(Array.from(this.tasks.values()));\n    };\n    /**\n     * Verifica tarefas que dependem de uma tarefa recém-concluída\n     */\n    TaskManager.prototype.checkDependentTasks = function (completedTaskId) {\n        var _this = this;\n        var _a;\n        var dependentTasks = Array.from(this.tasks.values())\n            .filter(function (task) {\n            var _a;\n            return task.status === types_1.TaskStatus.PENDING &&\n                ((_a = task.dependencies) === null || _a === void 0 ? void 0 : _a.includes(completedTaskId));\n        });\n        // Verificar cada tarefa dependente\n        for (var _i = 0, dependentTasks_1 = dependentTasks; _i < dependentTasks_1.length; _i++) {\n            var task = dependentTasks_1[_i];\n            var allDependenciesMet = (_a = task.dependencies) === null || _a === void 0 ? void 0 : _a.every(function (depId) {\n                var dep = _this.tasks.get(depId);\n                return dep && dep.status === types_1.TaskStatus.COMPLETED;\n            });\n            if (allDependenciesMet) {\n                (0, logging_utils_1.sendLog)("Todas as depend\\u00EAncias da tarefa ".concat(task.id, " foram atendidas. Agendando para execu\\u00E7\\u00E3o."), "info");\n                this.scheduleTask(task);\n            }\n        }\n    };\n    /**\n     * Cancela uma tarefa pelo ID\n     */\n    TaskManager.prototype.cancelTask = function (taskId) {\n        var task = this.tasks.get(taskId);\n        if (!task) {\n            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " n\\u00E3o encontrada para cancelamento"), "error");\n            return false;\n        }\n        // Cancelar apenas se não estiver concluída ou falha\n        if (task.status !== types_1.TaskStatus.COMPLETED && task.status !== types_1.TaskStatus.FAILED) {\n            // Limpar timer se existir\n            if (this.activeTimers.has(taskId)) {\n                clearTimeout(this.activeTimers.get(taskId));\n                this.activeTimers.delete(taskId);\n            }\n            task.status = types_1.TaskStatus.CANCELLED;\n            (0, logging_utils_1.sendLog)("Tarefa ".concat(taskId, " cancelada"), "info");\n            // Salvar no armazenamento\n            storage_1.TaskStorage.saveTasks(Array.from(this.tasks.values()));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Obtém tarefas por status\n     */\n    TaskManager.prototype.getTasksByStatus = function (status) {\n        return Array.from(this.tasks.values())\n            .filter(function (task) { return task.status === status; });\n    };\n    /**\n     * Obtém tarefas por tipo\n     */\n    TaskManager.prototype.getTasksByType = function (type) {\n        return Array.from(this.tasks.values())\n            .filter(function (task) { return task.type === type; });\n    };\n    /**\n     * Obtém tarefas por prioridade\n     */\n    TaskManager.prototype.getTasksByPriority = function (priority) {\n        return Array.from(this.tasks.values())\n            .filter(function (task) { return task.priority === priority; });\n    };\n    /**\n     * Limpa tarefas concluídas e falhas antigas\n     */\n    TaskManager.prototype.cleanupTasks = function (olderThan) {\n        if (olderThan === void 0) { olderThan = new Date(Date.now() - 24 * 60 * 60 * 1000); }\n        var count = 0;\n        // Usar Array.from para converter as entradas do Map em um array compatível com todos os alvos\n        var entries = Array.from(this.tasks.entries());\n        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n            var _a = entries_1[_i], id = _a[0], task = _a[1];\n            // Remover tarefas concluídas, falhas ou canceladas mais antigas que o parâmetro\n            if ((task.status === types_1.TaskStatus.COMPLETED ||\n                task.status === types_1.TaskStatus.FAILED ||\n                task.status === types_1.TaskStatus.CANCELLED) &&\n                task.completedAt &&\n                task.completedAt < olderThan) {\n                this.tasks.delete(id);\n                count++;\n            }\n        }\n        if (count > 0) {\n            (0, logging_utils_1.sendLog)("".concat(count, " tarefas antigas removidas"), "info");\n            // Salvar no armazenamento\n            storage_1.TaskStorage.saveTasks(Array.from(this.tasks.values()));\n        }\n        return count;\n    };\n    return TaskManager;\n}());\nexports.TaskManager = TaskManager;\n\n\n//# sourceURL=webpack:///./src/TaskManager/TaskManager.ts?')},"./src/TaskManager/adapter.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.determineNextActionWithTaskManager = determineNextActionWithTaskManager;\nexports.scheduleNextActionWithTaskManager = scheduleNextActionWithTaskManager;\nexports.processCommandsWithTaskManager = processCommandsWithTaskManager;\nexports.getNextActionsWithTaskManager = getNextActionsWithTaskManager;\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar index_1 = __webpack_require__(/*! ./index */ "./src/TaskManager/index.ts");\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar types_1 = __webpack_require__(/*! ./types */ "./src/TaskManager/types.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\n/**\n * Versão adaptada do determineNextAction que usa o TaskManager\n * Pode ser usado para substituir gradualmente a função original\n *\n * Versão 2.0: Implementação independente que não usa mais a função original\n */\nfunction determineNextActionWithTaskManager(allCommands, currentServerTime) {\n    // Obter o TaskManager\n    var taskManager = index_1.TaskManager.getInstance();\n    // Filtrar comandos que já aterrissaram\n    allCommands = allCommands.filter(function (cmd) { return cmd.landingTime > currentServerTime; });\n    // Filtrar comandos concluídos e outros que não precisamos processar\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    allCommands = allCommands.filter(function (cmd) {\n        return cmd.state !== command_1.COMMAND_STATE.COMPLETED &&\n            cmd.state !== command_1.COMMAND_STATE.OWNER_COMMAND &&\n            cmd.state !== command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED &&\n            (config.ALLOW_NIGHT_BONUS || cmd.state !== command_1.COMMAND_STATE.NIGHT_BONUS);\n    });\n    // Aplicar filtros de whitelist e blacklist\n    allCommands = allCommands.filter(function (cmd) {\n        if (config.DODGE_BLACKLIST_ENABLED) {\n            var isBlacklisted = config.DODGE_BLACKLIST.some(function (name) {\n                var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n                return regex.test(cmd.name);\n            });\n            if (isBlacklisted)\n                return false;\n        }\n        if (config.DODGE_WHITELIST_ENABLED) {\n            var isWhitelisted = config.DODGE_WHITELIST.some(function (name) {\n                var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n                return regex.test(cmd.name);\n            });\n            return isWhitelisted;\n        }\n        return true;\n    });\n    // Processar os comandos filtrados\n    processCommandsWithTaskManager(allCommands, currentServerTime);\n    // Obter a próxima ação a partir das tarefas agendadas\n    var tasks = taskManager.getTasksByStatus(types_1.TaskStatus.SCHEDULED);\n    if (tasks.length === 0) {\n        return null;\n    }\n    // Ordenar tarefas por horário de execução\n    tasks.sort(function (a, b) {\n        var timeA = a.scheduledFor ? a.scheduledFor.getTime() : Infinity;\n        var timeB = b.scheduledFor ? b.scheduledFor.getTime() : Infinity;\n        return timeA - timeB;\n    });\n    // Pegar a primeira tarefa e convertê-la em uma Action\n    var nextTask = tasks[0];\n    if (!nextTask.command) {\n        return null;\n    }\n    // Mapear tipo de tarefa para tipo de ação\n    var actionType;\n    switch (nextTask.type) {\n        case types_1.TaskType.DODGE:\n            actionType = "Dodge";\n            break;\n        case types_1.TaskType.CANCEL:\n            actionType = "Cancel";\n            break;\n        case types_1.TaskType.NOBLE_SNIPE:\n            actionType = "NobleSnipe";\n            break;\n        default:\n            return null;\n    }\n    return {\n        command: nextTask.command,\n        time: nextTask.scheduledFor || new Date(),\n        type: actionType,\n        targetVillage: nextTask.command.targetCoord\n    };\n}\n/**\n * Versão adaptada do scheduleNextAction que usa o TaskManager\n * Pode ser usado para substituir gradualmente a função original\n *\n * Versão 2.0: Implementação independente que não usa mais a função original\n */\nfunction scheduleNextActionWithTaskManager(nextAction, currentServerTime) {\n    if (!nextAction || !nextAction.time) {\n        (0, logging_utils_1.sendLog)("Nenhuma ação válida para agendar.", "info");\n        return;\n    }\n    var command = nextAction.command, time = nextAction.time, type = nextAction.type;\n    var timeUntilNextAction = (time.getTime() - currentServerTime.getTime()) / 1000;\n    var formattedTime = time.toLocaleString();\n    var minutes = Math.floor(timeUntilNextAction / 60);\n    var seconds = Math.floor(timeUntilNextAction % 60);\n    var readableTime = "".concat(minutes, " min ").concat(seconds, " sec");\n    (0, logging_utils_1.sendLog)("Agendando a\\u00E7\\u00E3o: ".concat(type, " para comando ").concat(command.id), "info");\n    (0, logging_utils_1.sendLog)("Ser\\u00E1 executada \\u00E0s ".concat(formattedTime, " (em ").concat(readableTime, ")"), "info");\n    // Converter para tarefa\n    var task = (0, index_1.convertActionToTask)(nextAction);\n    if (task) {\n        (0, logging_utils_1.sendLog)("A\\u00E7\\u00E3o convertida em tarefa ".concat(task.id, " e agendada no TaskManager"), "info");\n    }\n    // Atualizar título da página com o tempo da próxima ação\n    Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../ui */ "./src/ui/index.ts")); }).then(function (ui) {\n        ui.updateDocumentTitle(time);\n    });\n    // Enviar notificações conforme necessário\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    if (config.NOTIFICATIONS_ENABLED &&\n        type !== "NobleSnipe" &&\n        ((type === "Dodge" && config.NOTIFY_DODGE) ||\n            (type === "Cancel" && config.NOTIFY_CANCEL))) {\n        handleNotifications(command, type, timeUntilNextAction, currentServerTime, config);\n    }\n}\n/**\n * Função auxiliar para lidar com notificações\n */\nfunction handleNotifications(command, type, timeUntilNextAction, currentServerTime, config) {\n    // Importar async para evitar circular dependencies\n    Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../notifications */ "./src/notifications.ts")); }).then(function (notifications) {\n        if (timeUntilNextAction > config.NOTIFICATION_SECONDS_DODGE) {\n            var notificationDelay = timeUntilNextAction - config.NOTIFICATION_SECONDS_DODGE;\n            setTimeout(function () {\n                notifications.sendNotifications(command, type, config.NOTIFICATION_SECONDS_DODGE);\n            }, notificationDelay * 1000);\n            (0, logging_utils_1.sendLog)("Notifica\\u00E7\\u00E3o agendada para ".concat(new Date(currentServerTime.getTime() + notificationDelay * 1000).toLocaleString()), "info");\n        }\n        else if (timeUntilNextAction > 5) {\n            notifications.sendNotifications(command, type, Math.floor(timeUntilNextAction));\n            (0, logging_utils_1.sendLog)("Notifica\\u00E7\\u00E3o imediata enviada. A\\u00E7\\u00E3o em ".concat(Math.floor(timeUntilNextAction), " segundos."), "info");\n        }\n    });\n}\n/**\n * Função que processa todos os comandos e agenda tarefas diretamente pelo TaskManager\n * Esta é a versão final que substitui completamente o fluxo original\n */\nfunction processCommandsWithTaskManager(allCommands, currentServerTime) {\n    // Filtrar e ordenar comandos (similar ao determineNextAction)\n    var activeCommands = allCommands.filter(function (cmd) {\n        // Aplicar filtros similares aos existentes na função original\n        return cmd.landingTime > currentServerTime;\n    });\n    // Ordenar por tempo de chegada\n    activeCommands.sort(function (a, b) { return a.landingTime.getTime() - b.landingTime.getTime(); });\n    // Obter o TaskManager\n    var taskManager = index_1.TaskManager.getInstance();\n    // Para cada comando ativo, criar tarefas apropriadas\n    for (var _i = 0, activeCommands_1 = activeCommands; _i < activeCommands_1.length; _i++) {\n        var command = activeCommands_1[_i];\n        // Determinar o tipo de tarefa com base no estado do comando\n        // Lógica adaptada da função original\n        var created = false;\n        if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING && command.snipeInfo) {\n            // Criar tarefa de snipe\n            var action = {\n                command: command,\n                time: command.snipeInfo.launchTime,\n                type: "NobleSnipe",\n                targetVillage: command.targetCoord\n            };\n            var task = (0, index_1.convertActionToTask)(action);\n            if (task) {\n                created = true;\n                (0, logging_utils_1.sendLog)("Tarefa de snipe criada para comando ".concat(command.id), "info");\n            }\n        }\n        else if (command.state === command_1.COMMAND_STATE.WAITING_TO_CANCEL && command.cancelTime) {\n            // Criar tarefa de cancelamento\n            var action = {\n                command: command,\n                time: command.cancelTime,\n                type: "Cancel",\n                targetVillage: command.targetCoord\n            };\n            var task = (0, index_1.convertActionToTask)(action);\n            if (task) {\n                created = true;\n                (0, logging_utils_1.sendLog)("Tarefa de cancelamento criada para comando ".concat(command.id), "info");\n            }\n        }\n        else if (command.dodgeTime) {\n            // Criar tarefa de dodge\n            var action = {\n                command: command,\n                time: command.dodgeTime,\n                type: "Dodge",\n                targetVillage: command.targetCoord\n            };\n            var task = (0, index_1.convertActionToTask)(action);\n            if (task) {\n                created = true;\n                (0, logging_utils_1.sendLog)("Tarefa de dodge criada para comando ".concat(command.id), "info");\n            }\n        }\n        if (!created && command.state === command_1.COMMAND_STATE.PLANNING) {\n            // Se não criamos uma tarefa mas o comando está em planejamento,\n            // podemos criar uma tarefa com base no tempo de chegada\n            var DODGE_SECONDS_BEFORE = 60; // Valor padrão de 60 segundos\n            var dodgeWindowStart = new Date(command.landingTime.getTime() - (DODGE_SECONDS_BEFORE * 1000));\n            if (dodgeWindowStart > currentServerTime) {\n                // Criar tarefa de dodge com base no tempo estimado\n                var action = {\n                    command: command,\n                    time: dodgeWindowStart,\n                    type: "Dodge",\n                    targetVillage: command.targetCoord\n                };\n                (0, index_1.convertActionToTask)(action);\n            }\n        }\n    }\n    // Verificar e mostrar estatísticas\n    var scheduledTasks = taskManager.getTasksByStatus(types_1.TaskStatus.SCHEDULED);\n    if (scheduledTasks.length > 0) {\n        (0, logging_utils_1.sendLog)("Total de tarefas agendadas: ".concat(scheduledTasks.length), "info");\n    }\n}\n/**\n * Obtém a lista de ações agendadas usando o TaskManager\n * Substitui a função getNextActions do módulo actions/index\n */\nfunction getNextActionsWithTaskManager() {\n    var taskManager = index_1.TaskManager.getInstance();\n    // Obter todas as tarefas agendadas e em execução\n    var scheduledTasks = taskManager.getTasksByStatus(types_1.TaskStatus.SCHEDULED);\n    var runningTasks = taskManager.getTasksByStatus(types_1.TaskStatus.RUNNING);\n    var tasks = __spreadArray(__spreadArray([], scheduledTasks, true), runningTasks, true);\n    // Ordenar por horário de execução\n    tasks.sort(function (a, b) {\n        var timeA = a.scheduledFor ? a.scheduledFor.getTime() : Infinity;\n        var timeB = b.scheduledFor ? b.scheduledFor.getTime() : Infinity;\n        return timeA - timeB;\n    });\n    // Converter tarefas para o formato Action para compatibilidade\n    var actions = tasks.map(function (task) {\n        // Converter apenas se tiver comando associado\n        if (!task.command)\n            return null;\n        // Mapear tipo de tarefa para tipo de ação\n        var actionType;\n        switch (task.type) {\n            case types_1.TaskType.DODGE:\n                actionType = "Dodge";\n                break;\n            case types_1.TaskType.CANCEL:\n                actionType = "Cancel";\n                break;\n            case types_1.TaskType.NOBLE_SNIPE:\n                actionType = "NobleSnipe";\n                break;\n            default:\n                return null; // Ignorar outros tipos de tarefas\n        }\n        return {\n            command: task.command,\n            time: task.scheduledFor || new Date(),\n            type: actionType,\n            targetVillage: task.command.targetCoord\n        };\n    }).filter(function (action) { return action !== null; });\n    return actions;\n}\n\n\n//# sourceURL=webpack:///./src/TaskManager/adapter.ts?')},"./src/TaskManager/config.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TaskManagerConfig = void 0;\n/**\n * Configurações do TaskManager\n * Estas configurações controlam o comportamento do TaskManager\n * e facilitam a migração gradual do sistema antigo para o novo.\n */\nexports.TaskManagerConfig = {\n    /**\n     * Controla se o TaskManager está ativado\n     * Se false, o sistema antigo será usado e o TaskManager não será inicializado\n     */\n    enabled: true,\n    /**\n     * Usar apenas o TaskManager, ignorando completamente o sistema antigo\n     * ATENÇÃO: Só ative isto após verificar que o TaskManager está funcionando corretamente\n     * Quando true, as funções antigas não serão mais chamadas\n     */\n    useTaskManagerOnly: true,\n    /**\n     * Registrar uso das funções antigas para ajudar a identificar código que ainda precisa ser migrado\n     * Isto é útil para identificar onde as funções antigas ainda estão sendo usadas\n     * e priorizar a migração dessas áreas\n     */\n    logLegacyUsage: true,\n    /**\n     * Intervalo (em ms) para verificar tarefas agendadas\n     * Um valor menor faz verificações mais frequentes, mas consome mais recursos\n     * Valor recomendado: 1000 (1 segundo)\n     */\n    taskCheckInterval: 1000,\n    /**\n     * Tempo máximo de retenção (em ms) para tarefas concluídas, falhas ou canceladas\n     * Tarefas mais antigas que este valor serão removidas automaticamente\n     * Valor padrão: 24 horas\n     */\n    taskRetentionPeriod: 24 * 60 * 60 * 1000,\n    /**\n     * Nível de detalhe dos logs do TaskManager\n     * 0: Mínimo - Apenas erros\n     * 1: Básico - Erros e informações importantes\n     * 2: Detalhado - Informações completas sobre tarefas\n     * 3: Debug - Informações detalhadas para depuração\n     */\n    logLevel: 2\n};\n\n\n//# sourceURL=webpack:///./src/TaskManager/config.ts?')},"./src/TaskManager/handlers/CancelTaskHandler.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.CancelTaskHandler = void 0;\nvar types_1 = __webpack_require__(/*! ../types */ "./src/TaskManager/types.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar TaskManager_1 = __webpack_require__(/*! ../TaskManager */ "./src/TaskManager/TaskManager.ts");\nvar cancellation_1 = __webpack_require__(/*! ../../actions/cancellation */ "./src/actions/cancellation.ts");\nvar storage_1 = __webpack_require__(/*! ../../storage */ "./src/storage.ts");\nvar command_1 = __webpack_require__(/*! ../../command */ "./src/command.ts");\nvar CancelTaskHandler = /** @class */ (function () {\n    function CancelTaskHandler() {\n    }\n    /**\n     * Executa uma tarefa de cancelamento\n     */\n    CancelTaskHandler.execute = function (task) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentTime, timeUntilLanding, config, updatedCommand, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (task.type !== types_1.TaskType.CANCEL) {\n                            (0, logging_utils_1.sendLog)("Tipo de tarefa inv\\u00E1lido para CancelTaskHandler: ".concat(task.type), "error");\n                            return [2 /*return*/, false];\n                        }\n                        if (!task.command) {\n                            (0, logging_utils_1.sendLog)("Tarefa de cancelamento sem comando associado: ".concat(task.id), "error");\n                            return [2 /*return*/, false];\n                        }\n                        (0, logging_utils_1.sendLog)("Executando tarefa de cancelamento para comando ".concat(task.command.id), "info");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 5, , 6]);\n                        // Verificar se o comando ainda está em um estado válido para cancelamento\n                        if (task.command.state === command_1.COMMAND_STATE.COMPLETED) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(task.command.id, " j\\u00E1 est\\u00E1 completo, pulando cancelamento."), "info");\n                            return [2 /*return*/, true]; // Consideramos sucesso pois não precisa fazer nada\n                        }\n                        if (task.command.state === command_1.COMMAND_STATE.CANCELLING) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(task.command.id, " j\\u00E1 est\\u00E1 em processo de cancelamento."), "info");\n                            return [2 /*return*/, true];\n                        }\n                        currentTime = new Date();\n                        timeUntilLanding = task.command.landingTime.getTime() - currentTime.getTime();\n                        (0, logging_utils_1.sendLog)("Tempo at\\u00E9 aterrissagem do comando ".concat(task.command.id, ": ").concat(Math.floor(timeUntilLanding / 1000), "s"), "info");\n                        config = storage_1.AutoDodgeStorage.loadConfig();\n                        if (timeUntilLanding < config.MIN_CANCEL_BUFFER * 1000) {\n                            (0, logging_utils_1.sendLog)("Tempo para cancelamento do comando ".concat(task.command.id, " \\u00E9 muito curto (").concat(Math.floor(timeUntilLanding / 1000), "s < ").concat(config.MIN_CANCEL_BUFFER, "s)."), "warning");\n                            // Mesmo assim tentamos o cancelamento, mas avisamos que pode falhar\n                        }\n                        // Carregar a configuração\n                        (0, logging_utils_1.sendLog)("Iniciando cancelamento para comando ".concat(task.command.id), "info");\n                        // Usar a função existente de iniciação de cancelamento\n                        (0, cancellation_1.handleInitiatingCancel)(task.command.id, config);\n                        return [4 /*yield*/, command_1.Command.load(task.command.id)];\n                    case 2:\n                        updatedCommand = _a.sent();\n                        if (!updatedCommand) return [3 /*break*/, 4];\n                        updatedCommand.state = command_1.COMMAND_STATE.CANCELLING;\n                        return [4 /*yield*/, updatedCommand.save()];\n                    case 3:\n                        _a.sent();\n                        (0, logging_utils_1.sendLog)("Estado do comando ".concat(task.command.id, " atualizado para CANCELLING"), "info");\n                        _a.label = 4;\n                    case 4:\n                        (0, logging_utils_1.sendLog)("Cancelamento iniciado com sucesso para comando ".concat(task.command.id), "info");\n                        return [2 /*return*/, true];\n                    case 5:\n                        error_1 = _a.sent();\n                        (0, logging_utils_1.sendLog)("Erro ao executar tarefa de cancelamento: ".concat(error_1), "error");\n                        return [2 /*return*/, false];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Cria uma nova tarefa de cancelamento\n     */\n    CancelTaskHandler.createTask = function (params) {\n        var command = params.command, scheduledFor = params.scheduledFor, priority = params.priority, config = params.config;\n        // Configurações padrão se não especificadas\n        var taskConfig = __assign({ maxRetries: 3, retryDelay: 2000, notifyOnFail: true }, config);\n        // Criar e adicionar a tarefa ao gerenciador\n        var taskManager = TaskManager_1.TaskManager.getInstance();\n        var task = taskManager.addTask({\n            type: types_1.TaskType.CANCEL,\n            command: command,\n            scheduledFor: scheduledFor,\n            priority: priority,\n            config: taskConfig\n        });\n        (0, logging_utils_1.sendLog)("Tarefa de cancelamento criada para comando ".concat(command.id, ", agendada para ").concat(scheduledFor.toLocaleString()), "info");\n        return task;\n    };\n    return CancelTaskHandler;\n}());\nexports.CancelTaskHandler = CancelTaskHandler;\n\n\n//# sourceURL=webpack:///./src/TaskManager/handlers/CancelTaskHandler.ts?')},"./src/TaskManager/handlers/DodgeTaskHandler.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.DodgeTaskHandler = void 0;\nvar types_1 = __webpack_require__(/*! ../types */ "./src/TaskManager/types.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar TaskManager_1 = __webpack_require__(/*! ../TaskManager */ "./src/TaskManager/TaskManager.ts");\nvar dodge_1 = __webpack_require__(/*! ../../actions/dodge */ "./src/actions/dodge.ts");\nvar storage_1 = __webpack_require__(/*! ../../storage */ "./src/storage.ts");\nvar command_1 = __webpack_require__(/*! ../../command */ "./src/command.ts");\nvar DodgeTaskHandler = /** @class */ (function () {\n    function DodgeTaskHandler() {\n    }\n    /**\n     * Executa uma tarefa de dodge\n     */\n    DodgeTaskHandler.execute = function (task) {\n        return __awaiter(this, void 0, void 0, function () {\n            var command, reloadedCommand, error_1, isOnIncomingsPage, currentTime, timeUntilLanding, config, innerError_1, revertError_1, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (task.type !== types_1.TaskType.DODGE) {\n                            (0, logging_utils_1.sendLog)("Tipo de tarefa inv\\u00E1lido para DodgeTaskHandler: ".concat(task.type), "error");\n                            return [2 /*return*/, false];\n                        }\n                        if (!task.command) {\n                            (0, logging_utils_1.sendLog)("Tarefa de dodge sem comando associado: ".concat(task.id), "error");\n                            return [2 /*return*/, false];\n                        }\n                        (0, logging_utils_1.sendLog)("Executando tarefa de dodge para comando ".concat(task.command.id, " - ").concat(task.command.name), "info");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 15, , 16]);\n                        command = task.command;\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, command_1.Command.load(task.command.id)];\n                    case 3:\n                        reloadedCommand = _a.sent();\n                        if (reloadedCommand) {\n                            command = reloadedCommand;\n                        }\n                        else {\n                            (0, logging_utils_1.sendLog)("N\\u00E3o foi poss\\u00EDvel recarregar o comando ".concat(task.command.id, ". Usando vers\\u00E3o em cache."), "warning");\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_1 = _a.sent();\n                        (0, logging_utils_1.sendLog)("Erro ao recarregar comando ".concat(task.command.id, ": ").concat(error_1, ". Usando vers\\u00E3o em cache."), "warning");\n                        return [3 /*break*/, 5];\n                    case 5:\n                        // Verificar se o comando ainda está em um estado válido para dodge\n                        if (command.state === command_1.COMMAND_STATE.COMPLETED) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(command.id, " j\\u00E1 est\\u00E1 completo, pulando dodge."), "info");\n                            return [2 /*return*/, true]; // Consideramos sucesso pois não precisa fazer nada\n                        }\n                        if (command.state === command_1.COMMAND_STATE.DODGING) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(command.id, " j\\u00E1 est\\u00E1 em processo de dodge."), "info");\n                            return [2 /*return*/, true];\n                        }\n                        isOnIncomingsPage = window.location.href.includes("mode=incomings");\n                        if (!isOnIncomingsPage) {\n                            // Redirecionar para a página de entradas\n                            (0, logging_utils_1.sendLog)("Redirecionando para a p\\u00E1gina de entradas para executar o dodge...", "info");\n                            window.location.href = game_data.link_base_pure + "mode=incomings&subtype=attacks";\n                            return [2 /*return*/, false]; // Tarefa não completada (será tentada novamente após o redirecionamento)\n                        }\n                        currentTime = new Date();\n                        timeUntilLanding = command.landingTime.getTime() - currentTime.getTime();\n                        (0, logging_utils_1.sendLog)("Tempo at\\u00E9 aterrissagem do comando ".concat(command.id, ": ").concat(Math.floor(timeUntilLanding / 1000), "s"), "info");\n                        config = storage_1.AutoDodgeStorage.loadConfig();\n                        if (timeUntilLanding < config.MIN_DODGE_TIME * 1000) {\n                            (0, logging_utils_1.sendLog)("Tempo para dodge do comando ".concat(command.id, " \\u00E9 muito curto (").concat(Math.floor(timeUntilLanding / 1000), "s < ").concat(config.MIN_DODGE_TIME, "s). Tentando mesmo assim..."), "warning");\n                        }\n                        // Verificar se o destino do dodge está definido\n                        if (!command.dodgeDestination) {\n                            (0, logging_utils_1.sendLog)("Alerta: Comando ".concat(command.id, " n\\u00E3o tem destino de dodge definido. Usando destino padr\\u00E3o."), "warning");\n                        }\n                        // Log detalhado para diagnóstico\n                        (0, logging_utils_1.sendLog)("Detalhes do comando a ser desviado:\\n        ID: ".concat(command.id, "\\n        Nome: ").concat(command.name, "\\n        Atacante: ").concat(command.attackerName, "\\n        Origem: ").concat(command.originName, " (").concat(command.originId, ")\\n        Alvo: ").concat(command.targetName, " (").concat(command.targetCoord, ")\\n        Tempo de Chegada: ").concat(command.landingTime.toLocaleString(), "\\n        Destino de Desvio: ").concat(command.dodgeDestination || "Não definido (usará padrão)", "\\n      "), "info");\n                        _a.label = 6;\n                    case 6:\n                        _a.trys.push([6, 9, , 14]);\n                        // Atualizar status do comando para DODGING antes de iniciar o processo\n                        command.state = command_1.COMMAND_STATE.DODGING;\n                        return [4 /*yield*/, command.save()];\n                    case 7:\n                        _a.sent();\n                        // Iniciar o processo de dodge\n                        (0, logging_utils_1.sendLog)("Iniciando processo de dodge para comando ".concat(command.id, "..."), "info");\n                        return [4 /*yield*/, (0, dodge_1.handleInitiatingDodge)(command.id, config)];\n                    case 8:\n                        _a.sent();\n                        (0, logging_utils_1.sendLog)("Dodge iniciado com sucesso para comando ".concat(command.id), "info");\n                        return [2 /*return*/, true];\n                    case 9:\n                        innerError_1 = _a.sent();\n                        (0, logging_utils_1.sendLog)("Erro no processo de dodge para comando ".concat(command.id, ": ").concat(innerError_1), "error");\n                        _a.label = 10;\n                    case 10:\n                        _a.trys.push([10, 12, , 13]);\n                        command.state = command_1.COMMAND_STATE.PLANNING; // Voltar para estado de planejamento\n                        return [4 /*yield*/, command.save()];\n                    case 11:\n                        _a.sent();\n                        (0, logging_utils_1.sendLog)("Estado do comando ".concat(command.id, " revertido para PLANNING ap\\u00F3s erro"), "info");\n                        return [3 /*break*/, 13];\n                    case 12:\n                        revertError_1 = _a.sent();\n                        (0, logging_utils_1.sendLog)("N\\u00E3o foi poss\\u00EDvel reverter o estado do comando ap\\u00F3s erro: ".concat(revertError_1), "error");\n                        return [3 /*break*/, 13];\n                    case 13: return [2 /*return*/, false];\n                    case 14: return [3 /*break*/, 16];\n                    case 15:\n                        error_2 = _a.sent();\n                        (0, logging_utils_1.sendLog)("Erro ao executar tarefa de dodge: ".concat(error_2), "error");\n                        return [2 /*return*/, false];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Cria uma nova tarefa de dodge\n     */\n    DodgeTaskHandler.createTask = function (params) {\n        var command = params.command, scheduledFor = params.scheduledFor, priority = params.priority, config = params.config;\n        // Configurações padrão se não especificadas\n        var taskConfig = __assign({ maxRetries: 2, retryDelay: 5000, notifyOnFail: true }, config);\n        // Criar e adicionar a tarefa ao gerenciador\n        var taskManager = TaskManager_1.TaskManager.getInstance();\n        var task = taskManager.addTask({\n            type: types_1.TaskType.DODGE,\n            command: command,\n            scheduledFor: scheduledFor,\n            priority: priority,\n            config: taskConfig\n        });\n        (0, logging_utils_1.sendLog)("Tarefa de dodge criada para comando ".concat(command.id, ", agendada para ").concat(scheduledFor.toLocaleString()), "info");\n        return task;\n    };\n    return DodgeTaskHandler;\n}());\nexports.DodgeTaskHandler = DodgeTaskHandler;\n\n\n//# sourceURL=webpack:///./src/TaskManager/handlers/DodgeTaskHandler.ts?')},"./src/TaskManager/handlers/NobleSnipeTaskHandler.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.NobleSnipeTaskHandler = void 0;\nvar types_1 = __webpack_require__(/*! ../types */ "./src/TaskManager/types.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar TaskManager_1 = __webpack_require__(/*! ../TaskManager */ "./src/TaskManager/TaskManager.ts");\nvar actions_1 = __webpack_require__(/*! ../../autosnipe/actions */ "./src/autosnipe/actions.ts");\nvar storage_1 = __webpack_require__(/*! ../../storage */ "./src/storage.ts");\nvar command_1 = __webpack_require__(/*! ../../command */ "./src/command.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar NobleSnipeTaskHandler = /** @class */ (function () {\n    function NobleSnipeTaskHandler() {\n    }\n    /**\n     * Executa uma tarefa de snipe de nobre\n     */\n    NobleSnipeTaskHandler.execute = function (task) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentServerTime, timeUntilLaunch, config, updatedCommand, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (task.type !== types_1.TaskType.NOBLE_SNIPE) {\n                            (0, logging_utils_1.sendLog)("Tipo de tarefa inv\\u00E1lido para NobleSnipeTaskHandler: ".concat(task.type), "error");\n                            return [2 /*return*/, false];\n                        }\n                        if (!task.command) {\n                            (0, logging_utils_1.sendLog)("Tarefa de snipe de nobre sem comando associado: ".concat(task.id), "error");\n                            return [2 /*return*/, false];\n                        }\n                        (0, logging_utils_1.sendLog)("Executando tarefa de snipe de nobre para comando ".concat(task.command.id), "info");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, , 7]);\n                        // Verificar se o comando ainda está em um estado válido para snipe\n                        if (task.command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(task.command.id, " j\\u00E1 foi snipado, pulando."), "info");\n                            return [2 /*return*/, true]; // Consideramos sucesso pois não precisa fazer nada\n                        }\n                        if (task.command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_IN_PROGRESS) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(task.command.id, " j\\u00E1 est\\u00E1 em processo de snipe."), "info");\n                            return [2 /*return*/, true];\n                        }\n                        if (task.command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_IMPOSSIBLE) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(task.command.id, " foi marcado como imposs\\u00EDvel para snipe."), "warning");\n                            return [2 /*return*/, true]; // Consideramos sucesso para não tentar novamente\n                        }\n                        // Verificar se ainda temos informações de snipe válidas\n                        if (!task.command.snipeInfo || !task.command.snipeInfo.launchTime) {\n                            (0, logging_utils_1.sendLog)("Comando ".concat(task.command.id, " n\\u00E3o tem informa\\u00E7\\u00F5es v\\u00E1lidas de snipe."), "error");\n                            return [2 /*return*/, false];\n                        }\n                        currentServerTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                        timeUntilLaunch = task.command.snipeInfo.launchTime.getTime() - currentServerTime.getTime();\n                        if (timeUntilLaunch < -5000) { // 5 segundos de tolerância\n                            (0, logging_utils_1.sendLog)("Tempo de lan\\u00E7amento para snipe do comando ".concat(task.command.id, " j\\u00E1 passou (").concat(Math.floor(timeUntilLaunch / -1000), "s atr\\u00E1s)."), "error");\n                            return [2 /*return*/, false];\n                        }\n                        (0, logging_utils_1.sendLog)("Iniciando snipe de nobre para comando ".concat(task.command.id, ". Tempo at\\u00E9 lan\\u00E7amento: ").concat(Math.floor(timeUntilLaunch / 1000), "s"), "info");\n                        config = storage_1.AutoDodgeStorage.loadConfig();\n                        // Usar a função existente de iniciação de snipe de nobre\n                        return [4 /*yield*/, (0, actions_1.handleInitiatingNobleSnipe)(task.command.id, config)];\n                    case 2:\n                        // Usar a função existente de iniciação de snipe de nobre\n                        _a.sent();\n                        return [4 /*yield*/, command_1.Command.load(task.command.id)];\n                    case 3:\n                        updatedCommand = _a.sent();\n                        if (!updatedCommand) return [3 /*break*/, 5];\n                        updatedCommand.state = command_1.COMMAND_STATE.NOBLE_SNIPE_IN_PROGRESS;\n                        return [4 /*yield*/, updatedCommand.save()];\n                    case 4:\n                        _a.sent();\n                        (0, logging_utils_1.sendLog)("Estado do comando ".concat(task.command.id, " atualizado para NOBLE_SNIPE_IN_PROGRESS"), "info");\n                        _a.label = 5;\n                    case 5:\n                        (0, logging_utils_1.sendLog)("Snipe de nobre iniciado com sucesso para comando ".concat(task.command.id), "info");\n                        return [2 /*return*/, true];\n                    case 6:\n                        error_1 = _a.sent();\n                        (0, logging_utils_1.sendLog)("Erro ao executar tarefa de snipe de nobre: ".concat(error_1), "error");\n                        return [2 /*return*/, false];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Cria uma nova tarefa de snipe de nobre\n     */\n    NobleSnipeTaskHandler.createTask = function (params) {\n        var command = params.command, scheduledFor = params.scheduledFor, priority = params.priority, config = params.config;\n        // Verificar se o comando tem informações de snipe\n        if (!command.snipeInfo || !command.snipeInfo.launchTime) {\n            (0, logging_utils_1.sendLog)("Comando ".concat(command.id, " n\\u00E3o tem informa\\u00E7\\u00F5es v\\u00E1lidas de snipe para criar tarefa."), "error");\n            throw new Error("Comando sem informações de snipe");\n        }\n        // Configurações padrão se não especificadas\n        var taskConfig = __assign({ maxRetries: 1, retryDelay: 1000, notifyOnFail: true }, config);\n        // Criar e adicionar a tarefa ao gerenciador\n        var taskManager = TaskManager_1.TaskManager.getInstance();\n        var task = taskManager.addTask({\n            type: types_1.TaskType.NOBLE_SNIPE,\n            command: command,\n            scheduledFor: scheduledFor,\n            priority: priority,\n            config: taskConfig\n        });\n        (0, logging_utils_1.sendLog)("Tarefa de snipe de nobre criada para comando ".concat(command.id, ", agendada para ").concat(scheduledFor.toLocaleString()), "info");\n        return task;\n    };\n    return NobleSnipeTaskHandler;\n}());\nexports.NobleSnipeTaskHandler = NobleSnipeTaskHandler;\n\n\n//# sourceURL=webpack:///./src/TaskManager/handlers/NobleSnipeTaskHandler.ts?')},"./src/TaskManager/handlers/NotificationTaskHandler.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.NotificationTaskHandler = void 0;\nvar types_1 = __webpack_require__(/*! ../types */ "./src/TaskManager/types.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar TaskManager_1 = __webpack_require__(/*! ../TaskManager */ "./src/TaskManager/TaskManager.ts");\nvar notifications_1 = __webpack_require__(/*! ../../notifications */ "./src/notifications.ts");\nvar NotificationTaskHandler = /** @class */ (function () {\n    function NotificationTaskHandler() {\n    }\n    /**\n     * Executa uma tarefa de notificação\n     */\n    NotificationTaskHandler.execute = function (task) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, type, secondsUntilAction;\n            return __generator(this, function (_b) {\n                if (task.type !== types_1.TaskType.NOTIFICATION) {\n                    (0, logging_utils_1.sendLog)("Tipo de tarefa inv\\u00E1lido para NotificationTaskHandler: ".concat(task.type), "error");\n                    return [2 /*return*/, false];\n                }\n                if (!task.command) {\n                    (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o sem comando associado: ".concat(task.id), "error");\n                    return [2 /*return*/, false];\n                }\n                // Verificar se temos informações suficientes para enviar a notificação\n                if (!task.payload) {\n                    (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o sem payload: ".concat(task.id), "error");\n                    return [2 /*return*/, false];\n                }\n                _a = task.payload, type = _a.type, secondsUntilAction = _a.secondsUntilAction;\n                if (!type || typeof secondsUntilAction !== \'number\') {\n                    (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o com payload inv\\u00E1lido: ".concat(task.id), "error");\n                    return [2 /*return*/, false];\n                }\n                (0, logging_utils_1.sendLog)("Enviando notifica\\u00E7\\u00E3o para comando ".concat(task.command.id, " (").concat(type, ")"), "info");\n                try {\n                    // Enviar a notificação\n                    (0, notifications_1.sendNotifications)(task.command, type, Math.max(0, secondsUntilAction));\n                    (0, logging_utils_1.sendLog)("Notifica\\u00E7\\u00E3o enviada com sucesso para comando ".concat(task.command.id), "info");\n                    return [2 /*return*/, true];\n                }\n                catch (error) {\n                    (0, logging_utils_1.sendLog)("Erro ao enviar notifica\\u00E7\\u00E3o: ".concat(error), "error");\n                    return [2 /*return*/, false];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Cria uma nova tarefa de notificação\n     */\n    NotificationTaskHandler.createTask = function (params) {\n        var command = params.command, scheduledFor = params.scheduledFor, priority = params.priority, type = params.type, secondsUntilAction = params.secondsUntilAction, config = params.config;\n        // Criar payload específico para notificação\n        var payload = {\n            type: type,\n            secondsUntilAction: secondsUntilAction,\n        };\n        // Configurações padrão se não especificadas\n        var taskConfig = __assign({ maxRetries: 1, retryDelay: 1000, notifyOnFail: false }, config);\n        // Criar e adicionar a tarefa ao gerenciador\n        var taskManager = TaskManager_1.TaskManager.getInstance();\n        var task = taskManager.addTask({\n            type: types_1.TaskType.NOTIFICATION,\n            command: command,\n            scheduledFor: scheduledFor,\n            priority: priority,\n            payload: payload,\n            config: taskConfig\n        });\n        (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o criada para comando ".concat(command.id, ", agendada para ").concat(scheduledFor.toLocaleString()), "info");\n        return task;\n    };\n    return NotificationTaskHandler;\n}());\nexports.NotificationTaskHandler = NotificationTaskHandler;\n\n\n//# sourceURL=webpack:///./src/TaskManager/handlers/NotificationTaskHandler.ts?')},"./src/TaskManager/handlers/index.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.NotificationTaskHandler = exports.NobleSnipeTaskHandler = exports.CancelTaskHandler = exports.DodgeTaskHandler = void 0;\nexports.executeTask = executeTask;\nexports.createTask = createTask;\nvar DodgeTaskHandler_1 = __webpack_require__(/*! ./DodgeTaskHandler */ "./src/TaskManager/handlers/DodgeTaskHandler.ts");\nObject.defineProperty(exports, "DodgeTaskHandler", ({ enumerable: true, get: function () { return DodgeTaskHandler_1.DodgeTaskHandler; } }));\nvar CancelTaskHandler_1 = __webpack_require__(/*! ./CancelTaskHandler */ "./src/TaskManager/handlers/CancelTaskHandler.ts");\nObject.defineProperty(exports, "CancelTaskHandler", ({ enumerable: true, get: function () { return CancelTaskHandler_1.CancelTaskHandler; } }));\nvar NobleSnipeTaskHandler_1 = __webpack_require__(/*! ./NobleSnipeTaskHandler */ "./src/TaskManager/handlers/NobleSnipeTaskHandler.ts");\nObject.defineProperty(exports, "NobleSnipeTaskHandler", ({ enumerable: true, get: function () { return NobleSnipeTaskHandler_1.NobleSnipeTaskHandler; } }));\nvar NotificationTaskHandler_1 = __webpack_require__(/*! ./NotificationTaskHandler */ "./src/TaskManager/handlers/NotificationTaskHandler.ts");\nObject.defineProperty(exports, "NotificationTaskHandler", ({ enumerable: true, get: function () { return NotificationTaskHandler_1.NotificationTaskHandler; } }));\nvar types_1 = __webpack_require__(/*! ../types */ "./src/TaskManager/types.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\n/**\n * Executa uma tarefa com base no tipo\n */\nfunction executeTask(task) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, error_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!task) {\n                        (0, logging_utils_1.sendLog)("Tentativa de executar tarefa indefinida", "error");\n                        return [2 /*return*/, false];\n                    }\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 14, , 15]);\n                    (0, logging_utils_1.sendLog)("Iniciando execu\\u00E7\\u00E3o da tarefa ".concat(task.id, " do tipo ").concat(task.type), "info");\n                    if (!task.command && task.type !== types_1.TaskType.NOTIFICATION) {\n                        (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " n\\u00E3o tem comando associado"), "error");\n                        return [2 /*return*/, false];\n                    }\n                    _a = task.type;\n                    switch (_a) {\n                        case types_1.TaskType.DODGE: return [3 /*break*/, 2];\n                        case types_1.TaskType.CANCEL: return [3 /*break*/, 4];\n                        case types_1.TaskType.NOBLE_SNIPE: return [3 /*break*/, 6];\n                        case types_1.TaskType.NOTIFICATION: return [3 /*break*/, 8];\n                        case types_1.TaskType.REFRESH: return [3 /*break*/, 10];\n                        case types_1.TaskType.UI_UPDATE: return [3 /*break*/, 11];\n                    }\n                    return [3 /*break*/, 12];\n                case 2: return [4 /*yield*/, DodgeTaskHandler_1.DodgeTaskHandler.execute(task)];\n                case 3: return [2 /*return*/, _b.sent()];\n                case 4: return [4 /*yield*/, CancelTaskHandler_1.CancelTaskHandler.execute(task)];\n                case 5: return [2 /*return*/, _b.sent()];\n                case 6: return [4 /*yield*/, NobleSnipeTaskHandler_1.NobleSnipeTaskHandler.execute(task)];\n                case 7: return [2 /*return*/, _b.sent()];\n                case 8: return [4 /*yield*/, NotificationTaskHandler_1.NotificationTaskHandler.execute(task)];\n                case 9: return [2 /*return*/, _b.sent()];\n                case 10:\n                    (0, logging_utils_1.sendLog)("Executando tarefa de atualização", "info");\n                    // Implementar lógica de atualização se necessário\n                    return [2 /*return*/, true];\n                case 11:\n                    (0, logging_utils_1.sendLog)("Executando tarefa de atualização de UI", "info");\n                    // Implementar lógica de atualização de UI se necessário\n                    return [2 /*return*/, true];\n                case 12:\n                    (0, logging_utils_1.sendLog)("Handler n\\u00E3o implementado para o tipo de tarefa: ".concat(task.type), "error");\n                    return [2 /*return*/, false];\n                case 13: return [3 /*break*/, 15];\n                case 14:\n                    error_1 = _b.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao executar tarefa ".concat(task.id, " do tipo ").concat(task.type, ": ").concat(error_1), "error");\n                    try {\n                        // Tentar registrar detalhes adicionais do erro\n                        if (error_1 instanceof Error) {\n                            (0, logging_utils_1.sendLog)("Detalhes do erro: ".concat(error_1.message), "error");\n                            if (error_1.stack) {\n                                (0, logging_utils_1.sendLog)("Stack: ".concat(error_1.stack), "error");\n                            }\n                        }\n                    }\n                    catch (_) { /* Ignora erros secundários */ }\n                    return [2 /*return*/, false];\n                case 15: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Cria uma tarefa com base no tipo\n */\nfunction createTask(type, params) {\n    switch (type) {\n        case types_1.TaskType.DODGE:\n            return DodgeTaskHandler_1.DodgeTaskHandler.createTask(params);\n        case types_1.TaskType.CANCEL:\n            return CancelTaskHandler_1.CancelTaskHandler.createTask(params);\n        case types_1.TaskType.NOBLE_SNIPE:\n            return NobleSnipeTaskHandler_1.NobleSnipeTaskHandler.createTask(params);\n        case types_1.TaskType.NOTIFICATION:\n            // Para notificação, verificamos se temos os parâmetros específicos\n            if (!params.payload || !params.payload.type || typeof params.payload.secondsUntilAction !== \'number\') {\n                throw new Error("Parâmetros inválidos para tarefa de notificação");\n            }\n            return NotificationTaskHandler_1.NotificationTaskHandler.createTask(__assign(__assign({}, params), { type: params.payload.type, secondsUntilAction: params.payload.secondsUntilAction }));\n        default:\n            throw new Error("Handler n\\u00E3o implementado para o tipo de tarefa: ".concat(type));\n    }\n}\n\n\n//# sourceURL=webpack:///./src/TaskManager/handlers/index.ts?')},"./src/TaskManager/index.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TaskStorage = exports.TaskManager = void 0;\nexports.convertActionToTask = convertActionToTask;\nexports.getPriorityFromCommandState = getPriorityFromCommandState;\n// Exportar configuração\n__exportStar(__webpack_require__(/*! ./config */ "./src/TaskManager/config.ts"), exports);\n// Exportar classes principais\nvar TaskManager_1 = __webpack_require__(/*! ./TaskManager */ "./src/TaskManager/TaskManager.ts");\nObject.defineProperty(exports, "TaskManager", ({ enumerable: true, get: function () { return TaskManager_1.TaskManager; } }));\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/TaskManager/storage.ts");\nObject.defineProperty(exports, "TaskStorage", ({ enumerable: true, get: function () { return storage_1.TaskStorage; } }));\n// Exportar tipos\n__exportStar(__webpack_require__(/*! ./types */ "./src/TaskManager/types.ts"), exports);\n// Exportar utilitários\n__exportStar(__webpack_require__(/*! ./utils */ "./src/TaskManager/utils.ts"), exports);\n// Exportar handlers\n__exportStar(__webpack_require__(/*! ./handlers */ "./src/TaskManager/handlers/index.ts"), exports);\n// Exportar adapter\n__exportStar(__webpack_require__(/*! ./adapter */ "./src/TaskManager/adapter.ts"), exports);\n// Exportar inicialização\n__exportStar(__webpack_require__(/*! ./init */ "./src/TaskManager/init.ts"), exports);\n// Exportar wrappers\n__exportStar(__webpack_require__(/*! ./wrappers */ "./src/TaskManager/wrappers.ts"), exports);\nvar types_1 = __webpack_require__(/*! ./types */ "./src/TaskManager/types.ts");\nvar handlers_1 = __webpack_require__(/*! ./handlers */ "./src/TaskManager/handlers/index.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\n/**\n * Converte uma Action existente em uma Task para o TaskManager\n */\nfunction convertActionToTask(action) {\n    if (!action || !action.command || !action.time) {\n        (0, logging_utils_1.sendLog)(\'Ação inválida para conversão em tarefa\', \'error\');\n        return null;\n    }\n    // Garantir que action.time seja uma instância de Date válida\n    var scheduledTime;\n    try {\n        if (action.time instanceof Date) {\n            scheduledTime = action.time;\n        }\n        else if (typeof action.time === \'string\') {\n            scheduledTime = new Date(action.time);\n            if (isNaN(scheduledTime.getTime())) {\n                throw new Error(\'Data inválida\');\n            }\n        }\n        else {\n            throw new Error("Tipo inv\\u00E1lido para scheduledTime: ".concat(typeof action.time));\n        }\n    }\n    catch (error) {\n        (0, logging_utils_1.sendLog)("Erro ao converter data de agendamento: ".concat(error), \'error\');\n        return null;\n    }\n    // Mapear o tipo de ação para tipo de tarefa\n    var taskType;\n    var priority;\n    switch (action.type) {\n        case \'Dodge\':\n            taskType = types_1.TaskType.DODGE;\n            priority = types_1.TaskPriority.HIGH;\n            break;\n        case \'Cancel\':\n            taskType = types_1.TaskType.CANCEL;\n            priority = types_1.TaskPriority.MEDIUM;\n            break;\n        case \'NobleSnipe\':\n            taskType = types_1.TaskType.NOBLE_SNIPE;\n            priority = types_1.TaskPriority.CRITICAL;\n            break;\n        default:\n            (0, logging_utils_1.sendLog)("Tipo de a\\u00E7\\u00E3o n\\u00E3o suportado para convers\\u00E3o: ".concat(action.type), \'error\');\n            return null;\n    }\n    // Criar a tarefa usando o handler apropriado\n    return (0, handlers_1.createTask)(taskType, {\n        command: action.command,\n        scheduledFor: scheduledTime,\n        priority: priority,\n        config: {\n            maxRetries: 3,\n            retryDelay: 5000,\n            notifyOnFail: true\n        }\n    });\n}\n/**\n * Obtém a prioridade de tarefa com base no estado do comando\n */\nfunction getPriorityFromCommandState(state) {\n    switch (state) {\n        case "NOBLE_SNIPE_PENDING":\n            return types_1.TaskPriority.CRITICAL;\n        case "DODGING":\n            return types_1.TaskPriority.HIGH;\n        case "WAITING_TO_CANCEL":\n            return types_1.TaskPriority.MEDIUM;\n        case "PLANNING":\n            return types_1.TaskPriority.LOW;\n        default:\n            return types_1.TaskPriority.MEDIUM;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/TaskManager/index.ts?')},"./src/TaskManager/init.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.initializeTaskManager = initializeTaskManager;\nexports.shutdownTaskManager = shutdownTaskManager;\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar TaskManager_1 = __webpack_require__(/*! ./TaskManager */ "./src/TaskManager/TaskManager.ts");\nvar command_utils_1 = __webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts");\nvar time_utils_1 = __webpack_require__(/*! ../utils/time.utils */ "./src/utils/time.utils.ts");\nvar adapter_1 = __webpack_require__(/*! ./adapter */ "./src/TaskManager/adapter.ts");\nvar config_1 = __webpack_require__(/*! ./config */ "./src/TaskManager/config.ts");\nvar types_1 = __webpack_require__(/*! ./types */ "./src/TaskManager/types.ts");\nvar taskCheckInterval = null;\n/**\n * Inicializa o sistema TaskManager\n * Esta função deve ser chamada uma vez na inicialização da aplicação\n */\nfunction initializeTaskManager() {\n    return __awaiter(this, void 0, void 0, function () {\n        var taskManager, allCommands, currentServerTime, scheduledTasks, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!config_1.TaskManagerConfig.enabled) {\n                        (0, logging_utils_1.sendLog)("TaskManager está desativado. Ignorando inicialização.", "info");\n                        return [2 /*return*/];\n                    }\n                    (0, logging_utils_1.sendLog)("Inicializando sistema TaskManager...", "info");\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    taskManager = TaskManager_1.TaskManager.getInstance();\n                    return [4 /*yield*/, (0, command_utils_1.getAllCommandsFromStorage)()];\n                case 2:\n                    allCommands = _a.sent();\n                    currentServerTime = (0, time_utils_1.getCurrentServerTime)();\n                    // Processar comandos existentes e criar tarefas para eles\n                    (0, adapter_1.processCommandsWithTaskManager)(allCommands, currentServerTime);\n                    // Iniciar verificação periódica de tarefas atrasadas\n                    setupTasksMonitoring();\n                    scheduledTasks = taskManager.getTasksByStatus(types_1.TaskStatus.SCHEDULED);\n                    (0, logging_utils_1.sendLog)("Total de tarefas agendadas: ".concat(scheduledTasks.length), "info");\n                    (0, logging_utils_1.sendLog)("Sistema TaskManager inicializado com sucesso", "info");\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_1 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao inicializar o TaskManager: ".concat(error_1), "error");\n                    throw error_1;\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Desliga o sistema TaskManager\n */\nfunction shutdownTaskManager() {\n    (0, logging_utils_1.sendLog)("Desligando TaskManager...", "info");\n    // Limpar intervalos\n    if (taskCheckInterval) {\n        clearInterval(taskCheckInterval);\n        taskCheckInterval = null;\n    }\n    (0, logging_utils_1.sendLog)("TaskManager desligado", "info");\n}\n/**\n * Configura monitoramento periódico para verificar tarefas atrasadas\n */\nfunction setupTasksMonitoring() {\n    // Limpar intervalo existente se houver\n    if (taskCheckInterval) {\n        clearInterval(taskCheckInterval);\n    }\n    // Criar intervalo para verificar tarefas a cada 5 minutos\n    taskCheckInterval = setInterval(function () {\n        checkLateTasks();\n    }, 5 * 60 * 1000); // 5 minutos\n    // Fazer uma verificação inicial imediata\n    setTimeout(function () {\n        checkLateTasks();\n    }, 30 * 1000); // 30 segundos após inicializar\n}\n/**\n * Verifica tarefas que estão atrasadas ou com problemas\n */\nfunction checkLateTasks() {\n    try {\n        var taskManager_1 = TaskManager_1.TaskManager.getInstance();\n        var now_1 = new Date();\n        // Verificar tarefas agendadas\n        var scheduledTasks = taskManager_1.getTasksByStatus(types_1.TaskStatus.SCHEDULED);\n        // Encontrar tarefas que deveriam ter sido executadas\n        var lateTasks = scheduledTasks.filter(function (task) {\n            if (!task.scheduledFor)\n                return false;\n            // Verificar se é uma data válida\n            var scheduledTime;\n            if (task.scheduledFor instanceof Date) {\n                scheduledTime = task.scheduledFor;\n            }\n            else if (typeof task.scheduledFor === \'string\') {\n                scheduledTime = new Date(task.scheduledFor);\n            }\n            else {\n                return false;\n            }\n            // Tarefas agendadas para mais de 5 minutos atrás\n            return scheduledTime.getTime() < now_1.getTime() - 5 * 60 * 1000;\n        });\n        if (lateTasks.length > 0) {\n            (0, logging_utils_1.sendLog)("ALERTA: Encontradas ".concat(lateTasks.length, " tarefas atrasadas!"), "warning");\n            // Tentar executar tarefas atrasadas\n            lateTasks.forEach(function (task) {\n                var _a;\n                var taskId = task.id;\n                var commandName = ((_a = task.command) === null || _a === void 0 ? void 0 : _a.name) || "Desconhecido";\n                var taskType = task.type;\n                (0, logging_utils_1.sendLog)("Tarefa atrasada: ".concat(taskId, " (").concat(taskType, ") para \\"").concat(commandName, "\\""), "warning");\n                // Tentar executar a tarefa\n                taskManager_1.executeTask(taskId);\n            });\n        }\n        // Verificar tarefas em execução por muito tempo\n        var runningTasks = taskManager_1.getTasksByStatus(types_1.TaskStatus.RUNNING);\n        var longRunningTasks = runningTasks.filter(function (task) {\n            if (!task.startedAt)\n                return false;\n            // Tarefas em execução por mais de 10 minutos\n            var runningTime = now_1.getTime() - task.startedAt.getTime();\n            return runningTime > 10 * 60 * 1000;\n        });\n        if (longRunningTasks.length > 0) {\n            (0, logging_utils_1.sendLog)("ALERTA: ".concat(longRunningTasks.length, " tarefas est\\u00E3o em execu\\u00E7\\u00E3o por mais de 10 minutos"), "warning");\n            // Listar tarefas problemáticas\n            longRunningTasks.forEach(function (task) {\n                (0, logging_utils_1.sendLog)("Tarefa em execu\\u00E7\\u00E3o prolongada: ".concat(task.id, " (").concat(task.type, ")"), "warning");\n            });\n        }\n    }\n    catch (error) {\n        (0, logging_utils_1.sendLog)("Erro ao verificar tarefas atrasadas: ".concat(error), "error");\n    }\n}\n\n\n//# sourceURL=webpack:///./src/TaskManager/init.ts?')},"./src/TaskManager/storage.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TaskStorage = void 0;\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar TASKS_STORAGE_KEY = "autodoge_tasks";\nvar TaskStorage = /** @class */ (function () {\n    function TaskStorage() {\n    }\n    /**\n     * Salva a lista de tarefas no armazenamento\n     */\n    TaskStorage.saveTasks = function (tasks) {\n        try {\n            // Converter dates para formato ISO para armazenamento\n            var serializedTasks = tasks.map(function (task) {\n                // Criar cópia da tarefa para serialização\n                var serializedTask = __assign({}, task);\n                // Converter datas para string, verificando se são instâncias de Date\n                if (task.createdAt instanceof Date) {\n                    serializedTask.createdAt = task.createdAt.toISOString();\n                }\n                if (task.scheduledFor instanceof Date) {\n                    serializedTask.scheduledFor = task.scheduledFor.toISOString();\n                }\n                if (task.startedAt instanceof Date) {\n                    serializedTask.startedAt = task.startedAt.toISOString();\n                }\n                if (task.completedAt instanceof Date) {\n                    serializedTask.completedAt = task.completedAt.toISOString();\n                }\n                return serializedTask;\n            });\n            localStorage.setItem(TASKS_STORAGE_KEY, JSON.stringify(serializedTasks));\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao salvar tarefas: ".concat(error), "error");\n        }\n    };\n    /**\n     * Carrega todas as tarefas do armazenamento\n     */\n    TaskStorage.loadTasks = function () {\n        try {\n            var storedTasks = localStorage.getItem(TASKS_STORAGE_KEY);\n            if (!storedTasks)\n                return [];\n            // Converter strings ISO para objetos Date\n            var parsedTasks = JSON.parse(storedTasks);\n            return parsedTasks.map(function (task) { return (__assign(__assign({}, task), { createdAt: task.createdAt ? new Date(task.createdAt) : undefined, scheduledFor: task.scheduledFor ? new Date(task.scheduledFor) : undefined, startedAt: task.startedAt ? new Date(task.startedAt) : undefined, completedAt: task.completedAt ? new Date(task.completedAt) : undefined })); });\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao carregar tarefas: ".concat(error), "error");\n            return [];\n        }\n    };\n    /**\n     * Carrega uma tarefa específica pelo ID\n     */\n    TaskStorage.loadTask = function (taskId) {\n        try {\n            var allTasks = this.loadTasks();\n            return allTasks.find(function (task) { return task.id === taskId; }) || null;\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao carregar tarefa ".concat(taskId, ": ").concat(error), "error");\n            return null;\n        }\n    };\n    /**\n     * Salva uma única tarefa no armazenamento\n     */\n    TaskStorage.saveTask = function (task) {\n        try {\n            var allTasks = this.loadTasks();\n            var taskIndex = allTasks.findIndex(function (t) { return t.id === task.id; });\n            if (taskIndex !== -1) {\n                // Atualizar tarefa existente\n                allTasks[taskIndex] = task;\n            }\n            else {\n                // Adicionar nova tarefa\n                allTasks.push(task);\n            }\n            this.saveTasks(allTasks);\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao salvar tarefa ".concat(task.id, ": ").concat(error), "error");\n        }\n    };\n    /**\n     * Remove uma tarefa do armazenamento\n     */\n    TaskStorage.removeTask = function (taskId) {\n        try {\n            var allTasks = this.loadTasks();\n            var initialLength = allTasks.length;\n            var updatedTasks = allTasks.filter(function (task) { return task.id !== taskId; });\n            if (updatedTasks.length !== initialLength) {\n                this.saveTasks(updatedTasks);\n                return true;\n            }\n            return false;\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao remover tarefa ".concat(taskId, ": ").concat(error), "error");\n            return false;\n        }\n    };\n    /**\n     * Limpa o armazenamento de tarefas\n     */\n    TaskStorage.clearTasks = function () {\n        try {\n            localStorage.removeItem(TASKS_STORAGE_KEY);\n            (0, logging_utils_1.sendLog)("Armazenamento de tarefas limpo", "info");\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao limpar armazenamento de tarefas: ".concat(error), "error");\n        }\n    };\n    /**\n     * Atualiza o status de uma tarefa\n     */\n    TaskStorage.updateTaskStatus = function (taskId, status) {\n        try {\n            var task = this.loadTask(taskId);\n            if (!task)\n                return false;\n            task.status = status;\n            this.saveTask(task);\n            return true;\n        }\n        catch (error) {\n            (0, logging_utils_1.sendLog)("Erro ao atualizar status da tarefa ".concat(taskId, ": ").concat(error), "error");\n            return false;\n        }\n    };\n    /**\n     * Migra tarefas do formato antigo para o novo (se necessário)\n     */\n    TaskStorage.migrateTasksIfNeeded = function () {\n        // Implementar quando necessário para migrar de versões antigas do armazenamento\n        // para versões mais recentes\n    };\n    return TaskStorage;\n}());\nexports.TaskStorage = TaskStorage;\n\n\n//# sourceURL=webpack:///./src/TaskManager/storage.ts?')},"./src/TaskManager/types.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TaskType = exports.TaskStatus = exports.TaskPriority = void 0;\nvar TaskPriority;\n(function (TaskPriority) {\n    TaskPriority[TaskPriority["CRITICAL"] = 0] = "CRITICAL";\n    TaskPriority[TaskPriority["HIGH"] = 1] = "HIGH";\n    TaskPriority[TaskPriority["MEDIUM"] = 2] = "MEDIUM";\n    TaskPriority[TaskPriority["LOW"] = 3] = "LOW";\n    TaskPriority[TaskPriority["BACKGROUND"] = 4] = "BACKGROUND"; // Tarefas que podem ser executadas em segundo plano\n})(TaskPriority || (exports.TaskPriority = TaskPriority = {}));\nvar TaskStatus;\n(function (TaskStatus) {\n    TaskStatus["PENDING"] = "pending";\n    TaskStatus["SCHEDULED"] = "scheduled";\n    TaskStatus["RUNNING"] = "running";\n    TaskStatus["COMPLETED"] = "completed";\n    TaskStatus["FAILED"] = "failed";\n    TaskStatus["CANCELLED"] = "cancelled"; // Tarefa foi cancelada antes de sua execução\n})(TaskStatus || (exports.TaskStatus = TaskStatus = {}));\nvar TaskType;\n(function (TaskType) {\n    TaskType["DODGE"] = "dodge";\n    TaskType["CANCEL"] = "cancel";\n    TaskType["NOBLE_SNIPE"] = "noblesnipe";\n    TaskType["NOTIFICATION"] = "notification";\n    TaskType["REFRESH"] = "refresh";\n    TaskType["UI_UPDATE"] = "ui_update"; // Tarefa para atualizar a interface\n})(TaskType || (exports.TaskType = TaskType = {}));\n\n\n//# sourceURL=webpack:///./src/TaskManager/types.ts?')},"./src/TaskManager/utils.ts":function(__unused_webpack_module,exports){"use strict";eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.generateId = generateId;\nexports.formatDate = formatDate;\nexports.timeUntil = timeUntil;\nexports.formatTimeRemaining = formatTimeRemaining;\nexports.formatTimeRemainingLong = formatTimeRemainingLong;\nexports.groupTasksByStatus = groupTasksByStatus;\nexports.groupTasksByType = groupTasksByType;\nexports.groupTasksByPriority = groupTasksByPriority;\nexports.sortTasksByScheduledTime = sortTasksByScheduledTime;\nexports.sortTasksByPriorityAndTime = sortTasksByPriorityAndTime;\n/**\n * Gera um ID único para tarefas\n */\nfunction generateId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2, 5);\n}\n/**\n * Formata uma data para exibição\n */\nfunction formatDate(date) {\n    if (!date)\n        return 'N/A';\n    return date.toLocaleString();\n}\n/**\n * Calcula o tempo restante até uma data (em segundos)\n */\nfunction timeUntil(date) {\n    if (!date)\n        return 0;\n    return Math.max(0, Math.floor((date.getTime() - Date.now()) / 1000));\n}\n/**\n * Formata o tempo restante em formato legível (mm:ss)\n */\nfunction formatTimeRemaining(seconds) {\n    if (seconds <= 0)\n        return '00:00';\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return \"\".concat(minutes.toString().padStart(2, '0'), \":\").concat(remainingSeconds.toString().padStart(2, '0'));\n}\n/**\n * Formata o tempo restante em formato legível com horas (hh:mm:ss)\n */\nfunction formatTimeRemainingLong(seconds) {\n    if (seconds <= 0)\n        return '00:00:00';\n    var hours = Math.floor(seconds / 3600);\n    var minutes = Math.floor((seconds % 3600) / 60);\n    var remainingSeconds = seconds % 60;\n    return \"\".concat(hours.toString().padStart(2, '0'), \":\").concat(minutes.toString().padStart(2, '0'), \":\").concat(remainingSeconds.toString().padStart(2, '0'));\n}\n/**\n * Agrupa tarefas por status e retorna contagem\n */\nfunction groupTasksByStatus(tasks) {\n    return tasks.reduce(function (acc, task) {\n        var status = task.status;\n        acc[status] = (acc[status] || 0) + 1;\n        return acc;\n    }, {});\n}\n/**\n * Agrupa tarefas por tipo e retorna contagem\n */\nfunction groupTasksByType(tasks) {\n    return tasks.reduce(function (acc, task) {\n        var type = task.type;\n        acc[type] = (acc[type] || 0) + 1;\n        return acc;\n    }, {});\n}\n/**\n * Agrupa tarefas por prioridade e retorna contagem\n */\nfunction groupTasksByPriority(tasks) {\n    return tasks.reduce(function (acc, task) {\n        var priority = task.priority;\n        acc[priority] = (acc[priority] || 0) + 1;\n        return acc;\n    }, {});\n}\n/**\n * Ordenar tarefas por tempo de execução agendado\n */\nfunction sortTasksByScheduledTime(tasks) {\n    return __spreadArray([], tasks, true).sort(function (a, b) {\n        // Tarefas sem tempo agendado vão para o final\n        if (!a.scheduledFor && !b.scheduledFor)\n            return 0;\n        if (!a.scheduledFor)\n            return 1;\n        if (!b.scheduledFor)\n            return -1;\n        // Ordenar por tempo agendado\n        return a.scheduledFor.getTime() - b.scheduledFor.getTime();\n    });\n}\n/**\n * Ordenar tarefas por prioridade e tempo agendado\n */\nfunction sortTasksByPriorityAndTime(tasks) {\n    return __spreadArray([], tasks, true).sort(function (a, b) {\n        // Primeiro ordenar por prioridade\n        if (a.priority !== b.priority) {\n            return a.priority - b.priority;\n        }\n        // Depois ordenar por tempo agendado\n        if (!a.scheduledFor && !b.scheduledFor)\n            return 0;\n        if (!a.scheduledFor)\n            return 1;\n        if (!b.scheduledFor)\n            return -1;\n        return a.scheduledFor.getTime() - b.scheduledFor.getTime();\n    });\n}\n\n\n//# sourceURL=webpack:///./src/TaskManager/utils.ts?")},"./src/TaskManager/wrappers.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.processIncomingAttacksWithTaskManager = processIncomingAttacksWithTaskManager;\nexports.parseNobleCommandWithTaskManager = parseNobleCommandWithTaskManager;\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\n// Manter a importação como comentário para referência, mas não usar\n// import { processIncomingAttacks as originalProcessIncomingAttacks } from "../actions/index";\nvar TaskManager_1 = __webpack_require__(/*! ./TaskManager */ "./src/TaskManager/TaskManager.ts");\nvar types_1 = __webpack_require__(/*! ./types */ "./src/TaskManager/types.ts");\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar DodgeTaskHandler_1 = __webpack_require__(/*! ./handlers/DodgeTaskHandler */ "./src/TaskManager/handlers/DodgeTaskHandler.ts");\nvar CancelTaskHandler_1 = __webpack_require__(/*! ./handlers/CancelTaskHandler */ "./src/TaskManager/handlers/CancelTaskHandler.ts");\nvar NobleSnipeTaskHandler_1 = __webpack_require__(/*! ./handlers/NobleSnipeTaskHandler */ "./src/TaskManager/handlers/NobleSnipeTaskHandler.ts");\nvar NotificationTaskHandler_1 = __webpack_require__(/*! ./handlers/NotificationTaskHandler */ "./src/TaskManager/handlers/NotificationTaskHandler.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar command_utils_1 = __webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts");\nvar config_1 = __webpack_require__(/*! ./config */ "./src/TaskManager/config.ts");\nvar adapter_1 = __webpack_require__(/*! ./adapter */ "./src/TaskManager/adapter.ts");\n/**\n * Versão avançada do processIncomingAttacks que usa o TaskManager\n * Esta função mantém a compatibilidade com a interface original, mas utiliza\n * internamente o TaskManager para gerenciar as tarefas de forma mais organizada\n */\nfunction processIncomingAttacksWithTaskManager(config, villages) {\n    return __awaiter(this, void 0, void 0, function () {\n        var table, taskManager, taskManagerInstance, headerRow, stateHeader, rows, currentServerTime_1, activeCommandIds_1, _loop_1, _i, rows_1, row, observerInterval_1, allCommands, error_1, commands, currentServerTime, _loop_2, _a, commands_1, command, error_2, scheduledTasks;\n        var _b, _c, _d, _e, _f;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Processando ataques recebidos usando TaskManager...", "info");\n                    table = document.getElementById("incomings_table");\n                    if (!table)\n                        return [2 /*return*/];\n                    // Verificar se o TaskManager está ativado\n                    if (!config_1.TaskManagerConfig.enabled) {\n                        (0, logging_utils_1.sendLog)("ERRO: TaskManager está desativado. Esta versão do sistema requer o TaskManager ativado.", "error");\n                        UI.ErrorMessage("AutoDodge: O TaskManager precisa estar ativado para o funcionamento correto do sistema.");\n                        return [2 /*return*/];\n                    }\n                    taskManager = TaskManager_1.TaskManager.getInstance();\n                    // Chamar a implementação original se não estamos usando apenas o TaskManager\n                    if (!config_1.TaskManagerConfig.useTaskManagerOnly) {\n                        (0, logging_utils_1.sendLog)("AVISO: Modo híbrido está configurado, mas apenas o TaskManager está disponível nesta versão.", "warning");\n                        UI.SuccessMessage("AutoDodge: Usando apenas o TaskManager para processar comandos.");\n                    }\n                    (0, logging_utils_1.sendLog)("Usando apenas o TaskManager para processar comandos.", "info");\n                    taskManagerInstance = TaskManager_1.TaskManager.getInstance();\n                    if (!!config_1.TaskManagerConfig.useTaskManagerOnly) return [3 /*break*/, 1];\n                    (0, logging_utils_1.sendLog)("Usando sistema híbrido (antigo + TaskManager).", "info");\n                    return [3 /*break*/, 9];\n                case 1:\n                    (0, logging_utils_1.sendLog)("Usando apenas o TaskManager para processar comandos.", "info");\n                    _g.label = 2;\n                case 2:\n                    _g.trys.push([2, 8, , 9]);\n                    headerRow = table.querySelector("tr");\n                    if (headerRow) {\n                        // Verificar se o cabeçalho "Estado" já existe\n                        if (!headerRow.querySelector(\'th[data-state-header="true"]\')) {\n                            stateHeader = document.createElement("th");\n                            stateHeader.textContent = "Estado";\n                            stateHeader.setAttribute("data-state-header", "true");\n                            headerRow.insertBefore(stateHeader, headerRow.children[1]);\n                        }\n                    }\n                    rows = Array.from(document.querySelectorAll("#incomings_table tr:not(:first-child):not(:last-child)"));\n                    (0, logging_utils_1.sendLog)("Encontradas ".concat(rows.length, " linhas na tabela de entradas"), "info");\n                    currentServerTime_1 = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    activeCommandIds_1 = new Set();\n                    _loop_1 = function (row) {\n                        var quickeditSpan, commandId, nameCell, attackerCell, targetCell, countdownCell, commandName, attackerName, targetName, countdown, parsedCommand_1, command_2, error_3;\n                        return __generator(this, function (_h) {\n                            switch (_h.label) {\n                                case 0:\n                                    quickeditSpan = row.querySelector(".quickedit");\n                                    if (!quickeditSpan) return [3 /*break*/, 11];\n                                    commandId = quickeditSpan.getAttribute("data-id");\n                                    if (!commandId) {\n                                        (0, logging_utils_1.sendLog)("Linha da tabela sem ID de comando v\\u00E1lido", "warning");\n                                        return [2 /*return*/, "continue"];\n                                    }\n                                    nameCell = row.querySelector(".quickedit-label");\n                                    attackerCell = row.querySelector("td:nth-child(3)");\n                                    targetCell = row.querySelector("td:nth-child(4)");\n                                    countdownCell = row.querySelector("td:nth-child(7) span, td:nth-child(8) span");\n                                    commandName = ((_b = nameCell === null || nameCell === void 0 ? void 0 : nameCell.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || "Desconhecido";\n                                    attackerName = ((_c = attackerCell === null || attackerCell === void 0 ? void 0 : attackerCell.textContent) === null || _c === void 0 ? void 0 : _c.trim()) || "Desconhecido";\n                                    targetName = ((_d = targetCell === null || targetCell === void 0 ? void 0 : targetCell.textContent) === null || _d === void 0 ? void 0 : _d.trim()) || "Desconhecido";\n                                    countdown = ((_e = countdownCell === null || countdownCell === void 0 ? void 0 : countdownCell.textContent) === null || _e === void 0 ? void 0 : _e.trim()) || "???";\n                                    (0, logging_utils_1.sendLog)("Processando comando: ID=".concat(commandId, ", Nome=\\"").concat(commandName, "\\", Atacante=\\"").concat(attackerName, "\\", Alvo=\\"").concat(targetName, "\\", Countdown=\\"").concat(countdown, "\\""), "info");\n                                    _h.label = 1;\n                                case 1:\n                                    _h.trys.push([1, 9, , 10]);\n                                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../utils/helper.utils */ "./src/utils/helper.utils.ts")); }).then(function (utils) {\n                                            return utils.parseCommandFromRow(villages, row, currentServerTime_1, 0);\n                                        })];\n                                case 2:\n                                    parsedCommand_1 = _h.sent();\n                                    if (!parsedCommand_1) return [3 /*break*/, 4];\n                                    (0, logging_utils_1.sendLog)("Comando ".concat(commandId, " processado e salvo com sucesso"), "info");\n                                    activeCommandIds_1.add(parsedCommand_1.id);\n                                    // Atualizar nome do comando e adicionar botão de reset\n                                    setTimeout(function () {\n                                        Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts")); }).then(function (utils) {\n                                            utils.updateCommandName(row, parsedCommand_1);\n                                        });\n                                    }, 200);\n                                    Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../utils/dom.utils */ "./src/utils/dom.utils.ts")); }).then(function (domUtils) {\n                                        domUtils.createResetButton(parsedCommand_1.id, row);\n                                    });\n                                    // Processar comandos de nobre\n                                    return [4 /*yield*/, parseNobleCommandWithTaskManager(row, parsedCommand_1)];\n                                case 3:\n                                    // Processar comandos de nobre\n                                    _h.sent();\n                                    return [3 /*break*/, 8];\n                                case 4: return [4 /*yield*/, command_1.Command.load(commandId)];\n                                case 5:\n                                    command_2 = _h.sent();\n                                    if (!command_2) return [3 /*break*/, 7];\n                                    (0, logging_utils_1.sendLog)("Comando ".concat(commandId, " carregado: state=").concat(command_2.state, ", dodgeTime=").concat((_f = command_2.dodgeTime) === null || _f === void 0 ? void 0 : _f.toLocaleString()), "info");\n                                    activeCommandIds_1.add(command_2.id);\n                                    // Atualizar nome do comando e adicionar botão de reset\n                                    setTimeout(function () {\n                                        Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts")); }).then(function (utils) {\n                                            utils.updateCommandName(row, command_2);\n                                        });\n                                    }, 200);\n                                    Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../utils/dom.utils */ "./src/utils/dom.utils.ts")); }).then(function (domUtils) {\n                                        domUtils.createResetButton(command_2.id, row);\n                                    });\n                                    // Processar comandos de nobre\n                                    return [4 /*yield*/, parseNobleCommandWithTaskManager(row, command_2)];\n                                case 6:\n                                    // Processar comandos de nobre\n                                    _h.sent();\n                                    return [3 /*break*/, 8];\n                                case 7:\n                                    (0, logging_utils_1.sendLog)("Comando ".concat(commandId, " n\\u00E3o pode ser carregado do armazenamento"), "error");\n                                    _h.label = 8;\n                                case 8: return [3 /*break*/, 10];\n                                case 9:\n                                    error_3 = _h.sent();\n                                    (0, logging_utils_1.sendLog)("Erro ao processar comando ".concat(commandId, ": ").concat(error_3), "error");\n                                    return [3 /*break*/, 10];\n                                case 10: return [3 /*break*/, 12];\n                                case 11:\n                                    (0, logging_utils_1.sendLog)("Linha da tabela sem elemento quickedit", "warning");\n                                    _h.label = 12;\n                                case 12: return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _i = 0, rows_1 = rows;\n                    _g.label = 3;\n                case 3:\n                    if (!(_i < rows_1.length)) return [3 /*break*/, 6];\n                    row = rows_1[_i];\n                    return [5 /*yield**/, _loop_1(row)];\n                case 4:\n                    _g.sent();\n                    _g.label = 5;\n                case 5:\n                    _i++;\n                    return [3 /*break*/, 3];\n                case 6:\n                    (0, logging_utils_1.sendLog)("Processados ".concat(activeCommandIds_1.size, "/").concat(rows.length, " comandos"), "info");\n                    // Teste de anexação de comandos\n                    Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../actions/annexed */ "./src/actions/annexed.ts")); }).then(function (annexed) {\n                        annexed.testAnnexCommands(activeCommandIds_1);\n                    });\n                    observerInterval_1 = setInterval(function () {\n                        var stateHeader = document.querySelector(\'#incomings_table th[data-state-header="true"]\');\n                        if (!stateHeader) {\n                            // Reprocessar ataques quando o cabeçalho não está presente\n                            processIncomingAttacksWithTaskManager(config, villages);\n                            (0, logging_utils_1.sendLog)(\'Incoming attacks refreshed due to missing "Estado" header.\', "info");\n                        }\n                    }, 200);\n                    // Limpar o intervalo quando a página for fechada\n                    window.addEventListener("beforeunload", function () {\n                        clearInterval(observerInterval_1);\n                    });\n                    return [4 /*yield*/, Promise.all(Array.from(activeCommandIds_1).map(function (id) { return command_1.Command.load(id); }))];\n                case 7:\n                    allCommands = _g.sent();\n                    // Processar comandos usando o TaskManager diretamente\n                    (0, adapter_1.processCommandsWithTaskManager)(allCommands, currentServerTime_1);\n                    return [3 /*break*/, 9];\n                case 8:\n                    error_1 = _g.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao processar ataques: ".concat(error_1), "error");\n                    return [3 /*break*/, 9];\n                case 9:\n                    _g.trys.push([9, 11, , 12]);\n                    return [4 /*yield*/, (0, command_utils_1.getAllCommandsFromStorage)()];\n                case 10:\n                    commands = _g.sent();\n                    currentServerTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    if (commands.length > 0) {\n                        (0, logging_utils_1.sendLog)("Processando ".concat(commands.length, " comandos diretamente pelo TaskManager"), "info");\n                        _loop_2 = function (command) {\n                            // Verificar se o comando já está processado no TaskManager\n                            var existingTasks = taskManagerInstance.getTasksByStatus(types_1.TaskStatus.SCHEDULED)\n                                .filter(function (task) { var _a; return ((_a = task.command) === null || _a === void 0 ? void 0 : _a.id) === command.id; });\n                            if (existingTasks.length > 0) {\n                                // Se o nível de log for detalhado (2) ou debug (3), mostrar informações detalhadas\n                                if (config_1.TaskManagerConfig.logLevel >= 2) {\n                                    (0, logging_utils_1.sendLog)("Comando ".concat(command.id, " j\\u00E1 possui ").concat(existingTasks.length, " tarefas agendadas"), "info");\n                                }\n                                return "continue";\n                            }\n                            // Processar com base no estado do comando\n                            switch (command.state) {\n                                case command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING:\n                                    if (command.snipeInfo && command.snipeInfo.launchTime) {\n                                        var snipeTime = new Date(command.snipeInfo.launchTime);\n                                        // Verificar se o tempo de lançamento ainda não passou\n                                        if (snipeTime > currentServerTime) {\n                                            // Criar tarefa de snipe\n                                            try {\n                                                var task = NobleSnipeTaskHandler_1.NobleSnipeTaskHandler.createTask({\n                                                    command: command,\n                                                    scheduledFor: snipeTime,\n                                                    priority: types_1.TaskPriority.CRITICAL\n                                                });\n                                                if (config_1.TaskManagerConfig.logLevel >= 1) {\n                                                    (0, logging_utils_1.sendLog)("Tarefa de snipe criada: ".concat(task.id, " para ").concat(command.id, " \\u00E0s ").concat(snipeTime.toLocaleString()), "info");\n                                                }\n                                                // Verificar se precisa enviar notificação\n                                                if (config.NOTIFICATIONS_ENABLED && config.NOTIFY_NOBLE_SNIPE) {\n                                                    var notificationTime = new Date(snipeTime.getTime() - config.NOTIFICATION_SECONDS_DODGE * 1000);\n                                                    // Só criar notificação se ainda estiver no futuro\n                                                    if (notificationTime > currentServerTime) {\n                                                        var secondsUntilAction = Math.floor((snipeTime.getTime() - notificationTime.getTime()) / 1000);\n                                                        var notificationTask = NotificationTaskHandler_1.NotificationTaskHandler.createTask({\n                                                            command: command,\n                                                            scheduledFor: notificationTime,\n                                                            priority: types_1.TaskPriority.MEDIUM,\n                                                            type: "NobleSnipe",\n                                                            secondsUntilAction: secondsUntilAction\n                                                        });\n                                                        if (config_1.TaskManagerConfig.logLevel >= 2) {\n                                                            (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o criada: ".concat(notificationTask.id, " para ").concat(command.id), "info");\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            catch (error) {\n                                                (0, logging_utils_1.sendLog)("Erro ao criar tarefa de snipe para ".concat(command.id, ": ").concat(error), "error");\n                                            }\n                                        }\n                                    }\n                                    break;\n                                case command_1.COMMAND_STATE.WAITING_TO_CANCEL:\n                                    if (command.cancelTime) {\n                                        // Verificar se o tempo de cancelamento ainda não passou\n                                        if (command.cancelTime > currentServerTime) {\n                                            // Criar tarefa de cancelamento\n                                            try {\n                                                var task = CancelTaskHandler_1.CancelTaskHandler.createTask({\n                                                    command: command,\n                                                    scheduledFor: command.cancelTime,\n                                                    priority: types_1.TaskPriority.MEDIUM\n                                                });\n                                                if (config_1.TaskManagerConfig.logLevel >= 1) {\n                                                    (0, logging_utils_1.sendLog)("Tarefa de cancelamento criada: ".concat(task.id, " para ").concat(command.id, " \\u00E0s ").concat(command.cancelTime.toLocaleString()), "info");\n                                                }\n                                                // Verificar se precisa enviar notificação\n                                                if (config.NOTIFICATIONS_ENABLED && config.NOTIFY_CANCEL) {\n                                                    var notificationTime = new Date(command.cancelTime.getTime() - config.NOTIFICATION_SECONDS_CANCEL * 1000);\n                                                    // Só criar notificação se ainda estiver no futuro\n                                                    if (notificationTime > currentServerTime) {\n                                                        var secondsUntilAction = Math.floor((command.cancelTime.getTime() - notificationTime.getTime()) / 1000);\n                                                        var notificationTask = NotificationTaskHandler_1.NotificationTaskHandler.createTask({\n                                                            command: command,\n                                                            scheduledFor: notificationTime,\n                                                            priority: types_1.TaskPriority.LOW,\n                                                            type: "Cancel",\n                                                            secondsUntilAction: secondsUntilAction\n                                                        });\n                                                        if (config_1.TaskManagerConfig.logLevel >= 2) {\n                                                            (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o criada: ".concat(notificationTask.id, " para ").concat(command.id), "info");\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            catch (error) {\n                                                (0, logging_utils_1.sendLog)("Erro ao criar tarefa de cancelamento para ".concat(command.id, ": ").concat(error), "error");\n                                            }\n                                        }\n                                    }\n                                    break;\n                                default:\n                                    // Verificar se temos um dodge time\n                                    if (command.dodgeTime && command.dodgeTime > currentServerTime) {\n                                        // Criar tarefa de dodge\n                                        try {\n                                            var task = DodgeTaskHandler_1.DodgeTaskHandler.createTask({\n                                                command: command,\n                                                scheduledFor: command.dodgeTime,\n                                                priority: types_1.TaskPriority.HIGH\n                                            });\n                                            if (config_1.TaskManagerConfig.logLevel >= 1) {\n                                                (0, logging_utils_1.sendLog)("Tarefa de dodge criada: ".concat(task.id, " para ").concat(command.id, " \\u00E0s ").concat(command.dodgeTime.toLocaleString()), "info");\n                                            }\n                                            // Verificar se precisa enviar notificação\n                                            if (config.NOTIFICATIONS_ENABLED && config.NOTIFY_DODGE) {\n                                                var notificationTime = new Date(command.dodgeTime.getTime() - config.NOTIFICATION_SECONDS_DODGE * 1000);\n                                                // Só criar notificação se ainda estiver no futuro\n                                                if (notificationTime > currentServerTime) {\n                                                    var secondsUntilAction = Math.floor((command.dodgeTime.getTime() - notificationTime.getTime()) / 1000);\n                                                    var notificationTask = NotificationTaskHandler_1.NotificationTaskHandler.createTask({\n                                                        command: command,\n                                                        scheduledFor: notificationTime,\n                                                        priority: types_1.TaskPriority.LOW,\n                                                        type: "Dodge",\n                                                        secondsUntilAction: secondsUntilAction\n                                                    });\n                                                    if (config_1.TaskManagerConfig.logLevel >= 2) {\n                                                        (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o criada: ".concat(notificationTask.id, " para ").concat(command.id), "info");\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        catch (error) {\n                                            (0, logging_utils_1.sendLog)("Erro ao criar tarefa de dodge para ".concat(command.id, ": ").concat(error), "error");\n                                        }\n                                    }\n                                    break;\n                            }\n                        };\n                        // Processar cada comando e criar tarefas apropriadas\n                        for (_a = 0, commands_1 = commands; _a < commands_1.length; _a++) {\n                            command = commands_1[_a];\n                            _loop_2(command);\n                        }\n                    }\n                    return [3 /*break*/, 12];\n                case 11:\n                    error_2 = _g.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao processar comandos diretamente pelo TaskManager: ".concat(error_2), "error");\n                    return [3 /*break*/, 12];\n                case 12:\n                    scheduledTasks = taskManagerInstance.getTasksByStatus(types_1.TaskStatus.SCHEDULED);\n                    if (scheduledTasks.length > 0) {\n                        (0, logging_utils_1.sendLog)("Tarefas agendadas pelo TaskManager: ".concat(scheduledTasks.length), "info");\n                        // Mostrar detalhes das próximas 3 tarefas\n                        if (config_1.TaskManagerConfig.logLevel >= 2) {\n                            scheduledTasks\n                                .sort(function (a, b) {\n                                var timeA = a.scheduledFor ? a.scheduledFor.getTime() : Infinity;\n                                var timeB = b.scheduledFor ? b.scheduledFor.getTime() : Infinity;\n                                return timeA - timeB;\n                            })\n                                .slice(0, 3)\n                                .forEach(function (task) {\n                                var _a;\n                                var timeUntil = task.scheduledFor\n                                    ? Math.floor((task.scheduledFor.getTime() - new Date().getTime()) / 1000)\n                                    : 0;\n                                (0, logging_utils_1.sendLog)("Tarefa ".concat(task.id, " (").concat(task.type, "): ").concat(((_a = task.command) === null || _a === void 0 ? void 0 : _a.name) || "Desconhecido", " - Em ").concat(timeUntil, "s"), "info");\n                            });\n                        }\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Nenhuma tarefa agendada pelo TaskManager", "info");\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Versão adaptada do parseNobleCommand que usa o TaskManager para gerenciar as tarefas de snipe\n * @param row Elemento DOM da linha do comando\n * @param command Comando a ser processado\n */\nfunction parseNobleCommandWithTaskManager(row, command) {\n    return __awaiter(this, void 0, void 0, function () {\n        var taskManager, existingTasks, snipeTime_1, currentServerTime_2, task;\n        var _a;\n        return __generator(this, function (_b) {\n            // Verificar se o TaskManager está ativado\n            if (!config_1.TaskManagerConfig.enabled) {\n                (0, logging_utils_1.sendLog)("ERRO: TaskManager está desativado. Esta versão do sistema requer o TaskManager ativado.", "error");\n                UI.ErrorMessage("AutoDodge: O TaskManager precisa estar ativado para processar comandos de nobre.");\n                return [2 /*return*/];\n            }\n            // Verificar se estamos usando o modo híbrido\n            if (!config_1.TaskManagerConfig.useTaskManagerOnly) {\n                (0, logging_utils_1.sendLog)("AVISO: Modo híbrido está configurado, mas apenas o TaskManager está disponível nesta versão.", "warning");\n            }\n            // Verificar se o comando é um comando de nobre válido para snipe\n            if (!command.name.includes(\'Nobre\') ||\n                command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_IMPOSSIBLE ||\n                command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED) {\n                return [2 /*return*/];\n            }\n            // Processar snipe de nobre com TaskManager\n            try {\n                // Verificar se o comando está em um estado elegível para snipe\n                if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING && ((_a = command.snipeInfo) === null || _a === void 0 ? void 0 : _a.launchTime)) {\n                    taskManager = TaskManager_1.TaskManager.getInstance();\n                    existingTasks = taskManager.getTasksByStatus(types_1.TaskStatus.SCHEDULED)\n                        .filter(function (task) { var _a; return ((_a = task.command) === null || _a === void 0 ? void 0 : _a.id) === command.id && task.type === types_1.TaskType.NOBLE_SNIPE; });\n                    if (existingTasks.length === 0) {\n                        // Criar uma tarefa de snipe de nobre\n                        try {\n                            snipeTime_1 = new Date(command.snipeInfo.launchTime);\n                            currentServerTime_2 = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                            // Verificar se o tempo de lançamento ainda não passou\n                            if (snipeTime_1 > currentServerTime_2) {\n                                task = NobleSnipeTaskHandler_1.NobleSnipeTaskHandler.createTask({\n                                    command: command,\n                                    scheduledFor: snipeTime_1,\n                                    priority: types_1.TaskPriority.CRITICAL\n                                });\n                                if (config_1.TaskManagerConfig.logLevel >= 1) {\n                                    (0, logging_utils_1.sendLog)("Tarefa de snipe de nobre criada: ".concat(task.id, " para ").concat(command.id, " \\u00E0s ").concat(snipeTime_1.toLocaleString()), "info");\n                                }\n                                // Verificar se precisa enviar notificação\n                                Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../storage */ "./src/storage.ts")); }).then(function (_a) {\n                                    var AutoDodgeStorage = _a.AutoDodgeStorage;\n                                    var config = AutoDodgeStorage.loadConfig();\n                                    if (config.NOTIFICATIONS_ENABLED && config.NOTIFY_NOBLE_SNIPE) {\n                                        var notificationTime = new Date(snipeTime_1.getTime() - config.NOTIFICATION_SECONDS_NOBLE_SNIPE * 1000);\n                                        // Só criar notificação se ainda estiver no futuro\n                                        if (notificationTime > currentServerTime_2) {\n                                            var secondsUntilAction = Math.floor((snipeTime_1.getTime() - notificationTime.getTime()) / 1000);\n                                            var notificationTask = NotificationTaskHandler_1.NotificationTaskHandler.createTask({\n                                                command: command,\n                                                scheduledFor: notificationTime,\n                                                priority: types_1.TaskPriority.MEDIUM,\n                                                type: "NobleSnipe",\n                                                secondsUntilAction: secondsUntilAction\n                                            });\n                                            if (config_1.TaskManagerConfig.logLevel >= 2) {\n                                                (0, logging_utils_1.sendLog)("Tarefa de notifica\\u00E7\\u00E3o criada: ".concat(notificationTask.id, " para ").concat(command.id), "info");\n                                            }\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                        catch (error) {\n                            (0, logging_utils_1.sendLog)("Erro ao criar tarefa de snipe de nobre para ".concat(command.id, ": ").concat(error), "error");\n                        }\n                    }\n                    else if (config_1.TaskManagerConfig.logLevel >= 2) {\n                        (0, logging_utils_1.sendLog)("Comando ".concat(command.id, " j\\u00E1 possui uma tarefa de snipe agendada"), "info");\n                    }\n                }\n            }\n            catch (error) {\n                (0, logging_utils_1.sendLog)("Erro ao processar comando de nobre com TaskManager: ".concat(error), "error");\n            }\n            return [2 /*return*/];\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/TaskManager/wrappers.ts?')},"./src/actions/annexed.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.testAnnexCommands = testAnnexCommands;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar command_utils_1 = __webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts");\nvar time_utils_1 = __webpack_require__(/*! ../utils/time.utils */ "./src/utils/time.utils.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar stats_1 = __webpack_require__(/*! ../stats */ "./src/stats.ts");\nfunction testAnnexCommands(activeCommandIds) {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, commands, activeCommands, groupedCommands, adjustedCommandsCount, MIN_DODGE_INTERVAL;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    config = storage_1.AutoDodgeStorage.loadConfig();\n                    return [4 /*yield*/, (0, command_utils_1.getAllCommandsFromStorage)()];\n                case 1:\n                    commands = _a.sent();\n                    activeCommands = commands.filter(function (cmd) { return activeCommandIds.has(cmd.id); });\n                    groupedCommands = commands.reduce(function (groups, command) {\n                        var destId = command.targetId;\n                        if (!groups[destId]) {\n                            groups[destId] = [];\n                        }\n                        groups[destId].push(command);\n                        return groups;\n                    }, {});\n                    adjustedCommandsCount = 0;\n                    MIN_DODGE_INTERVAL = 10000;\n                    // Process each village\'s commands\n                    Object.values(groupedCommands).forEach(function (villageCommands) {\n                        // Sort commands by landing time\n                        villageCommands.sort(function (a, b) {\n                            return new Date(a.landingTime).getTime() - new Date(b.landingTime).getTime();\n                        });\n                        var lastDodgeTime = null;\n                        var leaderCommand = null;\n                        // First pass: Identify leader commands and initial dodge times\n                        villageCommands.forEach(function (command, index) {\n                            if (activeCommandIds.has(command.id) &&\n                                (command.state === command_1.COMMAND_STATE.PLANNING ||\n                                    command.state === command_1.COMMAND_STATE.DODGING)) {\n                                var proposedDodgeTime = new Date(command.landingTime.getTime() - config.DODGE_TIME * 1000);\n                                if (!lastDodgeTime ||\n                                    proposedDodgeTime.getTime() - lastDodgeTime.getTime() >=\n                                        config.GROUP_DODGE_WINDOW * 1000) {\n                                    // This is a new leader command\n                                    leaderCommand = command;\n                                    command.isLeader = true;\n                                    command.annexedCommands = [];\n                                    command.dodgeTime = proposedDodgeTime;\n                                    lastDodgeTime = proposedDodgeTime;\n                                }\n                                else {\n                                    // This command should be annexed to the current leader\n                                    command.isLeader = false;\n                                    leaderCommand === null || leaderCommand === void 0 ? void 0 : leaderCommand.annexedCommands.push(command.id);\n                                }\n                            }\n                        });\n                        // Second pass: Adjust dodge times and set up cancel times\n                        lastDodgeTime = null;\n                        villageCommands.forEach(function (command, index) {\n                            if (command.isLeader) {\n                                if (lastDodgeTime) {\n                                    // Ensure minimum interval between dodges\n                                    command.dodgeTime = new Date(Math.max(command.dodgeTime.getTime(), lastDodgeTime.getTime() + MIN_DODGE_INTERVAL));\n                                }\n                                lastDodgeTime = command.dodgeTime;\n                                // Set up cancel time for leader\n                                command.cancelTime = (0, time_utils_1.calculateCancelTime)(command.dodgeTime, command.landingTime);\n                                // Adjust annexed commands\n                                command.annexedCommands.forEach(function (annexedId, annexIndex) {\n                                    var annexedCommand = commands.find(function (cmd) { return cmd.id === annexedId; });\n                                    if (annexedCommand) {\n                                        annexedCommand.dodgeTime = new Date(command.dodgeTime.getTime() + (annexIndex + 1) * 1000);\n                                        annexedCommand.cancelTime = new Date(command.cancelTime.getTime() + (annexIndex + 1) * 1000);\n                                        if (!annexedCommand.annexed) {\n                                            annexedCommand.annexed = true;\n                                            adjustedCommandsCount++;\n                                        }\n                                        annexedCommand.save();\n                                    }\n                                });\n                                command.save();\n                                adjustedCommandsCount++;\n                            }\n                        });\n                    });\n                    // Update the statistic for adjusted (annexed) commands\n                    (0, stats_1.updateStat)("commandsAnnexed", adjustedCommandsCount);\n                    (0, logging_utils_1.sendLog)("Finished annexing and adjusting command times. Adjusted ".concat(adjustedCommandsCount, " commands."), "info");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/actions/annexed.ts?')},"./src/actions/cancellation.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.initiateCancel = initiateCancel;\nexports.handleInitiatingCancel = handleInitiatingCancel;\nexports.finishCancellation = finishCancellation;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar script_states_1 = __webpack_require__(/*! ../script-states */ "./src/script-states.ts");\nvar stats_1 = __webpack_require__(/*! ../stats */ "./src/stats.ts");\nvar command_utils_1 = __webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar url_utils_1 = __webpack_require__(/*! ../utils/url.utils */ "./src/utils/url.utils.ts");\nvar common_1 = __webpack_require__(/*! ./common */ "./src/actions/common.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\nfunction initiateCancel(command_2, _a) {\n    return __awaiter(this, arguments, void 0, function (command, _b) {\n        var cancelUrl;\n        var REDIRECT_DELAY = _b.REDIRECT_DELAY;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Initiating cancel for command ".concat(command.id), "info");\n                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.INITIATING_CANCEL)];\n                case 1:\n                    _c.sent();\n                    return [4 /*yield*/, (0, service_1.setCurrentCommandId)(command.id)];\n                case 2:\n                    _c.sent();\n                    cancelUrl = (0, url_utils_1.getCancelUrl)(command.targetId);\n                    setTimeout(function () {\n                        window.location.href = cancelUrl;\n                    }, REDIRECT_DELAY * 1000);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction handleInitiatingCancel(commandId, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command, outgoingCommand, outgoingCommandId, canceledCommand, command_2, cancelButton, commandExists;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Initiating cancellation for command ".concat(commandId), "info");\n                    return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _a.sent();\n                    if (!command) {\n                        (0, logging_utils_1.sendLog)("Command ".concat(commandId, " not found in storage"), "error");\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    outgoingCommand = document.querySelector("#commands_outgoings .command-row .quickedit-out[data-id=\\"".concat(command.dodgeCommandId, "\\"]"));\n                    if (!outgoingCommand) {\n                        (0, logging_utils_1.sendLog)("No outgoing support command found for dodge command ID ".concat(command.dodgeCommandId), "error");\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    outgoingCommandId = outgoingCommand.getAttribute(\'data-id\');\n                    if (!outgoingCommandId) {\n                        (0, logging_utils_1.sendLog)("Could not find outgoing command ID", "error");\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    // Update the command in storage with the correct ID\n                    command.id = outgoingCommandId;\n                    command.save();\n                    (0, logging_utils_1.sendLog)("Updated command ID from ".concat(commandId, " to ").concat(outgoingCommandId), "info");\n                    canceledCommand = outgoingCommand.querySelector(\'.command_hover_details[data-command-type="cancel"]\');\n                    if (!canceledCommand) return [3 /*break*/, 5];\n                    (0, logging_utils_1.sendLog)("Found already canceled command for ".concat(commandId, ". Completing cancellation."), \'info\');\n                    return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 2:\n                    command_2 = _a.sent();\n                    if (!command_2) return [3 /*break*/, 4];\n                    command_2.state = command_1.COMMAND_STATE.COMPLETED;\n                    return [4 /*yield*/, command_2.save()];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4:\n                    finishCancellation(commandId, true, false, config);\n                    return [2 /*return*/];\n                case 5:\n                    cancelButton = document.querySelector("#commands_outgoings .command-cancel[data-id=\\"".concat(command.dodgeCommandId, "\\"]"));\n                    if (cancelButton) {\n                        (0, logging_utils_1.sendLog)("Found cancel button for dodge command ".concat(command.dodgeCommandId, ". Clicking in ").concat(config.ACTION_DELAY, " seconds..."), "info");\n                        setTimeout(function () {\n                            cancelButton.click();\n                            // Increase delay before checking cancellation status\n                            setTimeout(function () {\n                                checkCancellationStatus(commandId, config, 1);\n                            }, (config.ACTION_DELAY * 2) * 1000);\n                        }, config.ACTION_DELAY * 1000);\n                    }\n                    else {\n                        commandExists = document.querySelector("#commands_outgoings .command-row[data-id=\\"".concat(command.dodgeCommandId, "\\"]"));\n                        if (commandExists) {\n                            (0, logging_utils_1.sendLog)("Command ".concat(command.dodgeCommandId, " found, but cancel button not present. Assuming it can\'t be cancelled anymore."), "info");\n                            finishCancellation(commandId, true, false, config);\n                        }\n                        else {\n                            (0, logging_utils_1.sendLog)("Neither cancel button nor command ".concat(command.dodgeCommandId, " found. Assuming it was already cancelled."), "info");\n                            finishCancellation(commandId, true, false, config);\n                        }\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction checkCancellationStatus(commandId_1, config_1) {\n    return __awaiter(this, arguments, void 0, function (commandId, config, attempt) {\n        var command, commandRow;\n        if (attempt === void 0) { attempt = 1; }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _a.sent();\n                    if (!command) {\n                        (0, logging_utils_1.sendLog)("Command ".concat(commandId, " not found in storage"), "error");\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    (0, logging_utils_1.sendLog)("Checking cancellation status for dodge command ".concat(command.dodgeCommandId), "info");\n                    commandRow = document.querySelector("#commands_outgoings .command-row .command-cancel[data-id=\\"".concat(command.dodgeCommandId, "\\"]"));\n                    if (!commandRow) {\n                        (0, logging_utils_1.sendLog)("Dodge command ".concat(command.dodgeCommandId, " not found, assuming successfully cancelled"), "info");\n                        finishCancellation(commandId, true, undefined, config);\n                    }\n                    else {\n                        if (attempt < 3) {\n                            (0, logging_utils_1.sendLog)("Dodge command ".concat(command.dodgeCommandId, " still present. Retrying check in 2 seconds... (Attempt ").concat(attempt, "/3)"), "info");\n                            setTimeout(function () {\n                                checkCancellationStatus(commandId, config, attempt + 1);\n                            }, 2000);\n                        }\n                        else {\n                            (0, logging_utils_1.sendLog)("Dodge command ".concat(command.dodgeCommandId, " still present after 3 checks, cancellation failed or not confirmed"), "info");\n                            command.cancelAttempts++;\n                            command.save();\n                            if (command.cancelAttempts >= config.MAX_CANCEL_ATTEMPTS) {\n                                (0, logging_utils_1.sendLog)("Max cancel attempts reached for incoming command ".concat(commandId), "info");\n                                finishCancellation(commandId, false, true, config);\n                            }\n                            else {\n                                (0, logging_utils_1.sendLog)("Retrying cancellation. Attempt ".concat(command.cancelAttempts, " of ").concat(config.MAX_CANCEL_ATTEMPTS), "info");\n                                command.state = command_1.COMMAND_STATE.CANCELLING;\n                                command.save();\n                                setTimeout(function () { return window.location.reload(); }, config.REDIRECT_DELAY * 1000);\n                            }\n                        }\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction finishCancellation(commandId_1, success_1) {\n    return __awaiter(this, arguments, void 0, function (commandId, success, maxAttemptsReached, config) {\n        var command, allCommands, relatedCommands;\n        if (maxAttemptsReached === void 0) { maxAttemptsReached = false; }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _a.sent();\n                    if (!command) {\n                        (0, logging_utils_1.sendLog)("Command ".concat(commandId, " not found in storage"), "error");\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, (0, command_utils_1.getAllCommandsFromStorage)()];\n                case 2:\n                    allCommands = _a.sent();\n                    relatedCommands = allCommands.filter(function (cmd) { return cmd.dodgeCommandId === command.dodgeCommandId; });\n                    relatedCommands.forEach(function (cmd) {\n                        if (success) {\n                            (0, logging_utils_1.sendLog)("Successfully cancelled dodge for incoming command ".concat(cmd.id), "info");\n                            cmd.state = command_1.COMMAND_STATE.COMPLETED;\n                            (0, stats_1.updateStat)("successfulCancels");\n                            (0, stats_1.updateStat)("totalCancels");\n                        }\n                        else if (maxAttemptsReached) {\n                            (0, logging_utils_1.sendLog)("Max cancel attempts reached for incoming command ".concat(cmd.id), "info");\n                            cmd.state = command_1.COMMAND_STATE.COMPLETED;\n                            cmd.cancelFailed = true;\n                            (0, stats_1.updateStat)("failedCancels");\n                            (0, stats_1.updateStat)("totalCancels");\n                        }\n                        else {\n                            (0, logging_utils_1.sendLog)("Cancellation failed for incoming command ".concat(cmd.id), "info");\n                            cmd.state = command_1.COMMAND_STATE.DODGING; // Revert to previous state for retry\n                            (0, stats_1.updateStat)("failedCancels");\n                            (0, stats_1.updateStat)("totalCancels");\n                        }\n                        cmd.save();\n                    });\n                    return [4 /*yield*/, (0, service_1.clearScriptState)()];\n                case 3:\n                    _a.sent();\n                    (0, common_1.finishCurrentAction)(success, config);\n                    (0, logging_utils_1.sendLog)("Redirecting to incomings page in ".concat(config.REDIRECT_DELAY, " seconds..."), "info");\n                    setTimeout(function () {\n                        (0, common_1.redirectToIncomings)();\n                    }, config.REDIRECT_DELAY * 1000);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/actions/cancellation.ts?')},"./src/actions/common.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.initiateAction = initiateAction;\nexports.finishCurrentAction = finishCurrentAction;\nexports.redirectToIncomings = redirectToIncomings;\nvar actions_1 = __webpack_require__(/*! ../autosnipe/actions */ "./src/autosnipe/actions.ts");\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar notifications_1 = __webpack_require__(/*! ../notifications */ "./src/notifications.ts");\nvar stats_1 = __webpack_require__(/*! ../stats */ "./src/stats.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar overlay_1 = __webpack_require__(/*! ../ui/overlay */ "./src/ui/overlay.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar url_utils_1 = __webpack_require__(/*! ../utils/url.utils */ "./src/utils/url.utils.ts");\nvar cancellation_1 = __webpack_require__(/*! ./cancellation */ "./src/actions/cancellation.ts");\nvar dodge_1 = __webpack_require__(/*! ./dodge */ "./src/actions/dodge.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\nfunction initiateAction(command) {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentServerTime, config, updatedCommand, timeUntilSnipe, timeUntilDodge, timeUntilCancel;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Initiating action for command ".concat(command.id), "info");\n                    currentServerTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    config = storage_1.AutoDodgeStorage.loadConfig();\n                    (0, overlay_1.showOverlay)("Initiating action", true);\n                    return [4 /*yield*/, command_1.Command.load(command.id)];\n                case 1:\n                    updatedCommand = _a.sent();\n                    if (!updatedCommand) {\n                        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " no longer exists or has already landed. Skipping action."), "info");\n                        return [2 /*return*/];\n                    }\n                    if (updatedCommand.state === command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING ||\n                        updatedCommand.state === command_1.COMMAND_STATE.NOBLE_SNIPE_IN_PROGRESS) {\n                        (0, logging_utils_1.sendLog)("Action type: Noble Snipe", "info");\n                        if (config.NOTIFICATIONS_ENABLED && config.NOTIFY_NOBLE_SNIPE) {\n                            timeUntilSnipe = (updatedCommand.snipeInfo.startTime.getTime() - currentServerTime.getTime()) /\n                                1000;\n                            if (timeUntilSnipe <= config.NOTIFICATION_SECONDS_NOBLE_SNIPE) {\n                                (0, notifications_1.sendNotifications)(updatedCommand, "NobleSnipe", Math.floor(timeUntilSnipe));\n                            }\n                        }\n                        (0, actions_1.initiateNobleSnipe)(updatedCommand, config);\n                    }\n                    else if (updatedCommand.state === command_1.COMMAND_STATE.PLANNING &&\n                        updatedCommand.dodgeTime <= currentServerTime) {\n                        (0, logging_utils_1.sendLog)("Planned dodge time has passed for command ".concat(updatedCommand.id, ". Initiating dodge immediately."), "info");\n                        updatedCommand.state = command_1.COMMAND_STATE.DODGING;\n                        updatedCommand.dodgeTime = currentServerTime;\n                        updatedCommand.save();\n                        (0, dodge_1.initiateDodge)(updatedCommand, config);\n                    }\n                    else if (updatedCommand.state === command_1.COMMAND_STATE.PLANNING ||\n                        updatedCommand.state === command_1.COMMAND_STATE.DODGING) {\n                        (0, logging_utils_1.sendLog)("Action type: Dodge", "info");\n                        if (config.NOTIFICATIONS_ENABLED && config.NOTIFY_DODGE) {\n                            timeUntilDodge = (updatedCommand.dodgeTime.getTime() - currentServerTime.getTime()) /\n                                1000;\n                            if (timeUntilDodge <= config.NOTIFICATION_SECONDS_DODGE) {\n                                (0, notifications_1.sendNotifications)(updatedCommand, "Dodge", Math.floor(timeUntilDodge));\n                            }\n                        }\n                        (0, dodge_1.initiateDodge)(updatedCommand, config);\n                    }\n                    else if (updatedCommand.state === command_1.COMMAND_STATE.WAITING_TO_CANCEL) {\n                        (0, logging_utils_1.sendLog)("Action type: Cancel", "info");\n                        if (config.NOTIFICATIONS_ENABLED && config.NOTIFY_CANCEL) {\n                            timeUntilCancel = (updatedCommand.cancelTime.getTime() - currentServerTime.getTime()) /\n                                1000;\n                            if (timeUntilCancel <= config.NOTIFICATION_SECONDS_CANCEL) {\n                                (0, notifications_1.sendNotifications)(updatedCommand, "Cancel", Math.floor(timeUntilCancel));\n                            }\n                        }\n                        (0, cancellation_1.initiateCancel)(updatedCommand, config);\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Unexpected state for command ".concat(updatedCommand.id, ": ").concat(updatedCommand.state, ". Skipping action."), "error");\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction finishCurrentAction() {\n    return __awaiter(this, arguments, void 0, function (success, config) {\n        var currentCommandId, command;\n        if (success === void 0) { success = true; }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, service_1.getCurrentCommandId)()];\n                case 1:\n                    currentCommandId = _a.sent();\n                    if (!currentCommandId) {\n                        (0, logging_utils_1.sendLog)("No current command ID found", "error");\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, command_1.Command.load(currentCommandId)];\n                case 2:\n                    command = _a.sent();\n                    if (command) {\n                        if (command.state === command_1.COMMAND_STATE.DODGING) {\n                            (0, stats_1.updateStat)(success ? "successfulDodges" : "failedDodges");\n                        }\n                        else if (command.state === command_1.COMMAND_STATE.CANCELLING) {\n                            (0, stats_1.updateStat)(success ? "successfulCancels" : "failedCancels");\n                        }\n                        else if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED) {\n                            (0, stats_1.updateStat)(success ? "successfulSnipes" : "failedSnipes");\n                            (0, stats_1.updateStat)("totalSnipes");\n                        }\n                        else if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_IMPOSSIBLE) {\n                            (0, stats_1.updateStat)("failedSnipes");\n                        }\n                        else if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING && !success) {\n                            (0, stats_1.updateStat)("totalSnipes");\n                            (0, stats_1.updateStat)("failedSnipes");\n                        }\n                    }\n                    return [4 /*yield*/, (0, service_1.clearScriptState)()];\n                case 3:\n                    _a.sent();\n                    if (window.location.href.includes("screen=place")) {\n                        (0, logging_utils_1.sendLog)("On place page, waiting for game to update...", "info");\n                        setTimeout(function () {\n                            redirectToIncomings();\n                        }, config.REDIRECT_DELAY * 1000);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction redirectToIncomings() {\n    return __awaiter(this, void 0, void 0, function () {\n        var incomingsUrl;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, url_utils_1.getIncomingsUrl)()];\n                case 1:\n                    incomingsUrl = _a.sent();\n                    (0, logging_utils_1.sendLog)("Redirecting to incomings: ".concat(incomingsUrl), "info");\n                    window.location.href = incomingsUrl;\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/actions/common.ts?')},"./src/actions/dodge.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.initiateDodge = initiateDodge;\nexports.handleNoTroopsDodge = handleNoTroopsDodge;\nexports.handleInitiatingDodge = handleInitiatingDodge;\nexports.handleConfirmingDodge = handleConfirmingDodge;\nexports.identifyAndStoreDodgeCommand = identifyAndStoreDodgeCommand;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar script_states_1 = __webpack_require__(/*! ../script-states */ "./src/script-states.ts");\nvar stats_1 = __webpack_require__(/*! ../stats */ "./src/stats.ts");\nvar overlay_1 = __webpack_require__(/*! ../ui/overlay */ "./src/ui/overlay.ts");\nvar dom_utils_1 = __webpack_require__(/*! ../utils/dom.utils */ "./src/utils/dom.utils.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar time_utils_1 = __webpack_require__(/*! ../utils/time.utils */ "./src/utils/time.utils.ts");\nvar url_utils_1 = __webpack_require__(/*! ../utils/url.utils */ "./src/utils/url.utils.ts");\nvar common_1 = __webpack_require__(/*! ./common */ "./src/actions/common.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar population_utils_1 = __webpack_require__(/*! ../utils/population.utils */ "./src/utils/population.utils.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\nfunction initiateDodge(command, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var dodgeUrl;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Initiating dodge for command ".concat(command.id), "info");\n                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.INITIATING_DODGE)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, (0, service_1.setCurrentCommandId)(command.id)];\n                case 2:\n                    _a.sent();\n                    dodgeUrl = (0, url_utils_1.getDodgeUrl)(command.targetId, command.dodgeDestinationId);\n                    setTimeout(function () {\n                        window.location.href = dodgeUrl;\n                    }, config.REDIRECT_DELAY * 1000);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction handleNoTroopsDodge(commandId, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Marking command ".concat(commandId, " as completed due to no available troops"), "info");\n                    return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _a.sent();\n                    if (!command) return [3 /*break*/, 3];\n                    command.state = command_1.COMMAND_STATE.COMPLETED;\n                    command.noTroops = true;\n                    return [4 /*yield*/, command.save()];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    (0, common_1.finishCurrentAction)(true, config);\n                    (0, stats_1.updateStat)("noTroopsAvailable");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction handleInitiatingDodge(commandId, config) {\n    var _this = this;\n    (0, overlay_1.showOverlay)("Initiating dodge...");\n    (0, logging_utils_1.sendLog)("Initiating dodge for command ".concat(commandId), "info");\n    if ((0, dom_utils_1.areAllTroopsZero)() && !(0, population_utils_1.hasNobles)()) {\n        (0, logging_utils_1.sendLog)("No troops available for command ".concat(commandId, ", handling no-troop dodge"), "info");\n        handleNoTroopsDodge(commandId, config);\n    }\n    else {\n        var selectAllButton = document.querySelector("#selectAllUnits");\n        var supportButton_1 = document.querySelector("#target_support");\n        if (selectAllButton && supportButton_1) {\n            (0, logging_utils_1.sendLog)("Found select all and support buttons", "info");\n            selectAllButton.click();\n            setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            supportButton_1.click();\n                            return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.CONFIRMING_DODGE)];\n                        case 1:\n                            _a.sent();\n                            (0, logging_utils_1.sendLog)("Clicked support button, updated script state to confirming_dodge", "info");\n                            return [2 /*return*/];\n                    }\n                });\n            }); }, config.ACTION_DELAY * 1000);\n        }\n        else {\n            (0, logging_utils_1.sendLog)("Could not find select all or support buttons", "error");\n            (0, common_1.finishCurrentAction)(false, config);\n        }\n    }\n}\nfunction handleConfirmingDodge(commandId, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentScriptState, currentCommandId, confirmButton, command_2, currentServerTime, arrivalTimeText, arrivalDate, updates_1, annexedCommands, lastLandingTime;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 1:\n                    currentScriptState = _a.sent();\n                    return [4 /*yield*/, (0, service_1.getCurrentCommandId)()];\n                case 2:\n                    currentCommandId = _a.sent();\n                    (0, logging_utils_1.sendLog)("Current script state: ".concat(currentScriptState, ", Command ID: ").concat(currentCommandId), "info");\n                    if (!currentScriptState || !currentCommandId) {\n                        (0, logging_utils_1.sendLog)("No active process. Checking for next action...", "info");\n                        return [2 /*return*/];\n                    }\n                    (0, overlay_1.showOverlay)("Confirming dodge...");\n                    (0, logging_utils_1.sendLog)("Confirming dodge for command ".concat(commandId), "info");\n                    confirmButton = document.querySelector("#troop_confirm_submit");\n                    if (!confirmButton) return [3 /*break*/, 9];\n                    return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 3:\n                    command_2 = _a.sent();\n                    if (!command_2) return [3 /*break*/, 7];\n                    currentServerTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    arrivalTimeText = document.getElementById("date_arrival").innerText;\n                    arrivalDate = (0, time_utils_1.parseCommandArrivalTime)(arrivalTimeText);\n                    updates_1 = {\n                        dodgeTime: new Date(currentServerTime.getTime() + config.ACTION_DELAY * 1000),\n                        state: command_1.COMMAND_STATE.WAITING_TO_CANCEL,\n                        dodgeCommandLandingTime: new Date(arrivalDate.getTime() + config.ACTION_DELAY * 1000),\n                    };\n                    if (!(command_2.annexedCommands && command_2.annexedCommands.length > 0)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, Promise.all(command_2.annexedCommands.map(function (id) { return command_1.Command.load(id); }))];\n                case 4:\n                    annexedCommands = (_a.sent()).filter(Boolean);\n                    lastLandingTime = Math.max.apply(Math, __spreadArray(__spreadArray([], annexedCommands.map(function (cmd) { return cmd.landingTime.getTime(); }), false), [command_2.landingTime.getTime()], false));\n                    updates_1.cancelTime = (0, time_utils_1.calculateCancelTime)(updates_1.dodgeTime, new Date(lastLandingTime));\n                    // Prepare updates for annexed commands\n                    updates_1.annexedUpdates = annexedCommands.map(function (annexedCmd, index) { return ({\n                        id: annexedCmd.id,\n                        updates: {\n                            state: command_1.COMMAND_STATE.WAITING_TO_CANCEL,\n                            dodgeTime: new Date(updates_1.dodgeTime.getTime() + (index + 1) * 1000),\n                            cancelTime: new Date(updates_1.cancelTime.getTime() + (index + 1) * 1000),\n                        },\n                    }); });\n                    return [3 /*break*/, 6];\n                case 5:\n                    updates_1.cancelTime = (0, time_utils_1.calculateCancelTime)(updates_1.dodgeTime, command_2.landingTime);\n                    _a.label = 6;\n                case 6:\n                    (0, logging_utils_1.sendLog)("Found confirm button, processing in ".concat(config.ACTION_DELAY, " seconds..."), "info");\n                    setTimeout(function () {\n                        var originalOnClick = confirmButton.onclick;\n                        confirmButton.onclick = function (event) {\n                            return __awaiter(this, void 0, void 0, function () {\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            event.preventDefault();\n                                            // Apply and save the updates\n                                            Object.assign(command_2, updates_1);\n                                            return [4 /*yield*/, command_2.save()];\n                                        case 1:\n                                            _a.sent();\n                                            // Apply and save updates for annexed commands\n                                            if (updates_1.annexedUpdates) {\n                                                updates_1.annexedUpdates.forEach(function (_a) { return __awaiter(_this, [_a], void 0, function (_b) {\n                                                    var annexedCmd;\n                                                    var id = _b.id, updates = _b.updates;\n                                                    return __generator(this, function (_c) {\n                                                        switch (_c.label) {\n                                                            case 0: return [4 /*yield*/, command_1.Command.load(id)];\n                                                            case 1:\n                                                                annexedCmd = _c.sent();\n                                                                if (!annexedCmd) return [3 /*break*/, 3];\n                                                                Object.assign(annexedCmd, updates);\n                                                                return [4 /*yield*/, annexedCmd.save()];\n                                                            case 2:\n                                                                _c.sent();\n                                                                _c.label = 3;\n                                                            case 3: return [2 /*return*/];\n                                                        }\n                                                    });\n                                                }); });\n                                            }\n                                            return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDENTIFYING_DODGE_COMMAND)];\n                                        case 2:\n                                            _a.sent();\n                                            (0, logging_utils_1.sendLog)("Command ".concat(commandId, " updated and saved after confirmation"), "info");\n                                            // Use setTimeout to ensure our code runs before navigation\n                                            setTimeout(function () {\n                                                confirmButton.onclick = originalOnClick;\n                                                confirmButton.click();\n                                            }, 0);\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            });\n                        };\n                        confirmButton.click();\n                        (0, stats_1.updateStat)("successfulDodges");\n                        (0, stats_1.updateStat)("totalDodges");\n                    }, config.ACTION_DELAY * 1000);\n                    return [3 /*break*/, 8];\n                case 7:\n                    (0, stats_1.updateStat)("failedDodges");\n                    (0, common_1.finishCurrentAction)(false, config);\n                    return [2 /*return*/];\n                case 8: return [3 /*break*/, 10];\n                case 9:\n                    (0, stats_1.updateStat)("failedDodges");\n                    (0, logging_utils_1.sendLog)("Confirm button not found", "error");\n                    (0, common_1.finishCurrentAction)(false, config);\n                    _a.label = 10;\n                case 10: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction identifyAndStoreDodgeCommand(commandId, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command, commandRows, _loop_1, _i, commandRows_1, row, state_1;\n        var _this = this;\n        var _a, _b, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0: return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _d.sent();\n                    if (!command) {\n                        (0, logging_utils_1.sendLog)("Command ".concat(commandId, " not found in storage"), "error");\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    commandRows = Array.from(document.querySelectorAll("#commands_outgoings table.vis tr.command-row"));\n                    _loop_1 = function (row) {\n                        var destinationElement, cancelButton, dodgeCommandId, landingTimeText, landingTime;\n                        return __generator(this, function (_e) {\n                            switch (_e.label) {\n                                case 0:\n                                    destinationElement = row.querySelector(".quickedit-label");\n                                    cancelButton = row.querySelector(".command-cancel");\n                                    dodgeCommandId = (_a = row\n                                        .querySelector(".quickedit-out")) === null || _a === void 0 ? void 0 : _a.getAttribute("data-id");\n                                    landingTimeText = (_b = row.querySelector("td:nth-child(2)")) === null || _b === void 0 ? void 0 : _b.innerText;\n                                    landingTime = (0, time_utils_1.parseCommandArrivalTime)(landingTimeText);\n                                    if (!(cancelButton && // cancel button found\n                                        landingTime && // landing time found\n                                        Math.abs(landingTime.getTime() - command.dodgeCommandLandingTime.getTime()) < 10000 && // 10 seconds tolerance\n                                        ((_c = destinationElement === null || destinationElement === void 0 ? void 0 : destinationElement.textContent) === null || _c === void 0 ? void 0 : _c.includes(command.dodgeDestination))) // destination matches\n                                    ) return [3 /*break*/, 2]; // destination matches\n                                    command.dodgeCommandId = dodgeCommandId;\n                                    return [4 /*yield*/, command.save()];\n                                case 1:\n                                    _e.sent();\n                                    // Update annexed commands with the same dodge command ID\n                                    if (command.annexedCommands && command.annexedCommands.length > 0) {\n                                        command.annexedCommands.forEach(function (annexedId) { return __awaiter(_this, void 0, void 0, function () {\n                                            var annexedCmd;\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0: return [4 /*yield*/, command_1.Command.load(annexedId)];\n                                                    case 1:\n                                                        annexedCmd = _a.sent();\n                                                        if (!annexedCmd) return [3 /*break*/, 3];\n                                                        annexedCmd.dodgeCommandId = dodgeCommandId;\n                                                        return [4 /*yield*/, annexedCmd.save()];\n                                                    case 2:\n                                                        _a.sent();\n                                                        _a.label = 3;\n                                                    case 3: return [2 /*return*/];\n                                                }\n                                            });\n                                        }); });\n                                    }\n                                    (0, common_1.finishCurrentAction)(true, config);\n                                    return [2 /*return*/, { value: void 0 }];\n                                case 2: return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _i = 0, commandRows_1 = commandRows;\n                    _d.label = 2;\n                case 2:\n                    if (!(_i < commandRows_1.length)) return [3 /*break*/, 5];\n                    row = commandRows_1[_i];\n                    return [5 /*yield**/, _loop_1(row)];\n                case 3:\n                    state_1 = _d.sent();\n                    if (typeof state_1 === "object")\n                        return [2 /*return*/, state_1.value];\n                    _d.label = 4;\n                case 4:\n                    _i++;\n                    return [3 /*break*/, 2];\n                case 5:\n                    (0, logging_utils_1.sendLog)("Failed to identify dodge command to ".concat(command.dodgeDestination), "error");\n                    (0, common_1.finishCurrentAction)(false, config);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/actions/dodge.ts?')},"./src/actions/index.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.processIncomingAttacks = processIncomingAttacks;\nexports.handlePlacePage = handlePlacePage;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar script_states_1 = __webpack_require__(/*! ../script-states */ "./src/script-states.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar command_utils_1 = __webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts");\nvar dom_utils_1 = __webpack_require__(/*! ../utils/dom.utils */ "./src/utils/dom.utils.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar helper_utils_1 = __webpack_require__(/*! ../utils/helper.utils */ "./src/utils/helper.utils.ts");\nvar common_1 = __webpack_require__(/*! ./common */ "./src/actions/common.ts");\nvar dodge_1 = __webpack_require__(/*! ./dodge */ "./src/actions/dodge.ts");\nvar cancellation_1 = __webpack_require__(/*! ./cancellation */ "./src/actions/cancellation.ts");\nvar overlay_1 = __webpack_require__(/*! ../ui/overlay */ "./src/ui/overlay.ts");\nvar actions_1 = __webpack_require__(/*! ../autosnipe/actions */ "./src/autosnipe/actions.ts");\nvar annexed_1 = __webpack_require__(/*! ./annexed */ "./src/actions/annexed.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\n// Importar o adapter do TaskManager\nvar adapter_1 = __webpack_require__(/*! ../TaskManager/adapter */ "./src/TaskManager/adapter.ts");\nvar wrappers_1 = __webpack_require__(/*! ../TaskManager/wrappers */ "./src/TaskManager/wrappers.ts");\nfunction processIncomingAttacks(config, villages) {\n    return __awaiter(this, void 0, void 0, function () {\n        var table, headerRow, stateHeader, rows, currentServerTime, activeCommandIds, parsedCount, _i, rows_1, row, command, observerInterval, allCommands;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    table = document.getElementById("incomings_table");\n                    if (!table)\n                        return [2 /*return*/];\n                    headerRow = table.querySelector("tr");\n                    if (headerRow) {\n                        stateHeader = document.createElement("th");\n                        stateHeader.textContent = "Estado";\n                        headerRow.insertBefore(stateHeader, headerRow.children[1]);\n                    }\n                    (0, logging_utils_1.sendLog)("Processing incoming attacks and scheduling next action...", "info");\n                    rows = Array.from(document.querySelectorAll("#incomings_table tr:not(:first-child):not(:last-child)"));\n                    currentServerTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    activeCommandIds = new Set();\n                    // Step 1: Clean up storage\n                    (0, storage_1.cleanupStorage)(config);\n                    // Step 2: Sort rows by landing time\n                    rows.sort(function (a, b) {\n                        var getTimeFromRow = function (row) {\n                            var seventhChild = row.querySelector("td:nth-child(7) span");\n                            var eighthChild = row.querySelector("td:nth-child(8) span");\n                            var timeElement = seventhChild || eighthChild;\n                            return timeElement\n                                ? (0, helper_utils_1.parseCountdown)(timeElement.textContent)\n                                : Infinity;\n                        };\n                        var timeA = getTimeFromRow(a);\n                        var timeB = getTimeFromRow(b);\n                        return timeA - timeB;\n                    });\n                    parsedCount = 0;\n                    _i = 0, rows_1 = rows;\n                    _a.label = 1;\n                case 1:\n                    if (!(_i < rows_1.length)) return [3 /*break*/, 4];\n                    row = rows_1[_i];\n                    if (parsedCount >= 100) {\n                        return [3 /*break*/, 4]; // Stop iterating if we\'ve reached the limit\n                    }\n                    return [4 /*yield*/, (0, helper_utils_1.parseCommandFromRow)(villages, row, currentServerTime, parsedCount)];\n                case 2:\n                    command = _a.sent();\n                    if (command) {\n                        activeCommandIds.add(command.id);\n                        parsedCount++;\n                    }\n                    _a.label = 3;\n                case 3:\n                    _i++;\n                    return [3 /*break*/, 1];\n                case 4:\n                    // Step 4: Annex Commands\n                    //annexCommands(activeCommandIds);\n                    (0, annexed_1.testAnnexCommands)(activeCommandIds);\n                    // Step 5: Update command names after annexation and add reset buttons\n                    rows.forEach(function (row) { return __awaiter(_this, void 0, void 0, function () {\n                        var quickeditSpan, commandId, command_2;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    quickeditSpan = row.querySelector(".quickedit");\n                                    if (!quickeditSpan) return [3 /*break*/, 3];\n                                    commandId = quickeditSpan.getAttribute("data-id");\n                                    if (!commandId)\n                                        return [2 /*return*/];\n                                    return [4 /*yield*/, command_1.Command.load(commandId)];\n                                case 1:\n                                    command_2 = _a.sent();\n                                    if (!command_2) return [3 /*break*/, 3];\n                                    setTimeout(function () {\n                                        (0, command_utils_1.updateCommandName)(row, command_2);\n                                    }, 200); // 200ms delay for updating command name\n                                    (0, dom_utils_1.createResetButton)(command_2.id, row);\n                                    return [4 /*yield*/, (0, wrappers_1.parseNobleCommandWithTaskManager)(row, command_2)];\n                                case 2:\n                                    _a.sent();\n                                    _a.label = 3;\n                                case 3: return [2 /*return*/];\n                            }\n                        });\n                    }); });\n                    observerInterval = setInterval(function () {\n                        var stateHeader = document.querySelector(\'#incomings_table th:nth-child(2)\');\n                        if (!stateHeader || stateHeader.textContent !== "Estado") {\n                            // Refresh incoming attacks when the header is not present\n                            processIncomingAttacks(config, villages);\n                            (0, logging_utils_1.sendLog)(\'Incoming attacks refreshed due to missing "Estado" header.\', "info");\n                        }\n                    }, 200);\n                    // Clear the interval when navigating away from the page\n                    window.addEventListener("beforeunload", function () {\n                        clearInterval(observerInterval);\n                    });\n                    return [4 /*yield*/, Promise.all(Array.from(activeCommandIds).map(function (id) { return command_1.Command.load(id); }))];\n                case 5:\n                    allCommands = _a.sent();\n                    // Usar o adapter do TaskManager para processar os comandos\n                    (0, adapter_1.processCommandsWithTaskManager)(allCommands, currentServerTime);\n                    (0, logging_utils_1.sendLog)("Comandos processados pelo TaskManager", "info");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction handlePlacePage(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentScriptState, currentCommandId;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 1:\n                    currentScriptState = _a.sent();\n                    return [4 /*yield*/, (0, service_1.getCurrentCommandId)()];\n                case 2:\n                    currentCommandId = _a.sent();\n                    (0, logging_utils_1.sendLog)("Current script state: ".concat(currentScriptState, ", Command ID: ").concat(currentCommandId), "info");\n                    if (!currentScriptState || !currentCommandId) {\n                        (0, logging_utils_1.sendLog)("No active process. Checking for next action...", "info");\n                        return [2 /*return*/];\n                    }\n                    (0, overlay_1.showOverlay)("Handling place page...");\n                    (0, logging_utils_1.sendLog)("Handling place page", "info");\n                    switch (currentScriptState) {\n                        case script_states_1.SCRIPT_STATE.INITIATING_DODGE:\n                            (0, dodge_1.handleInitiatingDodge)(currentCommandId, config);\n                            break;\n                        case script_states_1.SCRIPT_STATE.CONFIRMING_DODGE:\n                            (0, dodge_1.handleConfirmingDodge)(currentCommandId, config);\n                            break;\n                        case script_states_1.SCRIPT_STATE.IDENTIFYING_DODGE_COMMAND:\n                            (0, dodge_1.identifyAndStoreDodgeCommand)(currentCommandId, config);\n                            break;\n                        case script_states_1.SCRIPT_STATE.INITIATING_CANCEL:\n                            (0, cancellation_1.handleInitiatingCancel)(currentCommandId, config);\n                            break;\n                        case script_states_1.SCRIPT_STATE.INITIATING_SNIPE:\n                            (0, actions_1.handleInitiatingNobleSnipe)(currentCommandId, config);\n                            break;\n                        case script_states_1.SCRIPT_STATE.CONFIRMING_SNIPE:\n                            (0, actions_1.handleConfirmingNobleSnipe)(currentCommandId, config);\n                            break;\n                        case script_states_1.SCRIPT_STATE.SNIPE_COMPLETED:\n                            (0, actions_1.handleSnipeCompleted)(currentCommandId, config);\n                            break;\n                        default:\n                            (0, logging_utils_1.sendLog)("Unexpected script state: ".concat(currentScriptState), "error");\n                            (0, common_1.finishCurrentAction)(false, config);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/actions/index.ts?')},"./src/autosnipe/actions.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.handleNobleSnipe = handleNobleSnipe;\nexports.initiateNobleSnipe = initiateNobleSnipe;\nexports.handleInitiatingNobleSnipe = handleInitiatingNobleSnipe;\nexports.handleConfirmingNobleSnipe = handleConfirmingNobleSnipe;\nexports.handleSnipeCompleted = handleSnipeCompleted;\nexports.resetNobleSnipe = resetNobleSnipe;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar planner_1 = __webpack_require__(/*! ./planner */ "./src/autosnipe/planner.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar script_states_1 = __webpack_require__(/*! ../script-states */ "./src/script-states.ts");\nvar common_1 = __webpack_require__(/*! ../actions/common */ "./src/actions/common.ts");\nvar overlay_1 = __webpack_require__(/*! ../ui/overlay */ "./src/ui/overlay.ts");\nvar url_utils_1 = __webpack_require__(/*! ../utils/url.utils */ "./src/utils/url.utils.ts");\nvar discord_webhook_1 = __webpack_require__(/*! ../discord-webhook */ "./src/discord-webhook.ts");\nvar time_utils_1 = __webpack_require__(/*! ../utils/time.utils */ "./src/utils/time.utils.ts");\nvar agendador_1 = __webpack_require__(/*! ./agendador */ "./src/autosnipe/agendador.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar dom_utils_1 = __webpack_require__(/*! ../utils/dom.utils */ "./src/utils/dom.utils.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\nvar sigilia_1 = __webpack_require__(/*! ./sigilia */ "./src/autosnipe/sigilia.ts");\n// Sistema anti-spam para evitar múltiplas requisições\nvar isNobleSnipeInProgress = false;\nvar lastNobleSnipeCommandId = \'\';\nvar nobleSnipeCooldown = false;\nvar COOLDOWN_DURATION = 5000; // 5 segundos de cooldown\n// 1. Corre quando o botão de snipe é clicado e o comando é posto no estado NOBLE_SNIPE_PENDING\n//  - Planeia o snipe consoante as aldeias disponíveis para snipar\nfunction handleNobleSnipe(command, config, requiredOffset) {\n    return __awaiter(this, void 0, void 0, function () {\n        var landingTime, targetCoord, targetId, sigiliaSpeedBonus, currentUrl, htmlContent, percentRegex, percentMatch, sigiliaElements, i, element, percentMatches, error_1, plannerData, possibleSnipes, debugInfo, bestSnipe, error_2, errorMessage;\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    // Anti-spam: Verificar se já existe um snipe em progresso\n                    if (isNobleSnipeInProgress) {\n                        console.log("[Anti-spam] Noble snipe already in progress for command: ".concat(lastNobleSnipeCommandId));\n                        (0, logging_utils_1.sendLog)("Already planning a snipe, please wait...", \'warn\');\n                        return [2 /*return*/];\n                    }\n                    // Anti-spam: Verificar cooldown\n                    if (nobleSnipeCooldown && command.id === lastNobleSnipeCommandId) {\n                        console.log("[Anti-spam] Noble snipe in cooldown for command: ".concat(lastNobleSnipeCommandId));\n                        (0, logging_utils_1.sendLog)("Please wait a moment before trying again", \'warn\');\n                        return [2 /*return*/];\n                    }\n                    // Anti-spam: Ativar bloqueio\n                    isNobleSnipeInProgress = true;\n                    lastNobleSnipeCommandId = command.id;\n                    // Anti-spam: Ativar cooldown\n                    nobleSnipeCooldown = true;\n                    setTimeout(function () {\n                        nobleSnipeCooldown = false;\n                    }, COOLDOWN_DURATION);\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 8, 9, 10]);\n                    landingTime = command.landingTime;\n                    targetCoord = command.targetCoord;\n                    targetId = command.targetId;\n                    if (!landingTime || !targetCoord || !targetId) {\n                        throw new Error(\'Missing landing time, target coordinates, or target ID\');\n                    }\n                    sigiliaSpeedBonus = 0;\n                    _b.label = 2;\n                case 2:\n                    _b.trys.push([2, 4, , 5]);\n                    return [4 /*yield*/, (0, sigilia_1.getSigiliaSpeedBonus)(targetId)];\n                case 3:\n                    sigiliaSpeedBonus = _b.sent();\n                    if (sigiliaSpeedBonus > 0) {\n                        (0, logging_utils_1.sendLog)("Detected Sigilia with ".concat(sigiliaSpeedBonus, "% speed bonus on target village ").concat(targetId), \'info\');\n                    }\n                    else {\n                        currentUrl = window.location.href;\n                        if (currentUrl.includes("village=".concat(targetId)) &&\n                            document.body.innerHTML.includes(\'Sigilia de desespero\')) {\n                            console.log(\'[Sigilia] Detection via DOM: current page contains Sigilia\');\n                            htmlContent = document.body.innerHTML;\n                            percentRegex = /(\\d+)%\\s*(mais rápido|faster)/i;\n                            percentMatch = htmlContent.match(percentRegex);\n                            if (percentMatch && percentMatch[1]) {\n                                sigiliaSpeedBonus = parseInt(percentMatch[1], 10);\n                                console.log("[Sigilia] DOM extraction found specific speed bonus: ".concat(sigiliaSpeedBonus, "%"));\n                            }\n                            else {\n                                sigiliaElements = document.querySelectorAll(\'.effect_tooltip\');\n                                for (i = 0; i < sigiliaElements.length; i++) {\n                                    element = sigiliaElements[i];\n                                    if ((_a = element.textContent) === null || _a === void 0 ? void 0 : _a.includes(\'Sigilia de desespero\')) {\n                                        percentMatches = element.textContent.match(/(\\d+)%/g);\n                                        if (percentMatches && percentMatches.length > 0) {\n                                            sigiliaSpeedBonus = parseInt(percentMatches[0].replace(\'%\', \'\'), 10);\n                                            console.log("[Sigilia] DOM extraction found percentage: ".concat(sigiliaSpeedBonus, "%"));\n                                            break;\n                                        }\n                                    }\n                                }\n                                // If we still couldn\'t find it, don\'t use a fallback\n                                if (sigiliaSpeedBonus === 0) {\n                                    console.log("[Sigilia] DOM extraction couldn\'t find any percentage in the Sigilia element");\n                                    (0, logging_utils_1.sendLog)("Could not determine sigilia percentage from DOM. No bonus will be applied.", \'warn\');\n                                }\n                            }\n                            if (sigiliaSpeedBonus > 0) {\n                                (0, logging_utils_1.sendLog)("DOM check detected Sigilia with ".concat(sigiliaSpeedBonus, "% speed bonus"), \'info\');\n                            }\n                        }\n                    }\n                    return [3 /*break*/, 5];\n                case 4:\n                    error_1 = _b.sent();\n                    (0, logging_utils_1.sendLog)("Error checking sigilia: ".concat(error_1, ". Continuing without sigilia bonus."), \'warn\');\n                    return [3 /*break*/, 5];\n                case 5: return [4 /*yield*/, planner_1.PlannerService.getPlannerData(targetCoord, landingTime, sigiliaSpeedBonus)];\n                case 6:\n                    plannerData = _b.sent();\n                    command.state = command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING;\n                    command.save();\n                    return [4 /*yield*/, planner_1.PlannerService.calculatePossibleSnipes(plannerData, command)];\n                case 7:\n                    possibleSnipes = _b.sent();\n                    if (possibleSnipes.length === 0) {\n                        debugInfo = "No valid snipe opportunities found\\n\\n" +\n                            "Target: ".concat(targetCoord, "\\n") +\n                            "Landing Time: ".concat(landingTime, "\\n") +\n                            "Sigilia Bonus: ".concat(sigiliaSpeedBonus, "%\\n") +\n                            "Villages Found: ".concat(plannerData.possibleVillages.length, "\\n") +\n                            "Villages with Units: ".concat(plannerData.possibleVillages.map(function (v) {\n                                return "\\n- ".concat(v.coordinates, ": ").concat(Object.entries(v.units)\n                                    .filter(function (_a) {\n                                    var unit = _a[0];\n                                    return unit !== \'snob\' && unit !== \'spy\';\n                                })\n                                    .map(function (_a) {\n                                    var unit = _a[0], info = _a[1];\n                                    return "".concat(unit, ":").concat(info.amount);\n                                })\n                                    .join(\', \'));\n                            }).join(\'\'));\n                        command.state = command_1.COMMAND_STATE.NOBLE_SNIPE_IMPOSSIBLE;\n                        command.save();\n                        (0, logging_utils_1.sendLog)("Noble snipe impossible: ".concat(debugInfo), \'error\');\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    bestSnipe = possibleSnipes[0];\n                    console.log(\'Noble Snipe Planning:\', {\n                        landingTime: landingTime.toISOString(),\n                        landingTimeMs: landingTime.getMilliseconds(),\n                        sigiliaBonus: sigiliaSpeedBonus,\n                        bestSnipe: {\n                            launchTime: bestSnipe.launchTime.toISOString(),\n                            launchTimeMs: bestSnipe.launchTime.getMilliseconds(),\n                            village: bestSnipe.village.coordinates,\n                            slowestUnit: bestSnipe.slowestUnit\n                        }\n                    });\n                    command.snipeInfo = {\n                        villageId: bestSnipe.village.villageId,\n                        landingTime: landingTime,\n                        landingMs: landingTime.getMilliseconds(),\n                        launchTime: bestSnipe.launchTime,\n                        targetCoord: targetCoord,\n                        slowestUnit: bestSnipe.slowestUnit,\n                        possibleSnipesCount: possibleSnipes.length,\n                        requiredOffset: requiredOffset || config.NOBLE_SNIPE_OFFSET,\n                        finalOffset: 0,\n                        startTime: new Date(bestSnipe.launchTime.getTime() - config.NOBLE_SNIPE_TIME_BEFORE_STARTING),\n                        distance: bestSnipe.village.distance,\n                        baseSpeed: bestSnipe.village.baseSpeed,\n                        travelTimeSeconds: bestSnipe.village.travelTimeSeconds,\n                        sigiliaBonus: sigiliaSpeedBonus\n                    };\n                    command.save();\n                    return [3 /*break*/, 10];\n                case 8:\n                    error_2 = _b.sent();\n                    console.error(\'Noble snipe failed:\', error_2);\n                    errorMessage = error_2 instanceof Error ? error_2.message : \'Unknown error\';\n                    (0, logging_utils_1.sendLog)("Noble snipe failed: ".concat(errorMessage), \'error\');\n                    (0, common_1.finishCurrentAction)(false, config);\n                    return [3 /*break*/, 10];\n                case 9:\n                    // Anti-spam: Desativar bloqueio, independente do resultado\n                    isNobleSnipeInProgress = false;\n                    return [7 /*endfinally*/];\n                case 10: return [2 /*return*/];\n            }\n        });\n    });\n}\n// 2. Corre quando chega a altura de snipar o comando -> redireciona para a praça de reuniões\nfunction initiateNobleSnipe(command, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var launchTime, now, timeUntilLaunch, message, snipeUrl;\n        var _a, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    if (!((_a = command.snipeInfo) === null || _a === void 0 ? void 0 : _a.launchTime) || !((_b = command.snipeInfo) === null || _b === void 0 ? void 0 : _b.villageId)) {\n                        (0, logging_utils_1.sendLog)("Missing launch time or village ID", "error");\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    launchTime = new Date(command.snipeInfo.launchTime);\n                    now = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    timeUntilLaunch = launchTime.getTime() - now.getTime();\n                    if (now >= launchTime || timeUntilLaunch < 5000) { // Too late if past launch time or <5s away\n                        message = "\\u274C Too late to snipe! Current time is too close to launch time.<br><br>Recalculating...";\n                        (0, overlay_1.showOverlay)(message, true);\n                        (0, logging_utils_1.sendLog)("Launch time already passed or too close, recalculating", "error");\n                        resetNobleSnipe(command, config);\n                        return [2 /*return*/];\n                    }\n                    (0, logging_utils_1.sendLog)("Initiating snipe for command ".concat(command.id), "info");\n                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.INITIATING_SNIPE)];\n                case 1:\n                    _c.sent();\n                    return [4 /*yield*/, (0, service_1.setCurrentCommandId)(command.id)];\n                case 2:\n                    _c.sent();\n                    snipeUrl = (0, url_utils_1.getSnipeUrl)(command.targetId, command.snipeInfo.villageId);\n                    setTimeout(function () {\n                        window.location.href = snipeUrl;\n                    }, config.REDIRECT_DELAY * 1000);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// 3. Corre quando estamos na praça de reuniões depois do snipe ser iniciado -> mete o comando no estado NOBLE_SNIPE_IN_PROGRESS\nfunction handleInitiatingNobleSnipe(commandId, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command, unitHierarchy, allowedUnits;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _a.sent();\n                    if (!command || !command.snipeInfo) {\n                        return [2 /*return*/];\n                    }\n                    // Check if we have troops (>200 pop rn)\n                    if ((0, dom_utils_1.areAllTroopsZero)()) {\n                        console.log("No troops available, skipping snipe");\n                        // Make this function async and await the reset\n                        resetNobleSnipe(command, config);\n                        // Don\'t need to call finishCurrentAction here as resetNobleSnipe handles it\n                        return [2 /*return*/];\n                    }\n                    command.state = command_1.COMMAND_STATE.NOBLE_SNIPE_IN_PROGRESS;\n                    command.save();\n                    (0, overlay_1.showOverlay)("Initiating snipe...");\n                    unitHierarchy = {\n                        \'ram\': [\'ram\', \'catapult\', \'sword\', \'axe\', \'spear\', \'heavy\', \'light\'],\n                        \'catapult\': [\'ram\', \'catapult\', \'sword\', \'axe\', \'spear\', \'heavy\', \'light\'],\n                        \'sword\': [\'sword\', \'axe\', \'spear\', \'heavy\', \'light\'],\n                        \'axe\': [\'axe\', \'spear\', \'heavy\', \'light\'],\n                        \'spear\': [\'axe\', \'spear\', \'heavy\', \'light\'],\n                        \'heavy\': [\'heavy\', \'light\'],\n                        \'light\': [\'light\']\n                    };\n                    allowedUnits = unitHierarchy[command.snipeInfo.slowestUnit] || [];\n                    // Modified unit selection logic\n                    allowedUnits.forEach(function (unit) {\n                        var input = document.querySelector("input[name=\\"".concat(unit, "\\"]"));\n                        if (input && config.NOBLE_SNIPE_UNITS[unit]) {\n                            var maxValue = input.getAttribute(\'data-all-count\') || input.max;\n                            if (maxValue && parseInt(maxValue) > 0) {\n                                input.value = maxValue;\n                                // Trigger change event to ensure game UI updates\n                                input.dispatchEvent(new Event(\'change\'));\n                            }\n                        }\n                    });\n                    // Click support button after a delay to ensure units are set\n                    setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n                        var supportButton;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    supportButton = document.querySelector("#target_support");\n                                    if (!supportButton) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.CONFIRMING_SNIPE)];\n                                case 1:\n                                    _a.sent();\n                                    supportButton.click();\n                                    return [3 /*break*/, 3];\n                                case 2:\n                                    command.state = command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING;\n                                    command.save();\n                                    return [2 /*return*/];\n                                case 3: return [2 /*return*/];\n                            }\n                        });\n                    }); }, config.ACTION_DELAY * 1000); // Double the delay to account for both actions\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// 4. Corre quando estamos na página de confirmar o comando\nfunction handleConfirmingNobleSnipe(commandId, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command, error_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _a.sent();\n                    if (!command || !command.snipeInfo) {\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    (0, overlay_1.showOverlay)("Preparing timed confirmation...", false, true);\n                    (0, logging_utils_1.sendLog)("Setting up timed confirmation for command ".concat(commandId), "info");\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    agendador_1.TimedConfirmation.init(command);\n                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.SNIPE_COMPLETED)];\n                case 3:\n                    _a.sent();\n                    return [3 /*break*/, 5];\n                case 4:\n                    error_3 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Failed to setup timed confirmation: ".concat(error_3), "error");\n                    (0, common_1.finishCurrentAction)(false, config);\n                    return [3 /*break*/, 5];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\n// 5. Corre depois de confirmar o comando -> checka se o snipe foi bem sucedido\n// Se sim, mete o comando no estado NOBLE_SNIPE_COMPLETED\n// Se não, volta a calcular um novo snipe\nfunction handleSnipeCompleted(commandId, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command, commandRows, handleFailedSnipe, _loop_1, _i, commandRows_1, row, state_1;\n        var _this = this;\n        var _a, _b, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0: return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _d.sent();\n                    if (!command || !command.snipeInfo) {\n                        (0, common_1.finishCurrentAction)(false, config);\n                        return [2 /*return*/];\n                    }\n                    commandRows = Array.from(document.querySelectorAll("#commands_outgoings table.vis tr.command-row"));\n                    handleFailedSnipe = function (command, timeDifference) { return __awaiter(_this, void 0, void 0, function () {\n                        var direction, absoluteDifference, debugInfo;\n                        var _a;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    if (timeDifference !== undefined) {\n                                        direction = timeDifference > 0 ? \'before\' : \'after\';\n                                        absoluteDifference = Math.abs(timeDifference);\n                                        debugInfo = "\\u274C SNIPE FAILED!<br><br>" +\n                                            "<b>You were ".concat(absoluteDifference, "ms ").concat(direction, " the noble</b>");\n                                        (0, overlay_1.showOverlay)(debugInfo, true);\n                                        (0, logging_utils_1.sendLog)("Snipe failed with detailed timing: ".concat(JSON.stringify({\n                                            targetLanding: command.landingTime,\n                                            actualLanding: command.snipeInfo.landingTime,\n                                            timeDiff: timeDifference,\n                                            requiredOffset: command.snipeInfo.requiredOffset,\n                                            plannedLaunch: command.snipeInfo.launchTime,\n                                            slowestUnit: command.snipeInfo.slowestUnit\n                                        }, null, 2)), "error");\n                                    }\n                                    command.state = command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING;\n                                    command.save();\n                                    return [4 /*yield*/, handleNobleSnipe(command, config, (_a = command.snipeInfo) === null || _a === void 0 ? void 0 : _a.requiredOffset)];\n                                case 1:\n                                    _b.sent();\n                                    (0, common_1.finishCurrentAction)(false, config);\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); };\n                    _loop_1 = function (row) {\n                        var destinationElement, timeCell, mainTime, milliseconds, landingTimeText, landingTime, timeDifference_1, isSuccessful, successMessage, cancelButton_1, outgoingCommandId;\n                        return __generator(this, function (_e) {\n                            switch (_e.label) {\n                                case 0:\n                                    destinationElement = row.querySelector(".quickedit-label");\n                                    timeCell = row.querySelector("td:nth-child(2)");\n                                    mainTime = ((_a = timeCell === null || timeCell === void 0 ? void 0 : timeCell.childNodes[0].textContent) === null || _a === void 0 ? void 0 : _a.trim()) || \'\';\n                                    milliseconds = ((_b = timeCell === null || timeCell === void 0 ? void 0 : timeCell.querySelector(\'.grey.small\')) === null || _b === void 0 ? void 0 : _b.textContent) || \'\';\n                                    landingTimeText = "".concat(mainTime).concat(milliseconds);\n                                    landingTime = (0, time_utils_1.parseCommandArrivalTime)(landingTimeText);\n                                    if (!(landingTime &&\n                                        ((_c = destinationElement === null || destinationElement === void 0 ? void 0 : destinationElement.textContent) === null || _c === void 0 ? void 0 : _c.includes(command.snipeInfo.targetCoord)))) return [3 /*break*/, 3];\n                                    timeDifference_1 = command.landingTime.getTime() - landingTime.getTime();\n                                    isSuccessful = timeDifference_1 > 0 && timeDifference_1 < command.snipeInfo.requiredOffset * 2;\n                                    if (!isSuccessful) return [3 /*break*/, 1];\n                                    successMessage = "\\uD83C\\uDFAF SNIPE SUCCESSFUL! <br><br>" +\n                                        "Command will land <b>".concat(timeDifference_1, "ms</b> before the noble!<br><br><br>") +\n                                        "Perfect timing! \\uD83D\\uDC4C";\n                                    (0, overlay_1.showOverlay)(successMessage, true);\n                                    (0, logging_utils_1.sendLog)("Snipe successful! Difference: ".concat(timeDifference_1, " ms before the noble"), "info");\n                                    command.state = command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED;\n                                    command.snipeInfo.finalOffset = timeDifference_1;\n                                    // Send webhook notification for successful snipe\n                                    if (config.DISCORD_NOTIFY_SNIPE) {\n                                        (0, discord_webhook_1.sendDiscordWebhook)("\\u2705 Snipe successful on ".concat(command.targetCoord, "! Landing at ").concat((0, time_utils_1.formatTime)(command.landingTime), " with ").concat(timeDifference_1, "ms offset."), "#00FF00");\n                                    }\n                                    command.save();\n                                    (0, common_1.finishCurrentAction)(true, config);\n                                    return [2 /*return*/, { value: void 0 }];\n                                case 1:\n                                    cancelButton_1 = row.querySelector(\'.command-cancel\');\n                                    if (cancelButton_1) {\n                                        outgoingCommandId = cancelButton_1.getAttribute(\'data-id\');\n                                        if (outgoingCommandId) {\n                                            command.dodgeCommandId = outgoingCommandId;\n                                            command.save();\n                                            setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            cancelButton_1.click();\n                                                            return [4 /*yield*/, handleFailedSnipe(command, timeDifference_1)];\n                                                        case 1:\n                                                            _a.sent();\n                                                            return [2 /*return*/];\n                                                    }\n                                                });\n                                            }); }, config.ACTION_DELAY * 1000);\n                                            return [2 /*return*/, { value: void 0 }];\n                                        }\n                                    }\n                                    return [4 /*yield*/, handleFailedSnipe(command, timeDifference_1)];\n                                case 2:\n                                    _e.sent();\n                                    return [2 /*return*/, { value: void 0 }];\n                                case 3: return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _i = 0, commandRows_1 = commandRows;\n                    _d.label = 2;\n                case 2:\n                    if (!(_i < commandRows_1.length)) return [3 /*break*/, 5];\n                    row = commandRows_1[_i];\n                    return [5 /*yield**/, _loop_1(row)];\n                case 3:\n                    state_1 = _d.sent();\n                    if (typeof state_1 === "object")\n                        return [2 /*return*/, state_1.value];\n                    _d.label = 4;\n                case 4:\n                    _i++;\n                    return [3 /*break*/, 2];\n                case 5:\n                    // If we get here, we couldn\'t find the command\n                    (0, logging_utils_1.sendLog)("Could not find the snipe command in the outgoing commands list", "error");\n                    return [4 /*yield*/, handleFailedSnipe(command)];\n                case 6:\n                    _d.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Update resetNobleSnipe to be async and properly handle the flow\nfunction resetNobleSnipe(command, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    command.state = command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING;\n                    command.save();\n                    return [4 /*yield*/, (0, service_1.clearScriptState)()];\n                case 1:\n                    _a.sent();\n                    // Reuse the existing offset from the previous calculation\n                    return [4 /*yield*/, handleNobleSnipe(command, config)];\n                case 2:\n                    // Reuse the existing offset from the previous calculation\n                    _a.sent();\n                    (0, common_1.finishCurrentAction)(false, config);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/autosnipe/actions.ts?')},"./src/autosnipe/agendador.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TimedConfirmation = void 0;\nvar overlay_1 = __webpack_require__(/*! ../ui/overlay */ "./src/ui/overlay.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar TimedConfirmation = /** @class */ (function () {\n    function TimedConfirmation() {\n    }\n    TimedConfirmation.init = function (command) {\n        var _this = this;\n        if (!command.snipeInfo) {\n            throw new Error(\'Cannot initialize TimedConfirmation without snipe info\');\n        }\n        var targetLaunchTime = new Date(command.snipeInfo.launchTime);\n        var targetLandingTime = new Date(command.snipeInfo.landingTime);\n        var requiredOffset = command.snipeInfo.requiredOffset;\n        var landingMs = command.snipeInfo.landingMs;\n        // Check if this is an offset test\n        var snipeInfoExt = command.snipeInfo;\n        this.isOffsetTest = !!snipeInfoExt.isOffsetTest;\n        var config = storage_1.AutoDodgeStorage.loadConfig();\n        this.confirmButton = document.querySelector(\'#troop_confirm_submit\');\n        if (!this.confirmButton) {\n            throw new Error(\'Confirm button not found\');\n        }\n        this.confirmButton.classList.add(\'btn-disabled\');\n        // Ensure we\'re working with fresh Date objects to maintain precision\n        var now = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n        // For offset tests, we want precise timing without applying offsets\n        // For normal snipes, apply the standard offsets\n        var adjustedTargetTime;\n        if (this.isOffsetTest) {\n            // For testing, we simply want to click exactly at the target time\n            // No adjustments needed - this gives us a clean baseline\n            adjustedTargetTime = targetLaunchTime.getTime();\n            console.log("OFFSET TEST MODE: Will click exactly at the target time");\n            console.log("Target time:", new Date(adjustedTargetTime).toISOString());\n        }\n        else {\n            // Normal snipe with all the offset adjustments\n            adjustedTargetTime = targetLaunchTime.getTime() - requiredOffset + config.CLICK_OFFSET + landingMs;\n            console.log("SNIPE OFFSET: Placing snipe ".concat(requiredOffset, "ms behind the noble"));\n        }\n        this.startCountdown(adjustedTargetTime - now, targetLaunchTime, targetLandingTime, requiredOffset);\n        // Use a more precise setTimeout\n        var timer = setTimeout(function () {\n            if (_this.confirmButton) {\n                requestAnimationFrame(function () {\n                    // Log exact time before clicking for offset tests\n                    if (_this.isOffsetTest) {\n                        var clickTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                        console.log("CLICK EXECUTION TIME:", new Date(clickTime).toISOString());\n                    }\n                    _this.confirmButton.click();\n                });\n            }\n            if (_this.countdownInterval) {\n                clearInterval(_this.countdownInterval);\n            }\n        }, adjustedTargetTime - now);\n        if (typeof timer.unref === \'function\') {\n            timer.unref();\n        }\n        this.command = command;\n    };\n    TimedConfirmation.startCountdown = function (timeUntilExecution, targetLaunchTime, targetLandingTime, requiredOffset) {\n        var _this = this;\n        var _a;\n        var remainingMs = timeUntilExecution;\n        // Store reference to the current command\'s snipe info\n        var commandSnipeInfo = (_a = this.command) === null || _a === void 0 ? void 0 : _a.snipeInfo;\n        this.countdownInterval = setInterval(function () {\n            remainingMs -= 100;\n            if (remainingMs <= 0) {\n                if (_this.countdownInterval) {\n                    clearInterval(_this.countdownInterval);\n                }\n                return;\n            }\n            var seconds = Math.floor(remainingMs / 1000);\n            var milliseconds = remainingMs % 1000;\n            // Format time as "13.601s" with exactly 3 decimal places\n            var formattedTime = "".concat(seconds, ".").concat(Math.floor(milliseconds).toString().padStart(3, \'0\'), "s");\n            // Different overlay message for offset test vs regular snipe\n            if (_this.isOffsetTest) {\n                (0, overlay_1.showOverlay)("<span style=\\"text-align: center; display: block;\\">\\n                        <span style=\\"font-size: 20px; font-weight: bold;\\">\\uD83D\\uDD0D OFFSET TEST IN PROGRESS!</span><br><br>\\n                        <span style=\\"font-size: 24px; font-weight: bold;\\">Confirming in: ".concat(formattedTime, "</span><br><br>\\n                        <span style=\\"color: #ffcc00;\\">\\u26A0\\uFE0F DO NOT leave this page until the command is confirmed!</span>\\n                    </span>"), true);\n            }\n            else {\n                // Check for sigilia bonus safely\n                var sigiliaInfo = \'\';\n                if (commandSnipeInfo && commandSnipeInfo.sigiliaBonus && commandSnipeInfo.sigiliaBonus > 0) {\n                    sigiliaInfo = "<span style=\\"color:#00FFFF\\">\\uD83D\\uDD2E Using ".concat(commandSnipeInfo.sigiliaBonus, "% Sigilia speed bonus</span><br><br>");\n                }\n                (0, overlay_1.showOverlay)("<span style=\\"text-align: center; display: block;\\">\\n                        <span style=\\"font-size: 20px; font-weight: bold;\\">\\u2694\\uFE0F SNIPING \\u2694\\uFE0F</span><br><br>\\n                        <span style=\\"font-size: 24px; font-weight: bold;\\">".concat(formattedTime, "</span><br><br>\\n                        <span>Placing snipe <strong>").concat(requiredOffset, "ms</strong> behind the noble</span><br><br>\\n                        ").concat(sigiliaInfo, "\\n                        <span style=\\"color: #ffcc00;\\">\\u26A0\\uFE0F Do not leave this page! \\u26A0\\uFE0F</span>\\n                    </span>"), true);\n            }\n        }, 100);\n    };\n    TimedConfirmation.countdownInterval = null;\n    TimedConfirmation.isOffsetTest = false;\n    TimedConfirmation.command = null;\n    return TimedConfirmation;\n}());\nexports.TimedConfirmation = TimedConfirmation;\n\n\n//# sourceURL=webpack:///./src/autosnipe/agendador.ts?')},"./src/autosnipe/offsetTester.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.startOffsetTest = startOffsetTest;\nexports.handleOffsetTesting = handleOffsetTesting;\nexports.handleOffsetTestConfirmation = handleOffsetTestConfirmation;\nexports.checkOffsetTestState = checkOffsetTestState;\nexports.processCommandTime = processCommandTime;\nexports.resetOffsetTest = resetOffsetTest;\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ \"./src/utils/serverTime.utils.ts\");\nvar storage_1 = __webpack_require__(/*! ../storage */ \"./src/storage.ts\");\nvar script_states_1 = __webpack_require__(/*! ../script-states */ \"./src/script-states.ts\");\nvar service_1 = __webpack_require__(/*! ../storage/service */ \"./src/storage/service.ts\");\nvar OffsetDB = __importStar(__webpack_require__(/*! ../storage/services/offsetTesterService */ \"./src/storage/services/offsetTesterService.ts\"));\nvar overlay_1 = __webpack_require__(/*! ../ui/overlay */ \"./src/ui/overlay.ts\");\nvar village_utils_1 = __webpack_require__(/*! ../utils/village.utils */ \"./src/utils/village.utils.ts\");\n/**\n * Initialize offset testing by finding a target village and redirecting to the place screen\n */\nfunction startOffsetTest() {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentVillage, currentCoords, targetVillage, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 6, , 7]);\n                    (0, overlay_1.showOverlay)('Starting offset test...', true);\n                    return [4 /*yield*/, OffsetDB.saveOffsetTestReturnUrl(window.location.href)];\n                case 1:\n                    _a.sent();\n                    currentVillage = game_data === null || game_data === void 0 ? void 0 : game_data.village;\n                    if (!currentVillage || !currentVillage.id || !currentVillage.x || !currentVillage.y) {\n                        (0, overlay_1.showOverlay)('Could not determine current village. Try again.', false);\n                        return [2 /*return*/];\n                    }\n                    currentCoords = \"\".concat(currentVillage.x, \"|\").concat(currentVillage.y);\n                    (0, overlay_1.showOverlay)('Finding target village...', true);\n                    return [4 /*yield*/, (0, village_utils_1.findTargetVillageForOffsetTest)(currentCoords)];\n                case 2:\n                    targetVillage = _a.sent();\n                    if (!targetVillage) {\n                        (0, overlay_1.showOverlay)('Could not find a suitable target village. Make sure you have at least two villages.', false);\n                        return [2 /*return*/];\n                    }\n                    (0, overlay_1.showOverlay)(\"Selected target: \".concat(targetVillage.villageName, \" (\").concat(targetVillage.coordinates, \")\"), true);\n                    // Store coordinates in IndexedDB\n                    return [4 /*yield*/, OffsetDB.saveSourceCoordinates(currentCoords)];\n                case 3:\n                    // Store coordinates in IndexedDB\n                    _a.sent();\n                    return [4 /*yield*/, OffsetDB.saveTargetCoordinates(targetVillage.coordinates)];\n                case 4:\n                    _a.sent();\n                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.TESTING_OFFSET)];\n                case 5:\n                    _a.sent();\n                    window.location.href = \"/game.php?village=\".concat(currentVillage.id, \"&screen=place&target=\").concat(targetVillage.villageId);\n                    return [3 /*break*/, 7];\n                case 6:\n                    error_1 = _a.sent();\n                    (0, overlay_1.showOverlay)(\"Error preparing offset test: \".concat(error_1), false);\n                    return [3 /*break*/, 7];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Handle offset testing on the place screen with target\n */\nfunction handleOffsetTesting() {\n    return __awaiter(this, void 0, void 0, function () {\n        var targetId, unitTypes, selectedUnit, _i, unitTypes_1, unitType, input, available, supportButton, attackButton, fallbackButton, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 1:\n                    if ((_a.sent()) !== script_states_1.SCRIPT_STATE.TESTING_OFFSET)\n                        return [2 /*return*/];\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 5, , 6]);\n                    targetId = new URLSearchParams(window.location.search).get('target');\n                    if (!targetId) {\n                        (0, overlay_1.showOverlay)('Error: No target village ID in URL.', false);\n                        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                        return [2 /*return*/];\n                    }\n                    (0, overlay_1.showOverlay)('Selecting troops for test...', true);\n                    unitTypes = ['spy', 'light', 'spear', 'sword', 'axe', 'heavy', 'marcher', 'archer'];\n                    selectedUnit = '';\n                    for (_i = 0, unitTypes_1 = unitTypes; _i < unitTypes_1.length; _i++) {\n                        unitType = unitTypes_1[_i];\n                        input = document.getElementById(\"unit_input_\".concat(unitType));\n                        if (!input)\n                            continue;\n                        available = parseInt(input.getAttribute('data-all-count') || '0', 10) ||\n                            (input.max ? parseInt(input.max) : 0);\n                        if (available >= 5) {\n                            input.value = '5';\n                            selectedUnit = unitType;\n                            break;\n                        }\n                    }\n                    if (!selectedUnit) {\n                        (0, overlay_1.showOverlay)('No troops available for offset testing. Please go to a village with troops.', false);\n                        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, OffsetDB.saveUnitType(selectedUnit)];\n                case 3:\n                    _a.sent();\n                    supportButton = document.querySelector('input[name=\"support\"]');\n                    if (supportButton) {\n                        supportButton.checked = true;\n                        supportButton.dispatchEvent(new Event('change', { bubbles: true }));\n                    }\n                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.CONFIRMING_OFFSET_TEST)];\n                case 4:\n                    _a.sent();\n                    attackButton = document.getElementById('target_attack');\n                    if (!attackButton) {\n                        fallbackButton = document.querySelector('.btn-attack, button[name=\"submit\"], input[type=\"submit\"]');\n                        if (!fallbackButton) {\n                            (0, overlay_1.showOverlay)('Could not find attack button.', false);\n                            (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                            return [2 /*return*/];\n                        }\n                        fallbackButton.click();\n                    }\n                    else {\n                        attackButton.click();\n                    }\n                    return [3 /*break*/, 6];\n                case 5:\n                    error_2 = _a.sent();\n                    (0, overlay_1.showOverlay)(\"Error during offset testing: \".concat(error_2), false);\n                    (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                    return [3 /*break*/, 6];\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Handle the offset test confirmation page\n */\nfunction handleOffsetTestConfirmation() {\n    return __awaiter(this, void 0, void 0, function () {\n        var confirmButton, sourceCoords, targetCoords, unitType, now, targetLaunchTime, expectedLandingTime, mockCommand, TimedConfirmation, error_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 1:\n                    if ((_a.sent()) !== script_states_1.SCRIPT_STATE.CONFIRMING_OFFSET_TEST)\n                        return [2 /*return*/];\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 11, , 12]);\n                    confirmButton = document.getElementById('troop_confirm_submit');\n                    if (!confirmButton) {\n                        (0, overlay_1.showOverlay)('Could not find confirmation button.', false);\n                        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, OffsetDB.getSourceCoordinates()];\n                case 3:\n                    sourceCoords = _a.sent();\n                    return [4 /*yield*/, OffsetDB.getTargetCoordinates()];\n                case 4:\n                    targetCoords = _a.sent();\n                    return [4 /*yield*/, OffsetDB.getUnitType()];\n                case 5:\n                    unitType = _a.sent();\n                    if (!sourceCoords || !targetCoords || !unitType) {\n                        (0, overlay_1.showOverlay)('Missing test data. Cannot continue.', false);\n                        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                        return [2 /*return*/];\n                    }\n                    now = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    targetLaunchTime = new Date(now + 5000);\n                    return [4 /*yield*/, OffsetDB.savePrepTime(now.toString())];\n                case 6:\n                    _a.sent();\n                    return [4 /*yield*/, OffsetDB.saveLaunchTime(targetLaunchTime.getTime().toString())];\n                case 7:\n                    _a.sent();\n                    return [4 /*yield*/, (0, village_utils_1.calculateLandingTime)(sourceCoords, targetCoords, unitType, targetLaunchTime.getTime())];\n                case 8:\n                    expectedLandingTime = _a.sent();\n                    return [4 /*yield*/, OffsetDB.saveExpectedLanding(expectedLandingTime.getTime().toString())];\n                case 9:\n                    _a.sent();\n                    mockCommand = {\n                        snipeInfo: {\n                            launchTime: targetLaunchTime,\n                            landingTime: expectedLandingTime,\n                            requiredOffset: 0,\n                            landingMs: expectedLandingTime.getMilliseconds(),\n                            isOffsetTest: true\n                        }\n                    };\n                    (0, overlay_1.showOverlay)('Preparing for precise timing... Click will occur in 5 seconds', true);\n                    // Record click time and handle transition\n                    confirmButton.addEventListener('click', function () {\n                        var clickTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                        OffsetDB.saveActualClickTime(clickTime.toString());\n                        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.AWAITING_COMMAND_RESULT);\n                        (0, overlay_1.showOverlay)(\"Command sent! Waiting for redirection...\", true);\n                    });\n                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ./agendador */ \"./src/autosnipe/agendador.ts\")); })];\n                case 10:\n                    TimedConfirmation = (_a.sent()).TimedConfirmation;\n                    TimedConfirmation.init(mockCommand);\n                    return [3 /*break*/, 12];\n                case 11:\n                    error_3 = _a.sent();\n                    (0, overlay_1.showOverlay)(\"Error during confirmation: \".concat(error_3), false);\n                    (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                    return [3 /*break*/, 12];\n                case 12: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Check for offset test state and process results if needed\n */\nfunction checkOffsetTestState() {\n    return __awaiter(this, void 0, void 0, function () {\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 1:\n                    if ((_a.sent()) === script_states_1.SCRIPT_STATE.AWAITING_COMMAND_RESULT) {\n                        setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, processCommandTime()];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); }, 500);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Try to silently cancel a command\n */\nfunction silentlyTryCancelCommand() {\n    return __awaiter(this, void 0, void 0, function () {\n        var commandRows, firstRow, cancelLink;\n        var _a;\n        return __generator(this, function (_b) {\n            try {\n                commandRows = document.querySelectorAll('#commands_outgoings tr.command-row, #commands_table tbody tr');\n                if (commandRows.length === 0)\n                    return [2 /*return*/];\n                firstRow = commandRows[0];\n                cancelLink = firstRow.querySelector('a[href*=\"cancel\"], .command-cancel, .btn-cancel');\n                if (!cancelLink && firstRow.querySelector('td:last-child')) {\n                    cancelLink = ((_a = firstRow.querySelector('td:last-child')) === null || _a === void 0 ? void 0 : _a.querySelector('a')) || null;\n                }\n                if (cancelLink) {\n                    cancelLink.click();\n                    // Try to confirm cancellation\n                    setTimeout(function () {\n                        var confirmButton = document.querySelector('input[type=\"submit\"][name=\"submit\"], input[type=\"submit\"][value=\"OK\"], ' +\n                            'input[type=\"submit\"], button[type=\"submit\"], .btn-confirm, .btn-accept');\n                        if (confirmButton) {\n                            confirmButton.click();\n                        }\n                    }, 1000);\n                }\n            }\n            catch (error) {\n                // Silently ignore errors\n            }\n            return [2 /*return*/];\n        });\n    });\n}\n/**\n * Process the command time after confirmation\n */\nfunction processCommandTime() {\n    return __awaiter(this, void 0, void 0, function () {\n        var scriptState, sourceCoords, targetCoords, unitType, launchTimeStr, actualClickTimeStr, returnUrl_1, parseCommandArrivalTime, arrivalTime, selectors, _i, selectors_1, selector, rows, timeCell, mainTime, milliseconds, landingTimeText, targetLaunchTime, actualClickTime, expectedLandingTime, serverProcessingDelay, expectedLandingTimeFromClick, offsetFromTargetMs, currentOffset, trueOffset, recommendedOffset_1, customOverlay_1, overlayContent, header, resultInfo_1, customOffsetContainer_1, customTitle, inputGroup, customOffsetInput_1, applyCustomButton_1, validationMessage_1, buttonContainer_1, applyButton_1, returnButton_1, closeButton, showSuccessMessage_1, error_4;\n        var _a, _b, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _d.trys.push([0, 16, , 17]);\n                    return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 1:\n                    scriptState = _d.sent();\n                    if (scriptState !== script_states_1.SCRIPT_STATE.AWAITING_COMMAND_RESULT &&\n                        scriptState !== script_states_1.SCRIPT_STATE.OFFSET_TEST_COMPLETED) {\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.OFFSET_TEST_COMPLETED)];\n                case 2:\n                    _d.sent();\n                    return [4 /*yield*/, OffsetDB.getSourceCoordinates()];\n                case 3:\n                    sourceCoords = _d.sent();\n                    return [4 /*yield*/, OffsetDB.getTargetCoordinates()];\n                case 4:\n                    targetCoords = _d.sent();\n                    return [4 /*yield*/, OffsetDB.getUnitType()];\n                case 5:\n                    unitType = _d.sent();\n                    return [4 /*yield*/, OffsetDB.getLaunchTime()];\n                case 6:\n                    launchTimeStr = _d.sent();\n                    return [4 /*yield*/, OffsetDB.getActualClickTime()];\n                case 7:\n                    actualClickTimeStr = _d.sent();\n                    return [4 /*yield*/, OffsetDB.getOffsetTestReturnUrl()];\n                case 8:\n                    returnUrl_1 = _d.sent();\n                    if (!sourceCoords || !targetCoords || !unitType || !launchTimeStr) {\n                        (0, overlay_1.showOverlay)('Missing test data. Offset test failed.', false);\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../utils/time.utils */ \"./src/utils/time.utils.ts\")); })];\n                case 9:\n                    parseCommandArrivalTime = (_d.sent()).parseCommandArrivalTime;\n                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 500); })];\n                case 10:\n                    _d.sent();\n                    arrivalTime = null;\n                    selectors = [\n                        \"#commands_outgoings tr.command-row\",\n                        \"#commands_outgoings table.vis tr.command-row\",\n                        \"#commands_table tbody tr\",\n                        \"table.vis tr:not(:first-child)\",\n                        \"tr[data-command-id]\"\n                    ];\n                    for (_i = 0, selectors_1 = selectors; _i < selectors_1.length; _i++) {\n                        selector = selectors_1[_i];\n                        rows = document.querySelectorAll(selector);\n                        if (rows.length === 0)\n                            continue;\n                        timeCell = rows[0].querySelector(\"td:nth-child(2)\");\n                        if (!timeCell)\n                            continue;\n                        mainTime = ((_b = (_a = timeCell.childNodes[0]) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n                        milliseconds = ((_c = timeCell.querySelector('.grey.small')) === null || _c === void 0 ? void 0 : _c.textContent) || '';\n                        landingTimeText = \"\".concat(mainTime).concat(milliseconds);\n                        try {\n                            arrivalTime = parseCommandArrivalTime(landingTimeText);\n                            if (arrivalTime)\n                                break;\n                        }\n                        catch (e) {\n                            // Continue to next selector\n                        }\n                    }\n                    if (!arrivalTime) {\n                        (0, overlay_1.showOverlay)('Could not find command arrival time. Try again with the browser console open.', false);\n                        return [2 /*return*/];\n                    }\n                    targetLaunchTime = parseInt(launchTimeStr);\n                    actualClickTime = actualClickTimeStr ? parseInt(actualClickTimeStr) : null;\n                    return [4 /*yield*/, (0, village_utils_1.calculateLandingTime)(sourceCoords, targetCoords, unitType, targetLaunchTime)];\n                case 11:\n                    expectedLandingTime = _d.sent();\n                    serverProcessingDelay = null;\n                    if (!actualClickTime) return [3 /*break*/, 14];\n                    return [4 /*yield*/, (0, village_utils_1.calculateLandingTime)(sourceCoords, targetCoords, unitType, actualClickTime)];\n                case 12:\n                    expectedLandingTimeFromClick = _d.sent();\n                    serverProcessingDelay = arrivalTime.getTime() - expectedLandingTimeFromClick.getTime();\n                    return [4 /*yield*/, OffsetDB.saveTrueOffset(serverProcessingDelay.toString())];\n                case 13:\n                    _d.sent();\n                    _d.label = 14;\n                case 14:\n                    offsetFromTargetMs = arrivalTime.getTime() - expectedLandingTime.getTime();\n                    return [4 /*yield*/, OffsetDB.saveCalculatedOffset(offsetFromTargetMs.toString())];\n                case 15:\n                    _d.sent();\n                    currentOffset = storage_1.AutoDodgeStorage.loadConfig().CLICK_OFFSET;\n                    trueOffset = serverProcessingDelay !== null ? serverProcessingDelay : offsetFromTargetMs;\n                    recommendedOffset_1 = -trueOffset;\n                    // Try to cancel in background\n                    setTimeout(silentlyTryCancelCommand, 500);\n                    customOverlay_1 = document.createElement('div');\n                    customOverlay_1.id = 'autodoge-custom-offset-overlay';\n                    customOverlay_1.style.cssText = \"\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: rgba(0, 0, 0, 0.7);\\n            z-index: 12000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n        \";\n                    overlayContent = document.createElement('div');\n                    overlayContent.style.cssText = \"\\n            background-color: #F0E6D2;\\n            border: 2px solid #5A4534;\\n            border-radius: 8px;\\n            padding: 20px;\\n            width: 480px;\\n            max-width: 90%;\\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n            text-align: center;\\n            color: #333;\\n            font-family: 'Arial', sans-serif;\\n        \";\n                    header = document.createElement('h2');\n                    header.textContent = 'OFFSET TEST RESULTS';\n                    header.style.cssText = \"\\n            color: #804000;\\n            margin: 0 0 15px 0;\\n            font-size: 18px;\\n            border-bottom: 1px solid #D8C8B0;\\n            padding-bottom: 10px;\\n        \";\n                    resultInfo_1 = document.createElement('div');\n                    resultInfo_1.style.cssText = \"margin: 15px 0; font-size: 14px;\";\n                    resultInfo_1.innerHTML = \"\\n            <div style=\\\"margin-bottom: 8px;\\\"><strong>Measured Delay:</strong> <span style=\\\"font-weight: bold; color: \".concat(trueOffset < 0 ? '#2e7d32' : '#c62828', \";\\\">\").concat(trueOffset, \"ms</span></div>\\n            <div style=\\\"margin-bottom: 8px;\\\">Commands landing <strong>\").concat(Math.abs(trueOffset), \"ms</strong> \").concat(trueOffset >= 0 ? 'later' : 'earlier', \" than expected</div>\\n            <div style=\\\"margin-bottom: 12px; font-size: 16px;\\\">\\n                <strong>Recommended Setting:</strong> <span style=\\\"font-weight: bold; color: #006064;\\\">\").concat(recommendedOffset_1, \"ms</span>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; opacity: 0.8;\\\">Current setting: \").concat(currentOffset, \"ms</div>\\n        \");\n                    customOffsetContainer_1 = document.createElement('div');\n                    customOffsetContainer_1.style.cssText = \"\\n            margin: 20px 0 10px;\\n            padding: 10px;\\n            background: rgba(0,0,0,0.05);\\n            border-radius: 4px;\\n        \";\n                    customTitle = document.createElement('div');\n                    customTitle.textContent = 'Or set a custom offset:';\n                    customTitle.style.cssText = \"\\n            font-weight: bold;\\n            margin-bottom: 10px;\\n            font-size: 14px;\\n        \";\n                    customOffsetContainer_1.appendChild(customTitle);\n                    inputGroup = document.createElement('div');\n                    inputGroup.style.cssText = \"\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            gap: 8px;\\n            margin-bottom: 5px;\\n        \";\n                    customOffsetInput_1 = document.createElement('input');\n                    customOffsetInput_1.type = 'number';\n                    customOffsetInput_1.value = recommendedOffset_1.toString();\n                    customOffsetInput_1.placeholder = 'Custom offset in ms';\n                    customOffsetInput_1.style.cssText = \"\\n            padding: 8px;\\n            width: 100px;\\n            border: 1px solid #ccc;\\n            border-radius: 4px;\\n            text-align: center;\\n            font-size: 14px;\\n        \";\n                    applyCustomButton_1 = document.createElement('button');\n                    applyCustomButton_1.textContent = 'Apply Custom';\n                    applyCustomButton_1.style.cssText = \"\\n            background-color: #FF9800;\\n            color: white;\\n            border: none;\\n            padding: 8px 12px;\\n            border-radius: 4px;\\n            cursor: pointer;\\n            font-weight: bold;\\n            transition: background-color 0.2s;\\n        \";\n                    applyCustomButton_1.addEventListener('mouseover', function () {\n                        applyCustomButton_1.style.backgroundColor = '#F57C00';\n                    });\n                    applyCustomButton_1.addEventListener('mouseout', function () {\n                        applyCustomButton_1.style.backgroundColor = '#FF9800';\n                    });\n                    // Add elements to input group\n                    inputGroup.appendChild(customOffsetInput_1);\n                    inputGroup.appendChild(applyCustomButton_1);\n                    customOffsetContainer_1.appendChild(inputGroup);\n                    validationMessage_1 = document.createElement('div');\n                    validationMessage_1.style.cssText = \"\\n            font-size: 12px;\\n            color: #e53935;\\n            min-height: 16px;\\n            visibility: hidden;\\n        \";\n                    validationMessage_1.textContent = 'Please enter a valid number';\n                    customOffsetContainer_1.appendChild(validationMessage_1);\n                    buttonContainer_1 = document.createElement('div');\n                    buttonContainer_1.style.cssText = \"\\n            display: flex;\\n            justify-content: center;\\n            gap: 15px;\\n            margin-top: 20px;\\n        \";\n                    applyButton_1 = document.createElement('button');\n                    applyButton_1.textContent = 'Apply Recommended Offset';\n                    applyButton_1.style.cssText = \"\\n            background-color: #4CAF50;\\n            color: white;\\n            border: none;\\n            padding: 10px 20px;\\n            border-radius: 4px;\\n            cursor: pointer;\\n            font-weight: bold;\\n            transition: background-color 0.2s;\\n        \";\n                    applyButton_1.addEventListener('mouseover', function () {\n                        applyButton_1.style.backgroundColor = '#3d8b40';\n                    });\n                    applyButton_1.addEventListener('mouseout', function () {\n                        applyButton_1.style.backgroundColor = '#4CAF50';\n                    });\n                    returnButton_1 = document.createElement('button');\n                    returnButton_1.textContent = 'Return to Previous Page';\n                    returnButton_1.style.cssText = \"\\n            background-color: #2196F3;\\n            color: white;\\n            border: none;\\n            padding: 10px 20px;\\n            border-radius: 4px;\\n            cursor: pointer;\\n            font-weight: bold;\\n            transition: background-color 0.2s;\\n        \";\n                    returnButton_1.addEventListener('mouseover', function () {\n                        returnButton_1.style.backgroundColor = '#1976D2';\n                    });\n                    returnButton_1.addEventListener('mouseout', function () {\n                        returnButton_1.style.backgroundColor = '#2196F3';\n                    });\n                    closeButton = document.createElement('button');\n                    closeButton.textContent = '✕';\n                    closeButton.style.cssText = \"\\n            position: absolute;\\n            top: 5px;\\n            right: 10px;\\n            background: none;\\n            border: none;\\n            font-size: 20px;\\n            cursor: pointer;\\n            color: #5A4534;\\n        \";\n                    showSuccessMessage_1 = function (offsetValue) {\n                        resultInfo_1.innerHTML = \"\\n                <div style=\\\"padding: 15px 0;\\\">\\n                    <span style=\\\"font-size: 20px; color: #4CAF50;\\\">\\u2713</span>\\n                    <p style=\\\"margin: 10px 0; font-weight: bold;\\\">Offset successfully updated to <span style=\\\"color: #006064;\\\">\".concat(offsetValue, \"ms</span>!</p>\\n                </div>\\n            \");\n                        // Hide the custom input section\n                        customOffsetContainer_1.style.display = 'none';\n                        // Update buttons\n                        buttonContainer_1.innerHTML = '';\n                        if (returnUrl_1) {\n                            buttonContainer_1.appendChild(returnButton_1);\n                        }\n                    };\n                    // Add event listeners for buttons\n                    applyButton_1.addEventListener('click', function () {\n                        var config = storage_1.AutoDodgeStorage.loadConfig();\n                        config.CLICK_OFFSET = recommendedOffset_1;\n                        storage_1.AutoDodgeStorage.saveConfig(config);\n                        showSuccessMessage_1(recommendedOffset_1);\n                    });\n                    // Add event listener for custom apply button\n                    applyCustomButton_1.addEventListener('click', function () {\n                        // Get and validate the input value\n                        var inputValue = parseInt(customOffsetInput_1.value);\n                        if (isNaN(inputValue)) {\n                            validationMessage_1.textContent = 'Please enter a valid number';\n                            validationMessage_1.style.visibility = 'visible';\n                            return;\n                        }\n                        // Additional validation if needed (e.g., range checking)\n                        if (inputValue < -1000 || inputValue > 1000) {\n                            validationMessage_1.textContent = 'Offset should be between -1000ms and 1000ms';\n                            validationMessage_1.style.visibility = 'visible';\n                            return;\n                        }\n                        // Hide validation message if we pass validation\n                        validationMessage_1.style.visibility = 'hidden';\n                        // Apply the custom offset\n                        var config = storage_1.AutoDodgeStorage.loadConfig();\n                        config.CLICK_OFFSET = inputValue;\n                        storage_1.AutoDodgeStorage.saveConfig(config);\n                        showSuccessMessage_1(inputValue);\n                    });\n                    // Input validation\n                    customOffsetInput_1.addEventListener('input', function () {\n                        var inputValue = parseInt(customOffsetInput_1.value);\n                        if (isNaN(inputValue)) {\n                            validationMessage_1.textContent = 'Please enter a valid number';\n                            validationMessage_1.style.visibility = 'visible';\n                        }\n                        else if (inputValue < -1000 || inputValue > 1000) {\n                            validationMessage_1.textContent = 'Offset should be between -1000ms and 1000ms';\n                            validationMessage_1.style.visibility = 'visible';\n                        }\n                        else {\n                            validationMessage_1.style.visibility = 'hidden';\n                        }\n                    });\n                    if (returnUrl_1) {\n                        returnButton_1.addEventListener('click', function () {\n                            window.location.href = returnUrl_1;\n                        });\n                        buttonContainer_1.appendChild(returnButton_1);\n                    }\n                    closeButton.addEventListener('click', function () {\n                        document.body.removeChild(customOverlay_1);\n                        OffsetDB.clearOffsetTestData();\n                        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                    });\n                    // Add all elements to the overlay\n                    buttonContainer_1.appendChild(applyButton_1);\n                    overlayContent.appendChild(closeButton);\n                    overlayContent.appendChild(header);\n                    overlayContent.appendChild(resultInfo_1);\n                    overlayContent.appendChild(customOffsetContainer_1);\n                    overlayContent.appendChild(buttonContainer_1);\n                    customOverlay_1.appendChild(overlayContent);\n                    // Add the overlay to the document\n                    document.body.appendChild(customOverlay_1);\n                    // Clean up data after a while\n                    setTimeout(function () {\n                        OffsetDB.clearOffsetTestData();\n                        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                    }, 5000);\n                    return [2 /*return*/, trueOffset];\n                case 16:\n                    error_4 = _d.sent();\n                    (0, overlay_1.showOverlay)(\"Error calculating offset: \".concat(error_4), false);\n                    (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n                    return [2 /*return*/, null];\n                case 17: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Reset the offset test process\n */\nfunction resetOffsetTest(preserveResults) {\n    if (preserveResults === void 0) { preserveResults = false; }\n    try {\n        // Just clean up the data without showing anything new or refreshing\n        OffsetDB.clearOffsetTestData();\n        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n    }\n    catch (error) {\n        (0, service_1.setScriptState)(script_states_1.SCRIPT_STATE.IDLE);\n        OffsetDB.clearOffsetTestData();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/autosnipe/offsetTester.ts?")},"./src/autosnipe/planner.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.PlannerService = void 0;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar command_utils_1 = __webpack_require__(/*! ../utils/command.utils */ "./src/utils/command.utils.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\nvar village_utils_1 = __webpack_require__(/*! ../utils/village.utils */ "./src/utils/village.utils.ts");\nvar PlannerService = /** @class */ (function () {\n    function PlannerService() {\n    }\n    PlannerService.getPlannerData = function (targetCoord_1, targetDate_1) {\n        return __awaiter(this, arguments, void 0, function (targetCoord, targetDate, sigiliaPercent) {\n            var _this = this;\n            if (sigiliaPercent === void 0) { sigiliaPercent = 0; }\n            return __generator(this, function (_a) {\n                // Try to get cached data first, otherwise fetch fresh data\n                return [2 /*return*/, (0, service_1.getPlannerDataWithCache)(targetCoord, targetDate, \n                    // Callback to fetch fresh data if cache is invalid/expired\n                    function () { return _this.fetchPlannerData(targetCoord, targetDate, sigiliaPercent); })];\n            });\n        });\n    };\n    PlannerService.fetchPlannerData = function (targetCoord_1, targetDate_1) {\n        return __awaiter(this, arguments, void 0, function (targetCoord, targetDate, sigiliaPercent) {\n            var config, _a, targetX, targetY, _b, imagens, velocidades, villagesWithTroops, possibleVillages, _loop_1, _i, villagesWithTroops_1, village;\n            var _c;\n            if (sigiliaPercent === void 0) { sigiliaPercent = 0; }\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0: return [4 /*yield*/, this.getWorldConfig()];\n                    case 1:\n                        config = _d.sent();\n                        _a = targetCoord.split(\'|\').map(Number), targetX = _a[0], targetY = _a[1];\n                        _b = (0, village_utils_1.getTroopInfo)(config), imagens = _b.imagens, velocidades = _b.velocidades;\n                        return [4 /*yield*/, (0, village_utils_1.getAllVillagesWithTroops)()];\n                    case 2:\n                        villagesWithTroops = _d.sent();\n                        possibleVillages = [];\n                        _loop_1 = function (village) {\n                            try {\n                                // Calculate distance to target\n                                var distance_1 = (0, village_utils_1.calculateDistance)(village.x, village.y, targetX, targetY);\n                                // Calculate possible units for this village\n                                var possibleUnits_1 = {};\n                                var hasPossibleUnits_1 = false;\n                                velocidades.forEach(function (speed, index) {\n                                    var unit = imagens[index];\n                                    // Calculate travel time using the provided formula:\n                                    // travelTime = distance * unitSpeed\n                                    // travelTime /= boost (which is 1 + sigiliaPercent/100)\n                                    // return Math.round(travelTime * 60) * 1000\n                                    var travelTimeSeconds;\n                                    if (sigiliaPercent > 0) {\n                                        // Calculate with boost factor\n                                        // sigiliaPercent could be a total of multiple sigilia bonuses (e.g., 16% + 10% = 26%)\n                                        var boostFactor = 1 + (sigiliaPercent / 100);\n                                        travelTimeSeconds = Math.round((distance_1 * speed / boostFactor) * 60);\n                                        (0, logging_utils_1.sendLog)("[Planner] For ".concat(unit, ": Applied ").concat(sigiliaPercent, "% sigilia boost: Base time: ").concat(Math.round(distance_1 * speed * 60), "s \\u2192 ").concat(travelTimeSeconds, "s (divided by ").concat(boostFactor, ")"), \'debug\');\n                                    }\n                                    else {\n                                        // No sigilia, regular calculation\n                                        travelTimeSeconds = Math.round(distance_1 * speed * 60);\n                                    }\n                                    // Ensure target time has no milliseconds\n                                    var targetWithoutMs = Math.floor(targetDate.getTime() / 1000) * 1000;\n                                    // Calculate launch time by subtracting travel time in milliseconds\n                                    var launchTimeWithoutMs = targetWithoutMs - (travelTimeSeconds * 1000);\n                                    if (village.units[unit] > 0) {\n                                        var launchDate = new Date(launchTimeWithoutMs);\n                                        if (launchDate.getTime() > (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime())) {\n                                            possibleUnits_1[unit] = {\n                                                amount: village.units[unit],\n                                                launchTime: launchDate,\n                                                travelTime: travelTimeSeconds,\n                                            };\n                                            hasPossibleUnits_1 = true;\n                                        }\n                                    }\n                                });\n                                if (hasPossibleUnits_1) {\n                                    var slowestUnit = imagens.find(function (unit) { return village.units[unit] > 0 && village.units[unit] === Math.min.apply(Math, Object.values(village.units).filter(function (val) { return val > 0; })); }) || \'snob\';\n                                    // Get the base speed without sigilia modifications\n                                    var baseSpeed = velocidades[imagens.indexOf(slowestUnit)];\n                                    // Get the travel time from the possibleUnits object for the slowest unit\n                                    // which already has sigilia applied\n                                    var travelTimeSeconds = ((_c = possibleUnits_1[slowestUnit]) === null || _c === void 0 ? void 0 : _c.travelTime) || Math.round(distance_1 * baseSpeed * 60);\n                                    possibleVillages.push({\n                                        villageId: village.villageId,\n                                        villageName: village.villageName,\n                                        coordinates: village.coordinates,\n                                        distance: distance_1,\n                                        units: possibleUnits_1,\n                                        baseSpeed: baseSpeed,\n                                        travelTimeSeconds: travelTimeSeconds,\n                                        sigiliaBonus: sigiliaPercent // Store the sigilia bonus that was applied\n                                    });\n                                }\n                            }\n                            catch (error) {\n                                (0, logging_utils_1.sendLog)("Error processing village: ".concat(error), \'error\');\n                                return "continue";\n                            }\n                        };\n                        for (_i = 0, villagesWithTroops_1 = villagesWithTroops; _i < villagesWithTroops_1.length; _i++) {\n                            village = villagesWithTroops_1[_i];\n                            _loop_1(village);\n                        }\n                        return [2 /*return*/, {\n                                worldConfig: config,\n                                target: "".concat(targetX, "|").concat(targetY),\n                                arrivalTime: targetDate.toISOString(),\n                                possibleVillages: possibleVillages,\n                                sigiliaPercent: sigiliaPercent // Include the sigilia percentage in the return data\n                            }];\n                }\n            });\n        });\n    };\n    PlannerService.calculatePossibleSnipes = function (plannerData, command) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config, MINIMUM_PLANNING_BUFFER, allCommands, existingSnipes, usedVillages, existingSnipeTimes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        config = storage_1.AutoDodgeStorage.loadConfig();\n                        MINIMUM_PLANNING_BUFFER = 30000;\n                        return [4 /*yield*/, (0, command_utils_1.getAllCommandsFromStorage)()];\n                    case 1:\n                        allCommands = _a.sent();\n                        existingSnipes = allCommands\n                            .filter(function (cmd) {\n                            var _a;\n                            return cmd.id !== command.id &&\n                                (cmd.state === command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING ||\n                                    cmd.state === command_1.COMMAND_STATE.NOBLE_SNIPE_IN_PROGRESS) &&\n                                ((_a = cmd.snipeInfo) === null || _a === void 0 ? void 0 : _a.launchTime);\n                        });\n                        usedVillages = new Set(existingSnipes.map(function (cmd) { return cmd.snipeInfo.villageId; }));\n                        existingSnipeTimes = existingSnipes.map(function (cmd) {\n                            return new Date(cmd.snipeInfo.launchTime).getTime();\n                        });\n                        return [2 /*return*/, plannerData.possibleVillages\n                                .filter(function (village) {\n                                // Filter out already used villages and the target village itself\n                                if (usedVillages.has(village.villageId) || village.coordinates === plannerData.target) {\n                                    return false;\n                                }\n                                var hasOtherTroops = Object.entries(village.units)\n                                    .some(function (_a) {\n                                    var unit = _a[0], info = _a[1];\n                                    return unit !== \'snob\' &&\n                                        unit !== \'spy\' &&\n                                        config.NOBLE_SNIPE_UNITS[unit] &&\n                                        info.amount > 0;\n                                });\n                                return hasOtherTroops;\n                            })\n                                .flatMap(function (village) {\n                                // Get all possible unit combinations for this village\n                                var possibleUnits = Object.entries(village.units)\n                                    .filter(function (_a) {\n                                    var unit = _a[0], info = _a[1];\n                                    return unit !== \'snob\' &&\n                                        unit !== \'spy\' &&\n                                        config.NOBLE_SNIPE_UNITS[unit] &&\n                                        info.amount > 0;\n                                });\n                                // Create a snipe option for each possible slowest unit\n                                return possibleUnits.map(function (_a) {\n                                    var unit = _a[0], info = _a[1];\n                                    return ({\n                                        village: village,\n                                        launchTime: new Date(info.launchTime),\n                                        slowestUnit: unit\n                                    });\n                                });\n                            })\n                                .filter(function (snipe) {\n                                var now = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                                if (snipe.launchTime.getTime() <= now + MINIMUM_PLANNING_BUFFER) {\n                                    return false;\n                                }\n                                // Check for time conflicts with existing snipes\n                                var minInterval = config.NOBLE_SNIPE_MIN_INTERVAL_BETWEEN_SNIPES;\n                                return !existingSnipeTimes.some(function (existingTime) {\n                                    return Math.abs(snipe.launchTime.getTime() - existingTime) < minInterval;\n                                });\n                            })\n                                .sort(function (a, b) { return a.launchTime.getTime() - b.launchTime.getTime(); })];\n                }\n            });\n        });\n    };\n    PlannerService.getWorldConfig = village_utils_1.getWorldConfig;\n    return PlannerService;\n}());\nexports.PlannerService = PlannerService;\n\n\n//# sourceURL=webpack:///./src/autosnipe/planner.ts?')},"./src/autosnipe/sigilia.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.parseSigiliaFromHtml = parseSigiliaFromHtml;\nexports.fetchSigiliaData = fetchSigiliaData;\nexports.getSigiliaSpeedBonus = getSigiliaSpeedBonus;\nexports.setManualSigiliaBonus = setManualSigiliaBonus;\nvar url_utils_1 = __webpack_require__(/*! ../utils/url.utils */ "./src/utils/url.utils.ts");\nvar sigiliaService_1 = __webpack_require__(/*! ../storage/services/sigiliaService */ "./src/storage/services/sigiliaService.ts");\n// Constants\nvar SIGILIA_ICON_CLASS = "benefit_incoming_support_speed";\nvar SIGILIA_TEXT_INDICATORS = [\n    "Sigilia de desespero", // Portuguese\n    "Desperation Sigil", // English\n    "incoming_support_speed" // Image class fallback\n];\nvar MIN_REQUEST_DELAY = 1000; // Minimum delay between requests to avoid spamming\nvar MAX_RETRIES = 2; // Máximo de 2 retries = total de 3 tentativas\nvar lastRequestTime = 0;\nvar memoryCache = {};\nvar MEM_CACHE_DURATION = 5 * 60 * 1000; // 5 minutos em milissegundos\n// Verifica se o cache em memória é válido\nfunction isMemCacheValid(villageId) {\n    if (!memoryCache[villageId])\n        return false;\n    return (Date.now() - memoryCache[villageId].timestamp) < MEM_CACHE_DURATION;\n}\n// Recupera dado do cache em memória\nfunction getFromMemCache(villageId) {\n    if (!isMemCacheValid(villageId))\n        return null;\n    return memoryCache[villageId].data;\n}\n// Salva no cache em memória\nfunction saveToMemCache(data) {\n    memoryCache[data.villageId] = {\n        data: data,\n        timestamp: Date.now()\n    };\n}\n/**\n * Parses the sigilia data from the overview page HTML\n * @param html The HTML content from the village overview page\n * @param gameDataVersion The game data version used to match image URLs\n * @returns The speed bonus percentage or 0 if no sigilia is found\n */\nfunction parseSigiliaFromHtml(html, gameDataVersion) {\n    // Default return values\n    var speedBonus = 0;\n    var expirationDate = null;\n    console.log(\'[Sigilia] Parsing HTML...\');\n    try {\n        // First check if Sigilia is mentioned in the HTML\n        if (html.includes(\'Sigilia de desespero\') || html.includes(\'Desperation Sigil\')) {\n            console.log(\'[Sigilia] Found Sigilia mention in HTML\');\n            // Look for combined sigilia bonuses with patterns like "+16%" and "+10%"\n            var combinedBonusRegex = /<b>\\+(\\d+)%<\\/b>[\\s\\S]*?<b>\\+(\\d+)%<\\/b>/;\n            var combinedMatch = html.match(combinedBonusRegex);\n            if (combinedMatch && combinedMatch[1] && combinedMatch[2]) {\n                // We found multiple bonuses, add them up\n                var firstBonus = parseInt(combinedMatch[1], 10);\n                var secondBonus = parseInt(combinedMatch[2], 10);\n                speedBonus = firstBonus + secondBonus;\n                console.log("[Sigilia] Found combined bonuses: ".concat(firstBonus, "% + ").concat(secondBonus, "% = ").concat(speedBonus, "%"));\n            }\n            else {\n                // Look for all bold percentage values inside the sigilia section\n                var sigiliaIndex = html.indexOf(\'Sigilia de desespero\') || html.indexOf(\'Desperation Sigil\');\n                if (sigiliaIndex > 0) {\n                    // Get a larger section of HTML around the Sigilia mention to catch all bonuses\n                    var startSection = Math.max(0, sigiliaIndex - 500);\n                    var endSection = Math.min(html.length, sigiliaIndex + 500);\n                    var sigiliaSection = html.substring(startSection, endSection);\n                    // Find all bold percentages (format: <b>+X%</b>)\n                    var boldPercentMatches = sigiliaSection.match(/<b>\\+(\\d+)%<\\/b>/g);\n                    if (boldPercentMatches && boldPercentMatches.length > 0) {\n                        console.log(\'[Sigilia] All bold percentages found near Sigilia:\', boldPercentMatches);\n                        // Sum up all the bold percentages found\n                        var totalBonus = 0;\n                        for (var _i = 0, boldPercentMatches_1 = boldPercentMatches; _i < boldPercentMatches_1.length; _i++) {\n                            var match = boldPercentMatches_1[_i];\n                            var percentMatch = match.match(/\\+(\\d+)%/);\n                            if (percentMatch && percentMatch[1]) {\n                                var percent = parseInt(percentMatch[1], 10);\n                                totalBonus += percent;\n                            }\n                        }\n                        if (totalBonus > 0) {\n                            console.log("[Sigilia] Combined total of all bold percentages: ".concat(totalBonus, "%"));\n                            speedBonus = totalBonus;\n                        }\n                    }\n                    else {\n                        // Fallback to original method for single percentage\n                        var percentRegex = /(\\d+)%\\s*(mais rápido|faster)/i;\n                        var percentMatch = html.match(percentRegex);\n                        if (percentMatch && percentMatch[1]) {\n                            // Extract the actual percentage value\n                            speedBonus = parseInt(percentMatch[1], 10);\n                            console.log("[Sigilia] Extracted specific speed bonus: ".concat(speedBonus, "%"));\n                        }\n                        else {\n                            // If we can\'t find the specific pattern, look for any percentage near "Sigilia"\n                            // Find all percentages in this section\n                            var percentMatches = sigiliaSection.match(/(\\d+)%/g);\n                            if (percentMatches && percentMatches.length > 0) {\n                                console.log(\'[Sigilia] All percentages found near Sigilia:\', percentMatches);\n                                // Try to find total percentage first (like "26%")\n                                var totalMatch = sigiliaSection.match(/(\\d+)%\\s*(mais rápido|faster)/i);\n                                if (totalMatch && totalMatch[1]) {\n                                    speedBonus = parseInt(totalMatch[1], 10);\n                                    console.log("[Sigilia] Found total speed mentioned: ".concat(speedBonus, "%"));\n                                }\n                                else {\n                                    // Use the first percentage found (likely the most relevant)\n                                    var firstPercent = parseInt(percentMatches[0].replace(\'%\', \'\'), 10);\n                                    if (firstPercent > 0) {\n                                        console.log("[Sigilia] Using first percentage found: ".concat(firstPercent, "%"));\n                                        speedBonus = firstPercent;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // Extract expiration date (kept from original code)\n            var dateMatch = html.match(/expira a (\\d+\\.\\d+)\\. às (\\d+:\\d+)/i) ||\n                html.match(/expires on (\\d+\\.\\d+)\\. at (\\d+:\\d+)/i) ||\n                html.match(/(\\d+\\.\\d+).*?(\\d+:\\d+)/);\n            if (dateMatch) {\n                var _ = dateMatch[0], datePart = dateMatch[1], timePart = dateMatch[2];\n                try {\n                    var _a = datePart.split(\'.\'), day = _a[0], month = _a[1];\n                    var _b = timePart.split(\':\'), hours = _b[0], minutes = _b[1];\n                    var currentYear = new Date().getFullYear();\n                    var expDate = new Date(currentYear, parseInt(month) - 1, parseInt(day), parseInt(hours), parseInt(minutes));\n                    if (expDate < new Date()) {\n                        expDate.setFullYear(currentYear + 1);\n                    }\n                    expirationDate = expDate.toISOString();\n                }\n                catch (e) {\n                    console.error("[Sigilia] Failed to parse expiration date", e);\n                }\n            }\n        }\n        else if (html.includes(\'benefit_incoming_support_speed\')) {\n            // Fallback: if only sigilia image is found, look for percentage nearby\n            console.log(\'[Sigilia] Found Sigilia image but not text mention\');\n            // Find all percentages in the vicinity of the image\n            var imgIndex = html.indexOf(\'benefit_incoming_support_speed\');\n            if (imgIndex > 0) {\n                var startSection = Math.max(0, imgIndex - 250);\n                var endSection = Math.min(html.length, imgIndex + 500);\n                var section = html.substring(startSection, endSection);\n                // Look for combined bold percentages first\n                var boldPercentMatches = section.match(/<b>\\+(\\d+)%<\\/b>/g);\n                if (boldPercentMatches && boldPercentMatches.length > 0) {\n                    console.log(\'[Sigilia] Bold percentages found near image:\', boldPercentMatches);\n                    // Sum up all bold percentages\n                    var totalBonus = 0;\n                    for (var _c = 0, boldPercentMatches_2 = boldPercentMatches; _c < boldPercentMatches_2.length; _c++) {\n                        var match = boldPercentMatches_2[_c];\n                        var percentMatch = match.match(/\\+(\\d+)%/);\n                        if (percentMatch && percentMatch[1]) {\n                            var percent = parseInt(percentMatch[1], 10);\n                            totalBonus += percent;\n                        }\n                    }\n                    if (totalBonus > 0) {\n                        console.log("[Sigilia] Combined total of bold percentages: ".concat(totalBonus, "%"));\n                        speedBonus = totalBonus;\n                    }\n                }\n                else {\n                    // Fallback to regular percentages\n                    var percentMatches = section.match(/(\\d+)%/g);\n                    if (percentMatches && percentMatches.length > 0) {\n                        // Use a percentage if found\n                        var percent = parseInt(percentMatches[0].replace(\'%\', \'\'), 10);\n                        if (percent > 0) {\n                            console.log("[Sigilia] Found percentage near image: ".concat(percent, "%"));\n                            speedBonus = percent;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    catch (error) {\n        console.error(\'[Sigilia] Error in extraction:\', error);\n    }\n    console.log(\'[Sigilia] Extracted data:\', { speedBonus: speedBonus, expirationDate: expirationDate });\n    return { speedBonus: speedBonus, expirationDate: expirationDate };\n}\n/**\n * Fetches the sigilia data for a village\n * @param villageId The ID of the village to check\n * @returns A promise that resolves to the sigilia data\n */\nfunction fetchSigiliaData(villageId) {\n    return __awaiter(this, void 0, void 0, function () {\n        var url, response, html, gameDataMatch, gameDataVersion, _a, speedBonus, expirationDate, sigiliaData, error_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    console.log(\'[Sigilia] Fetching sigilia data for village:\', villageId);\n                    url = (0, url_utils_1.getVillageOverviewUrl)(villageId);\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 5, , 6]);\n                    return [4 /*yield*/, fetch(url, {\n                            credentials: \'include\', // Important: Include cookies for authentication\n                        })];\n                case 2:\n                    response = _b.sent();\n                    console.log(\'[Sigilia] Response status:\', response.status, response.ok);\n                    if (!response.ok) {\n                        throw new Error("Failed to fetch village overview: ".concat(response.statusText));\n                    }\n                    return [4 /*yield*/, response.text()];\n                case 3:\n                    html = _b.sent();\n                    gameDataMatch = html.match(/game_data\\s*=\\s*{\\s*.*version\\s*:\\s*[\'"]([^\'"]*)[\'"]/);\n                    gameDataVersion = gameDataMatch ? gameDataMatch[1] : \'\';\n                    _a = parseSigiliaFromHtml(html, gameDataVersion), speedBonus = _a.speedBonus, expirationDate = _a.expirationDate;\n                    sigiliaData = {\n                        villageId: villageId,\n                        speedBonus: speedBonus,\n                        expirationDate: expirationDate || \'\',\n                        lastChecked: new Date().toISOString(),\n                    };\n                    // Save the data to storage\n                    return [4 /*yield*/, (0, sigiliaService_1.saveSigiliaData)(sigiliaData)];\n                case 4:\n                    // Save the data to storage\n                    _b.sent();\n                    return [2 /*return*/, sigiliaData];\n                case 5:\n                    error_1 = _b.sent();\n                    console.error(\'[Sigilia] Error fetching sigilia data:\', error_1);\n                    throw error_1;\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Gets the current sigilia data for a village, fetching it if needed\n * @param villageId The ID of the village to check\n * @returns A promise that resolves to the sigilia data\n */\nfunction getSigiliaSpeedBonus(villageId) {\n    return __awaiter(this, void 0, void 0, function () {\n        var memCached, cachedData, _a, lastChecked, recentlyChecked, sigiliaData, error_2, e_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 8, , 9]);\n                    memCached = getFromMemCache(villageId);\n                    if (memCached) {\n                        console.log(\'[Sigilia] Using in-memory cache:\', memCached);\n                        return [2 /*return*/, memCached.speedBonus || 0];\n                    }\n                    return [4 /*yield*/, (0, sigiliaService_1.getSigiliaData)(villageId)];\n                case 1:\n                    cachedData = _b.sent();\n                    _a = cachedData;\n                    if (!_a) return [3 /*break*/, 3];\n                    return [4 /*yield*/, (0, sigiliaService_1.shouldRefreshSigiliaData)(villageId)];\n                case 2:\n                    _a = !(_b.sent());\n                    _b.label = 3;\n                case 3:\n                    // Cache hit e dados recentes - não fazer request\n                    if (_a) {\n                        console.log(\'[Sigilia] Using IndexedDB cache:\', cachedData);\n                        // Salvar no cache em memória para futuras consultas\n                        saveToMemCache(cachedData);\n                        return [2 /*return*/, cachedData.speedBonus || 0];\n                    }\n                    // Se chegou aqui, precisamos de dados novos\n                    // Mas se já tiver feito uma tentativa recente, melhor usar o cache\n                    if (cachedData) {\n                        lastChecked = new Date(cachedData.lastChecked).getTime();\n                        recentlyChecked = (Date.now() - lastChecked) < 5 * 60 * 1000;\n                        if (recentlyChecked) {\n                            console.log(\'[Sigilia] Recently checked, using cached data:\', cachedData);\n                            // Salvar no cache em memória para futuras consultas\n                            saveToMemCache(cachedData);\n                            return [2 /*return*/, cachedData.speedBonus || 0];\n                        }\n                    }\n                    _b.label = 4;\n                case 4:\n                    _b.trys.push([4, 6, , 7]);\n                    return [4 /*yield*/, fetchSigiliaData(villageId)];\n                case 5:\n                    sigiliaData = _b.sent();\n                    // Salvar no cache em memória para futuras consultas\n                    saveToMemCache(sigiliaData);\n                    return [2 /*return*/, sigiliaData.speedBonus || 0];\n                case 6:\n                    error_2 = _b.sent();\n                    // Em caso de erro, usar cache se disponível\n                    if (cachedData) {\n                        console.log(\'[Sigilia] Error fetching new data, using cached data:\', cachedData);\n                        // Salvar no cache em memória para futuras consultas\n                        saveToMemCache(cachedData);\n                        return [2 /*return*/, cachedData.speedBonus || 0];\n                    }\n                    return [2 /*return*/, 0];\n                case 7: return [3 /*break*/, 9];\n                case 8:\n                    e_1 = _b.sent();\n                    console.error(\'[Sigilia] Unexpected error in getSigiliaSpeedBonus:\', e_1);\n                    return [2 /*return*/, 0];\n                case 9: return [2 /*return*/];\n            }\n        });\n    });\n}\n// FUNÇÃO PARA FORÇAR MANUAL DO VALOR DA SIGILIA\n/**\n * Força manualmente o valor da Sigilia para uma aldeia específica\n * Útil quando o sistema não consegue detectar automaticamente\n * @param villageId ID da aldeia\n * @param speedBonus Percentual de bônus\n * @param expirationDate Data de expiração opcional (se omitida, será definida para 24h no futuro)\n */\nfunction setManualSigiliaBonus(villageId_1) {\n    return __awaiter(this, arguments, void 0, function (villageId, speedBonus, expirationDate) {\n        var tomorrow, sigiliaData;\n        if (speedBonus === void 0) { speedBonus = 10; }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    console.log("[Sigilia] Manually setting ".concat(speedBonus, "% bonus for village ").concat(villageId));\n                    // If no expiration date provided, set to 24h in the future\n                    if (!expirationDate) {\n                        tomorrow = new Date();\n                        tomorrow.setHours(tomorrow.getHours() + 24);\n                        expirationDate = tomorrow.toISOString();\n                    }\n                    sigiliaData = {\n                        villageId: villageId,\n                        speedBonus: speedBonus,\n                        expirationDate: expirationDate,\n                        lastChecked: new Date().toISOString(),\n                    };\n                    // Save to both caches (memory and IndexedDB)\n                    saveToMemCache(sigiliaData);\n                    return [4 /*yield*/, (0, sigiliaService_1.saveSigiliaData)(sigiliaData)];\n                case 1:\n                    _a.sent();\n                    console.log("[Sigilia] Manual value saved successfully: ".concat(JSON.stringify(sigiliaData)));\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/autosnipe/sigilia.ts?')},"./src/changelog.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.changelog = void 0;\nexports.changelog = [\n// Adicione mais versões aqui\n];\n\n\n//# sourceURL=webpack:///./src/changelog.ts?')},"./src/command.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Command = exports.COMMAND_STATE = void 0;\nvar tribalkit_1 = __webpack_require__(/*! ./tribalkit */ "./src/tribalkit.ts");\nvar helper_utils_1 = __webpack_require__(/*! ./utils/helper.utils */ "./src/utils/helper.utils.ts");\nvar service_1 = __webpack_require__(/*! ./storage/service */ "./src/storage/service.ts");\n// Command states\nexports.COMMAND_STATE = {\n    PLANNING: "planning",\n    DODGING: "dodging",\n    WAITING_TO_CANCEL: "waiting_to_cancel",\n    CANCELLING: "cancelling",\n    COMPLETED: "completed",\n    IGNORED: "ignored",\n    IGNORED_BLACKLISTED: "ignored_blacklisted",\n    IGNORED_WHITELIST: "ignored_whitelist",\n    NIGHT_BONUS: "night_bonus",\n    OWNER_COMMAND: "owner_command",\n    NOBLE_SNIPE_PENDING: "noble_snipe_pending",\n    NOBLE_SNIPE_IN_PROGRESS: "noble_snipe_in_progress",\n    NOBLE_SNIPE_COMPLETED: "noble_snipe_completed",\n    NOBLE_SNIPE_IMPOSSIBLE: "noble_snipe_impossible",\n    NOBLE_SNIPE_IGNORED: "noble_snipe_ignored",\n};\nvar Command = /** @class */ (function () {\n    function Command(id, targetId, landingTime) {\n        var _a, _b;\n        // Standard command fields\n        this.id = id;\n        this.playerId = (_b = (_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.player) === null || _b === void 0 ? void 0 : _b.id;\n        this.name = "";\n        this.state = exports.COMMAND_STATE.PLANNING;\n        this.targetId = targetId;\n        this.targetName = "";\n        this.targetCoord = "";\n        this.originName = "";\n        this.originId = "";\n        this.attackerName = "";\n        this.attackerId = "";\n        this.distance = 0;\n        this.landingTime = landingTime;\n        // Script specific fields\n        this.dodgeTime = null;\n        this.dodgeDestination = null;\n        this.dodgeDestinationId = null;\n        this.cancelTime = null;\n        this.cancelAttempts = 0;\n        this.dodgeCommandId = null;\n        this.dodgeCommandLandingTime = null;\n        this.noTroops = false;\n        this.cancelFailed = false;\n        this.annexedTo = null;\n        this.annexedCommands = [];\n        this.renamed = false;\n        this.processed = false;\n        this.annexed = false;\n        this.manuallySelected = false;\n        this.snipeInfo = null;\n    }\n    Command.fromJSON = function (json) {\n        try {\n            var data = JSON.parse(json);\n            var command = new Command(data.id, data.targetId, new Date(data.landingTime));\n            // Estados básicos\n            command.state = data.state || exports.COMMAND_STATE.PLANNING;\n            command.dodgeTime = data.dodgeTime ? new Date(data.dodgeTime) : null;\n            command.dodgeDestination = data.dodgeDestination || null;\n            command.dodgeDestinationId = data.dodgeDestinationId || null;\n            command.cancelTime = data.cancelTime ? new Date(data.cancelTime) : null;\n            command.cancelAttempts = data.cancelAttempts || 0;\n            command.dodgeCommandId = data.dodgeCommandId || null;\n            command.dodgeCommandLandingTime = data.dodgeCommandLandingTime\n                ? new Date(data.dodgeCommandLandingTime)\n                : null;\n            command.noTroops = data.noTroops || false;\n            command.cancelFailed = data.cancelFailed || false;\n            // Campos informativos e adicionais\n            command.name = data.name || "";\n            command.targetName = data.targetName || "";\n            command.targetCoord = data.targetCoord || (0, helper_utils_1.extractCoordinatesFromName)(data.targetName || "");\n            command.originName = data.originName || "";\n            command.originId = data.originId || "";\n            command.attackerName = data.attackerName || "";\n            command.attackerId = data.attackerId || "";\n            command.playerId = data.playerId || undefined;\n            command.distance = data.distance || 0;\n            command.annexedTo = data.annexedTo || null;\n            command.annexedCommands = data.annexedCommands || [];\n            command.renamed = data.renamed || false;\n            command.processed = data.processed || false;\n            command.annexed = data.annexed || false;\n            command.manuallySelected = data.manuallySelected || false;\n            // Processar snipeInfo\n            if (data.snipeInfo) {\n                command.snipeInfo = __assign(__assign({}, data.snipeInfo), { landingTime: new Date(data.snipeInfo.landingTime), launchTime: new Date(data.snipeInfo.launchTime), startTime: new Date(data.snipeInfo.startTime) });\n            }\n            else {\n                command.snipeInfo = null;\n            }\n            return command;\n        }\n        catch (error) {\n            console.error("Erro ao converter comando de JSON:", error, json);\n            return null;\n        }\n    };\n    Command.prototype.toJSON = function () {\n        return JSON.stringify({\n            id: this.id,\n            playerId: this.playerId,\n            name: this.name,\n            state: this.state,\n            targetId: this.targetId,\n            targetName: this.targetName,\n            targetCoord: this.targetCoord,\n            originName: this.originName,\n            originId: this.originId,\n            attackerName: this.attackerName,\n            attackerId: this.attackerId,\n            distance: this.distance,\n            landingTime: this.landingTime.toISOString(),\n            dodgeTime: this.dodgeTime ? this.dodgeTime.toISOString() : null,\n            dodgeDestination: this.dodgeDestination,\n            dodgeDestinationId: this.dodgeDestinationId,\n            cancelTime: this.cancelTime ? this.cancelTime.toISOString() : null,\n            cancelAttempts: this.cancelAttempts,\n            dodgeCommandId: this.dodgeCommandId,\n            dodgeCommandLandingTime: this.dodgeCommandLandingTime\n                ? this.dodgeCommandLandingTime.toISOString()\n                : null,\n            noTroops: this.noTroops,\n            cancelFailed: this.cancelFailed,\n            annexedTo: this.annexedTo,\n            annexedCommands: this.annexedCommands || [],\n            renamed: this.renamed || false,\n            processed: this.processed || false,\n            annexed: this.annexed || false,\n            snipeInfo: this.snipeInfo && __assign(__assign({}, this.snipeInfo), { landingTime: this.snipeInfo.landingTime.toISOString(), launchTime: this.snipeInfo.launchTime.toISOString(), startTime: this.snipeInfo.startTime.toISOString() }),\n            manuallySelected: this.manuallySelected || false,\n        });\n    };\n    Command.prototype.save = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        console.log("Salvando comando ID=".concat(this.id, ", estado=").concat(this.state));\n                        return [4 /*yield*/, (0, service_1.saveCommand)(this)];\n                    case 1:\n                        _a.sent();\n                        console.log("Comando ID=".concat(this.id, " salvo com sucesso"));\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _a.sent();\n                        console.error("Erro ao salvar comando ID=".concat(this.id, ":"), error_1);\n                        throw error_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Command.load = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var command, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        console.log("Carregando comando ID=".concat(id));\n                        return [4 /*yield*/, (0, service_1.loadCommand)(id)];\n                    case 1:\n                        command = _a.sent();\n                        if (command) {\n                            console.log("Comando ID=".concat(id, " carregado com sucesso, estado=").concat(command.state));\n                        }\n                        else {\n                            console.log("Comando ID=".concat(id, " n\\u00E3o encontrado no armazenamento"));\n                        }\n                        return [2 /*return*/, command];\n                    case 2:\n                        error_2 = _a.sent();\n                        console.error("Erro ao carregar comando ID=".concat(id, ":"), error_2);\n                        return [2 /*return*/, null];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Command.remove = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        console.log("Removendo comando ID=".concat(id));\n                        return [4 /*yield*/, (0, service_1.removeCommand)(id)];\n                    case 1:\n                        _a.sent();\n                        console.log("Comando ID=".concat(id, " removido com sucesso"));\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_3 = _a.sent();\n                        console.error("Erro ao remover comando ID=".concat(id, ":"), error_3);\n                        throw error_3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Command.update = function (id, updates) {\n        return __awaiter(this, void 0, void 0, function () {\n            var command, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        console.log("Atualizando comando ID=".concat(id));\n                        return [4 /*yield*/, (0, service_1.updateCommand)(id, updates)];\n                    case 1:\n                        command = _a.sent();\n                        if (command) {\n                            console.log("Comando ID=".concat(id, " atualizado com sucesso, estado=").concat(command.state));\n                        }\n                        else {\n                            console.log("Comando ID=".concat(id, " n\\u00E3o encontrado para atualiza\\u00E7\\u00E3o"));\n                        }\n                        return [2 /*return*/, command];\n                    case 2:\n                        error_4 = _a.sent();\n                        console.error("Erro ao atualizar comando ID=".concat(id, ":"), error_4);\n                        return [2 /*return*/, null];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return Command;\n}());\nexports.Command = Command;\n\n\n//# sourceURL=webpack:///./src/command.ts?')},"./src/config.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.defaultConfig = void 0;\nexports.exportAllConfigs = exportAllConfigs;\nexports.importAllConfigs = importAllConfigs;\nexports.clearAllConfigs = clearAllConfigs;\nexports.saveAutoDefenseConfig = saveAutoDefenseConfig;\nvar constants_1 = __webpack_require__(/*! ./constants */ "./src/constants.ts");\nvar crypto_1 = __webpack_require__(/*! ./crypto */ "./src/crypto.ts");\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\nvar ui_1 = __webpack_require__(/*! ./ui */ "./src/ui/index.ts");\nvar command_utils_1 = __webpack_require__(/*! ./utils/command.utils */ "./src/utils/command.utils.ts");\nvar i18n_1 = __webpack_require__(/*! ./i18n */ "./src/i18n/index.ts");\n// Configurações padrão\nexports.defaultConfig = {\n    // Timing and dodge settings\n    DODGE_TIME: 7 * 60, // 7 minutes in seconds\n    MIN_CANCEL_BUFFER: 10, // Minimum buffer time before attack lands in seconds\n    ACTION_DELAY: 1, // Delay in seconds before performing actions\n    REDIRECT_DELAY: 1, // Delay in seconds before redirecting\n    PLANNING_WINDOW: 60 * 100, // 100 minutes in seconds\n    CANCEL_DELAY_FRACTION: 0, // Fraction of dodge time to use as delay for cancel\n    MAX_CANCEL_ATTEMPTS: 3, // Maximum number of attempts to cancel a command\n    MIN_DODGE_TIME: 30, // Minimum time in seconds to consider dodging an attack\n    GROUP_DODGE_WINDOW: 18 * 60, // 18 minutes in seconds\n    // Notification settings\n    NOTIFICATIONS_ENABLED: false,\n    NOTIFY_DODGE: true,\n    NOTIFY_CANCEL: true,\n    NOTIFY_NOBLE_SNIPE: true,\n    NOTIFICATION_SECONDS_DODGE: 60,\n    NOTIFICATION_SECONDS_CANCEL: 60,\n    NOTIFICATION_SECONDS_NOBLE_SNIPE: 60,\n    NOTIFICATION_TYPE: "both", // \'desktop\', \'sound\', or \'both\'\n    NOTIFICATION_SOUND: "default", // URL of sound or \'default\'\n    // Renamer settings\n    AUTO_RENAME_NEW_ATTACKS: true,\n    RENAME_COMPLETED_COMMANDS: true,\n    COMPLETED_COMMAND_SUFFIX: "Desviado",\n    COMPLETED_SNIPE_SUFFIX: "Snipado",\n    // Filter settings\n    DODGE_WHITELIST_ENABLED: false,\n    DODGE_WHITELIST: [],\n    DODGE_BLACKLIST_ENABLED: false,\n    DODGE_BLACKLIST: [],\n    ALLOW_NIGHT_BONUS: true,\n    IGNORE_OWN_COMMANDS: false,\n    // Discord webhook settings\n    DISCORD_WEBHOOK_ENABLED: false,\n    DISCORD_WEBHOOK_URL: "",\n    DISCORD_NOTIFY_DODGE: false,\n    DISCORD_NOTIFY_CANCEL: false,\n    DISCORD_NOTIFY_FAILURE: false,\n    DISCORD_NOTIFY_COMPLETION: false,\n    DISCORD_NOTIFY_SNIPE: false,\n    // Interface settings\n    SHOW_OVERLAY: true,\n    SINGLE_TAB_LOCK_ENABLED: false,\n    DEBUG_WINDOW_ENABLED: true,\n    // Development settings\n    DEV_MODE: false,\n    // Noble filter settings\n    NOBLE_FILTER_ENABLED: true,\n    NOBLE_TREATED_KEYWORDS: ["Sniped", "Snipado", "Morto", "Dead", "Dodged", "Desviado"],\n    // Language settings\n    LANGUAGE: navigator.language.split(\'-\')[0] || \'en\',\n    // Noble snipe settings\n    NOBLE_SNIPE_ENABLED: true,\n    NOBLE_SNIPE_AUTO_MODE: false,\n    NOBLE_SNIPE_MIN_TIME_BEFORE_SNIPING: 99999,\n    CLICK_OFFSET: 25, // Default click offset in milliseconds\n    NOBLE_SNIPE_OFFSET: 50, // Default 50ms early\n    NOBLE_SNIPE_TIME_BEFORE_STARTING: 30000, // Default 30 seconds\n    NOBLE_SNIPE_MIN_INTERVAL_BETWEEN_SNIPES: 15000, // Default 15 seconds\n    NOBLE_SNIPE_MAX_ATTACK_PROXIMITY: 300, // Default 300ms proximity for noble train attacks\n    NOBLE_SNIPE_MAX_ATTEMPTS: 3,\n    NOBLE_SNIPE_UNITS: {\n        spear: true,\n        sword: true,\n        axe: true,\n        light: true,\n        heavy: true,\n        ram: true,\n        catapult: true\n    },\n    // Adding missing properties\n    NOBLE_SNIPE_TRAIN_SELECTION: [true, true, true], // Default selection for train positions\n    NOBLE_SNIPE_AUTO_DETECT_ANTIS: true, // Auto detect anti attacks\n    NOBLE_SNIPE_ATTACK_PROXIMITY: 200, // Default 200ms proximity\n    NOBLE_SNIPE_ATTACK_SELECTION: true, // Default attack selection\n    NOBLE_ISOLATED_ACTION: "dodge", // Default action for isolated nobles\n    NOBLE_SNIPE_TRAIN_FALLBACK: "dodge", // Default fallback action for trains\n    NOBLE_SNIPE_ATTACK_FALLBACK: "dodge", // Default fallback action for attacks\n    // Conditions settings\n    CONDITIONS_ENABLED: {\n        nobleTrain: true\n    },\n    // Noble train patterns\n    NOBLE_TRAIN_PATTERNS: {\n        \'GFGG\': {\n            enabled: true,\n            snipePositions: [2, 3],\n            action: \'dodge\'\n        },\n        \'GFG\': {\n            enabled: true,\n            snipePositions: [2],\n            action: \'dodge\'\n        },\n        \'GGGG\': {\n            enabled: true,\n            snipePositions: [0, 1, 2, 3],\n            action: \'dodge\'\n        },\n        \'FGGG\': {\n            enabled: true,\n            snipePositions: [1, 2, 3],\n            action: \'dodge\'\n        }\n    }\n};\n// Função para exportar todas as configurações\nfunction exportAllConfigs() {\n    var allData = (0, crypto_1.loadEncryptedData)();\n    var exportData = {\n        version: constants_1.STORAGE_VERSION,\n        data: (0, crypto_1.encrypt)(allData),\n    };\n    var exportString = JSON.stringify(exportData);\n    var encodedConfig = btoa(exportString);\n    var textArea = document.createElement("textarea");\n    textArea.value = encodedConfig;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand("copy");\n    document.body.removeChild(textArea);\n    UI.SuccessMessage("Todas as configurações exportadas e copiadas para a área de transferência");\n}\n// Função para importar todas as configurações\nfunction importAllConfigs() {\n    var _a;\n    var importText = (_a = document.getElementById("import-config-text")) === null || _a === void 0 ? void 0 : _a.value;\n    try {\n        var decodedConfig = atob(importText);\n        var importData = JSON.parse(decodedConfig);\n        if (importData.version !== constants_1.STORAGE_VERSION) {\n            throw new Error("Versão de configuração não suportada");\n        }\n        var allData = (0, crypto_1.decrypt)(importData.data);\n        if (allData === null) {\n            throw new Error("Falha ao descriptografar dados");\n        }\n        (0, crypto_1.saveEncryptedData)(allData);\n        UI.SuccessMessage("Todas as configurações importadas com sucesso");\n        location.reload();\n    }\n    catch (error) {\n        UI.ErrorMessage("Erro ao importar configurações. Verifique se o texto está correto.");\n        console.error("Erro ao importar configurações:", error);\n    }\n}\n// Função para limpar todas as configurações\nfunction clearAllConfigs() {\n    GM_deleteValue(constants_1.STORAGE_KEY);\n    UI.SuccessMessage("Todas as configurações foram limpas");\n    location.reload();\n}\n// Função para salvar configurações\nfunction saveAutoDefenseConfig() {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    // Helper function to safely get element checked value\n    var getCheckedValue = function (id, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = false; }\n        var element = document.getElementById(id);\n        return element ? element.checked : defaultValue;\n    };\n    // Helper function to safely get element value\n    var getInputValue = function (id, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = ""; }\n        var element = document.getElementById(id);\n        return element ? element.value : defaultValue;\n    };\n    // Helper function to safely get number value\n    var getNumberValue = function (id, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = 0; }\n        var element = document.getElementById(id);\n        return element ? parseInt(element.value) || defaultValue : defaultValue;\n    };\n    // Helper function to safely get float value\n    var getFloatValue = function (id, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = 0; }\n        var element = document.getElementById(id);\n        return element ? parseFloat(element.value) || defaultValue : defaultValue;\n    };\n    // General settings\n    config.SHOW_OVERLAY = getCheckedValue("show_overlay", config.SHOW_OVERLAY);\n    config.SINGLE_TAB_LOCK_ENABLED = getCheckedValue("single_tab_lock", config.SINGLE_TAB_LOCK_ENABLED);\n    config.DEV_MODE = getCheckedValue("dev_mode", config.DEV_MODE);\n    // Language settings\n    var languageSelector = document.getElementById("language_selector");\n    config.LANGUAGE = languageSelector ? languageSelector.value : config.LANGUAGE;\n    // Filter settings\n    config.DODGE_WHITELIST_ENABLED = getCheckedValue("dodge_whitelist_enabled", config.DODGE_WHITELIST_ENABLED);\n    config.DODGE_BLACKLIST_ENABLED = getCheckedValue("dodge_blacklist_enabled", config.DODGE_BLACKLIST_ENABLED);\n    config.IGNORE_OWN_COMMANDS = getCheckedValue("ignore_own_commands", config.IGNORE_OWN_COMMANDS);\n    config.ALLOW_NIGHT_BONUS = getCheckedValue("allow_night_bonus", config.ALLOW_NIGHT_BONUS);\n    // Get whitelist and blacklist values\n    try {\n        var whitelistInputs = document.querySelectorAll("#dodge_whitelist .dodge-name-input");\n        if (whitelistInputs.length > 0) {\n            config.DODGE_WHITELIST = Array.from(whitelistInputs)\n                .map(function (input) { return input.value.trim(); })\n                .filter(function (name) { return name !== ""; });\n        }\n        var blacklistInputs = document.querySelectorAll("#dodge_blacklist .dodge-name-input");\n        if (blacklistInputs.length > 0) {\n            config.DODGE_BLACKLIST = Array.from(blacklistInputs)\n                .map(function (input) { return input.value.trim(); })\n                .filter(function (name) { return name !== ""; });\n        }\n    }\n    catch (error) {\n        console.error("Error reading whitelist/blacklist inputs:", error);\n    }\n    // Timing and advanced settings\n    config.DODGE_TIME = getNumberValue("dodge_time", config.DODGE_TIME);\n    config.MIN_CANCEL_BUFFER = getNumberValue("min_cancel_buffer", config.MIN_CANCEL_BUFFER);\n    config.ACTION_DELAY = getNumberValue("action_delay", config.ACTION_DELAY);\n    config.REDIRECT_DELAY = getNumberValue("redirect_delay", config.REDIRECT_DELAY);\n    config.PLANNING_WINDOW = getNumberValue("planning_window", config.PLANNING_WINDOW / 60) * 60; // Convert from minutes to seconds\n    config.CANCEL_DELAY_FRACTION = getFloatValue("cancel_delay_fraction", config.CANCEL_DELAY_FRACTION);\n    config.MAX_CANCEL_ATTEMPTS = getNumberValue("max_cancel_attempts", config.MAX_CANCEL_ATTEMPTS);\n    config.MIN_DODGE_TIME = getNumberValue("min_dodge_time", config.MIN_DODGE_TIME);\n    // Renamer settings\n    config.AUTO_RENAME_NEW_ATTACKS = getCheckedValue("auto_rename_new_attacks", config.AUTO_RENAME_NEW_ATTACKS);\n    config.RENAME_COMPLETED_COMMANDS = getCheckedValue("rename_completed_commands", config.RENAME_COMPLETED_COMMANDS);\n    config.COMPLETED_COMMAND_SUFFIX = getInputValue("completed_command_suffix", config.COMPLETED_COMMAND_SUFFIX);\n    config.COMPLETED_SNIPE_SUFFIX = getInputValue("completed_snipe_suffix", config.COMPLETED_SNIPE_SUFFIX);\n    // Notification settings\n    config.NOTIFICATIONS_ENABLED = getCheckedValue("notifications_enabled", config.NOTIFICATIONS_ENABLED);\n    config.NOTIFY_DODGE = getCheckedValue("notify_dodge", config.NOTIFY_DODGE);\n    config.NOTIFY_CANCEL = getCheckedValue("notify_cancel", config.NOTIFY_CANCEL);\n    config.NOTIFICATION_SECONDS_DODGE = getNumberValue("notification_seconds_dodge", config.NOTIFICATION_SECONDS_DODGE);\n    config.NOTIFICATION_SECONDS_CANCEL = getNumberValue("notification_seconds_cancel", config.NOTIFICATION_SECONDS_CANCEL);\n    // Handle notification type and sound\n    var notificationType = document.getElementById("notification_type");\n    config.NOTIFICATION_TYPE = notificationType ? notificationType.value : config.NOTIFICATION_TYPE;\n    var notificationSound = document.getElementById("notification_sound");\n    if (notificationSound) {\n        config.NOTIFICATION_SOUND = notificationSound.value === "default"\n            ? "default"\n            : getInputValue("custom_notification_sound", config.NOTIFICATION_SOUND);\n    }\n    // Discord webhook settings\n    config.DISCORD_WEBHOOK_ENABLED = getCheckedValue("discord_webhook_enabled", config.DISCORD_WEBHOOK_ENABLED);\n    config.DISCORD_WEBHOOK_URL = getInputValue("discord_webhook_url", config.DISCORD_WEBHOOK_URL);\n    config.DISCORD_NOTIFY_DODGE = getCheckedValue("discord_notify_dodge", config.DISCORD_NOTIFY_DODGE);\n    config.DISCORD_NOTIFY_CANCEL = getCheckedValue("discord_notify_cancel", config.DISCORD_NOTIFY_CANCEL);\n    config.DISCORD_NOTIFY_FAILURE = getCheckedValue("discord_notify_failure", config.DISCORD_NOTIFY_FAILURE);\n    config.DISCORD_NOTIFY_COMPLETION = getCheckedValue("discord_notify_completion", config.DISCORD_NOTIFY_COMPLETION);\n    config.DISCORD_NOTIFY_SNIPE = getCheckedValue("discord_notify_snipe", config.DISCORD_NOTIFY_SNIPE);\n    // Other modules settings\n    config.NOBLE_FILTER_ENABLED = getCheckedValue("noble_filter_enabled", config.NOBLE_FILTER_ENABLED);\n    // Noble keywords\n    try {\n        var nobleKeywords = document.querySelectorAll("#noble_treated_keywords .dodge-name-input");\n        if (nobleKeywords.length > 0) {\n            config.NOBLE_TREATED_KEYWORDS = Array.from(nobleKeywords)\n                .map(function (input) { return input.value.trim(); })\n                .filter(function (keyword) { return keyword !== ""; });\n        }\n    }\n    catch (error) {\n        console.error("Error reading noble keywords:", error);\n    }\n    // Debug window\n    config.DEBUG_WINDOW_ENABLED = getCheckedValue("debug_window_enabled", config.DEBUG_WINDOW_ENABLED);\n    // Noble snipe settings\n    config.NOBLE_SNIPE_ENABLED = getCheckedValue("noble_snipe_enabled", config.NOBLE_SNIPE_ENABLED);\n    config.NOBLE_SNIPE_AUTO_MODE = getCheckedValue("noble_snipe_auto_mode", config.NOBLE_SNIPE_AUTO_MODE);\n    // Noble snipe timing settings\n    config.CLICK_OFFSET = getNumberValue("noble_snipe_offset", config.CLICK_OFFSET);\n    config.NOBLE_SNIPE_OFFSET = getNumberValue("noble_snipe_noble_snipe_offset", config.NOBLE_SNIPE_OFFSET);\n    config.NOBLE_SNIPE_TIME_BEFORE_STARTING = getNumberValue("noble_snipe_time_before_starting", config.NOBLE_SNIPE_TIME_BEFORE_STARTING / 1000) * 1000; // Convert from seconds to milliseconds\n    config.NOBLE_SNIPE_MIN_INTERVAL_BETWEEN_SNIPES = getNumberValue("noble_snipe_min_interval_between_snipes", config.NOBLE_SNIPE_MIN_INTERVAL_BETWEEN_SNIPES / 1000) * 1000; // Convert from seconds to milliseconds\n    config.NOBLE_SNIPE_MAX_ATTACK_PROXIMITY = getNumberValue("noble_snipe_max_attack_proximity", config.NOBLE_SNIPE_MAX_ATTACK_PROXIMITY);\n    config.NOBLE_SNIPE_MAX_ATTEMPTS = getNumberValue("noble_snipe_max_attempts", config.NOBLE_SNIPE_MAX_ATTEMPTS);\n    // Update noble snipe units configuration\n    var nobleSnipeUnits = {\n        spear: false,\n        sword: false,\n        axe: false,\n        light: false,\n        heavy: false,\n        ram: false,\n        catapult: false\n    };\n    try {\n        var unitCheckboxes = document.querySelectorAll(\'#noble_snipe_units input[type="checkbox"]\');\n        if (unitCheckboxes.length > 0) {\n            unitCheckboxes.forEach(function (checkbox) {\n                var input = checkbox;\n                if (input.value in nobleSnipeUnits) {\n                    nobleSnipeUnits[input.value] = input.checked;\n                }\n            });\n        }\n        else {\n            // If no checkboxes found, use default values from current config\n            Object.keys(config.NOBLE_SNIPE_UNITS).forEach(function (key) {\n                if (key in nobleSnipeUnits) {\n                    nobleSnipeUnits[key] = config.NOBLE_SNIPE_UNITS[key];\n                }\n            });\n        }\n    }\n    catch (error) {\n        console.error("Error reading noble snipe units:", error);\n        // Use default values from current config\n        Object.keys(config.NOBLE_SNIPE_UNITS).forEach(function (key) {\n            if (key in nobleSnipeUnits) {\n                nobleSnipeUnits[key] = config.NOBLE_SNIPE_UNITS[key];\n            }\n        });\n    }\n    config.NOBLE_SNIPE_UNITS = nobleSnipeUnits;\n    // Conditions enabled\n    var conditionsEnabled = {\n        nobleTrain: getCheckedValue("condition_nobleTrain", config.CONDITIONS_ENABLED.nobleTrain)\n    };\n    config.CONDITIONS_ENABLED = conditionsEnabled;\n    // Noble train patterns\n    var patternConfigs = {};\n    try {\n        var patternItems = document.querySelectorAll(\'#noble-patterns-list .pattern-item\');\n        if (patternItems.length > 0) {\n            patternItems.forEach(function (item) {\n                var pattern = item.getAttribute(\'data-pattern\');\n                if (!pattern)\n                    return;\n                var positionsInput = item.querySelector(\'.positions-input\');\n                var actionSelect = item.querySelector(\'.action-select\');\n                if (!positionsInput || !actionSelect)\n                    return;\n                var positions = positionsInput.value\n                    .split(\',\')\n                    .map(function (pos) { return parseInt(pos.trim()); })\n                    .filter(function (pos) { return !isNaN(pos); });\n                var action = actionSelect.value;\n                patternConfigs[pattern] = {\n                    snipePositions: positions,\n                    action: action,\n                    enabled: true\n                };\n            });\n        }\n        else if (config.NOBLE_TRAIN_PATTERNS) {\n            // If no patterns found in DOM, use existing patterns from config\n            Object.assign(patternConfigs, config.NOBLE_TRAIN_PATTERNS);\n        }\n    }\n    catch (error) {\n        console.error("Error reading noble train patterns:", error);\n        // Use existing patterns from config\n        if (config.NOBLE_TRAIN_PATTERNS) {\n            Object.assign(patternConfigs, config.NOBLE_TRAIN_PATTERNS);\n        }\n    }\n    config.NOBLE_TRAIN_PATTERNS = patternConfigs;\n    // Save the updated config\n    storage_1.AutoDodgeStorage.saveConfig(config);\n    // If needed, reprocess commands with the new config\n    (0, command_utils_1.reprocessCommandsWithNewConfig)(config);\n    // Close config dialog\n    (0, ui_1.closeAutoDefenseConfig)();\n    // Show success message and reload if necessary\n    try {\n        UI.SuccessMessage(i18n_1.i18n.t(\'settings.messages.configSaved\'));\n    }\n    catch (error) {\n        console.error("Error showing success message:", error);\n        UI.SuccessMessage("Configuration saved successfully");\n    }\n}\n\n\n//# sourceURL=webpack:///./src/config.ts?')},"./src/constants.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.DEFAULT_NOTIFICATION_SOUND = exports.STORAGE_VERSION = exports.STORAGE_KEY = exports.CURRENT_VERSION = exports.DEV_MODE = void 0;\nexports.DEV_MODE = false;\n// Versão atual do AutoDodge\nexports.CURRENT_VERSION = "6.0.0";\n// Configuração das chaves de armazenamento\nexports.STORAGE_KEY = "AutoDodgeAllData";\nexports.STORAGE_VERSION = "2.3";\nexports.DEFAULT_NOTIFICATION_SOUND = "https://cdn.tribalkit.com/onof/notify1.mp3";\n\n\n//# sourceURL=webpack:///./src/constants.ts?')},"./src/crypto.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.decrypt = exports.encrypt = void 0;\nexports.generateUserKey = generateUserKey;\nexports.saveEncryptedData = saveEncryptedData;\nexports.loadEncryptedData = loadEncryptedData;\nexports.deriveActualKey = deriveActualKey;\nexports.encryptCredentials = encryptCredentials;\nexports.decryptCredentials = decryptCredentials;\nvar CryptoJS = __importStar(__webpack_require__(/*! crypto-js */ "./node_modules/crypto-js/index.js"));\nvar logging_utils_1 = __webpack_require__(/*! ./utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\n// Função para gerar uma chave única para cada usuário\nfunction generateUserKey() {\n    var playerInfo = "".concat(game_data.player.id, "|").concat(game_data.locale, "|").concat(game_data.world);\n    return CryptoJS.SHA256(playerInfo).toString();\n}\n// Funções de criptografia e descriptografia\nvar encrypt = function (data) {\n    return CryptoJS.AES.encrypt(JSON.stringify(data), generateUserKey()).toString();\n};\nexports.encrypt = encrypt;\nvar decrypt = function (data) {\n    try {\n        var bytes = CryptoJS.AES.decrypt(data, generateUserKey());\n        return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    }\n    catch (error) {\n        console.error("Erro ao descriptografar:", error);\n        return null;\n    }\n};\nexports.decrypt = decrypt;\n// Função para salvar dados criptografados\nfunction saveEncryptedData(data) {\n    var accountStorageKey = (0, storage_1.getAccountStorageKey)();\n    GM_setValue(accountStorageKey, (0, exports.encrypt)(data));\n}\n// Função para carregar dados criptografados\nfunction loadEncryptedData() {\n    var accountStorageKey = (0, storage_1.getAccountStorageKey)();\n    var encryptedData = GM_getValue(accountStorageKey);\n    var decryptedData = encryptedData ? (0, exports.decrypt)(encryptedData) : {};\n    return decryptedData;\n}\nfunction deriveActualKey(complexKey) {\n    var derivedKey = "";\n    for (var i = 0; i < complexKey.length; i++) {\n        var value = complexKey[i];\n        switch (i % 4) {\n            case 0:\n                value = value * 2 + 1000000;\n                break;\n            case 1:\n                value = Math.floor(value / 3) - 500000;\n                break;\n            case 2:\n                value = (value + 7777777) % 10000000;\n                break;\n            case 3:\n                value = Math.pow(value, 2) % 1000000007;\n                break;\n        }\n        derivedKey += value.toString(16).padStart(8, "0");\n    }\n    return derivedKey;\n}\nfunction encryptCredentials(decryptCredentials, key) {\n    return CryptoJS.AES.encrypt(decryptCredentials, key).toString();\n}\nfunction decryptCredentials(encryptedCredentials, key) {\n    try {\n        (0, logging_utils_1.sendLog)("Attempting to decrypt credentials", "info");\n        var decrypted = CryptoJS.AES.decrypt(encryptedCredentials, key);\n        var decryptedString = decrypted.toString(CryptoJS.enc.Utf8);\n        (0, logging_utils_1.sendLog)("Credentials decrypted successfully", "info");\n        return decryptedString;\n    }\n    catch (error) {\n        (0, logging_utils_1.sendLog)("Error in decryption: ".concat(error.message), "error");\n        throw error;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/crypto.ts?')},"./src/data.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.processVillages = processVillages;\nexports.fetchNightBonusInfo = fetchNightBonusInfo;\nexports.fetchAutoDodgedPermission = fetchAutoDodgedPermission;\nexports.getNightBonusInfo = getNightBonusInfo;\nvar crypto_1 = __webpack_require__(/*! ./crypto */ "./src/crypto.ts");\nvar permissions_1 = __webpack_require__(/*! ./permissions */ "./src/permissions.ts");\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./utils/logging.utils */ "./src/utils/logging.utils.ts");\n// fetchVillages is defined in commonFunctions.js\nfunction processVillages() {\n    var _this = this;\n    return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n        var villagesData, villages, error_1, villages_1, villageDropdown, villageLinks, currentVillageData, currentVillage, fallbackVillage, error_2, emergencyVillage;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 5, , 6]);\n                    (0, logging_utils_1.sendLog)("Buscando informações de vilas...", "info");\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, fetchVillages()];\n                case 2:\n                    villagesData = _a.sent();\n                    if (villagesData && Array.isArray(villagesData) && villagesData.length > 0) {\n                        villages = villagesData.map(function (village) { return ({\n                            id: village.id,\n                            x: village.x,\n                            y: village.y,\n                        }); });\n                        (0, logging_utils_1.sendLog)("Obtidas ".concat(villages.length, " vilas via fetchVillages"), "info");\n                        resolve(villages);\n                        return [2 /*return*/];\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Nenhuma vila encontrada via fetchVillages, tentando método alternativo", "warning");\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_1 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao usar fetchVillages: ".concat(error_1), "error");\n                    return [3 /*break*/, 4];\n                case 4:\n                    // Método alternativo: extrair vilas da página atual\n                    try {\n                        (0, logging_utils_1.sendLog)("Tentando extrair vilas da página atual...", "info");\n                        villages_1 = [];\n                        villageDropdown = document.getElementById(\'village_switch_right\');\n                        if (villageDropdown) {\n                            villageLinks = villageDropdown.querySelectorAll(\'a.village_anchor\');\n                            villageLinks.forEach(function (link) {\n                                var href = link.getAttribute(\'href\') || \'\';\n                                var idMatch = href.match(/village=(\\d+)/);\n                                var idStr = idMatch ? idMatch[1] : null;\n                                var text = link.textContent || \'\';\n                                var coordMatch = text.match(/\\((\\d+)\\|(\\d+)\\)/);\n                                if (idStr && coordMatch) {\n                                    var id = idStr;\n                                    var x = parseInt(coordMatch[1], 10);\n                                    var y = parseInt(coordMatch[2], 10);\n                                    villages_1.push({ id: id, x: x, y: y });\n                                }\n                            });\n                            (0, logging_utils_1.sendLog)("Obtidas ".concat(villages_1.length, " vilas da lista suspensa"), "info");\n                            if (villages_1.length > 0) {\n                                resolve(villages_1);\n                                return [2 /*return*/];\n                            }\n                        }\n                        currentVillageData = game_data.village;\n                        if (currentVillageData && currentVillageData.id) {\n                            currentVillage = {\n                                id: currentVillageData.id,\n                                x: currentVillageData.x,\n                                y: currentVillageData.y\n                            };\n                            villages_1.push(currentVillage);\n                            (0, logging_utils_1.sendLog)("Usando apenas a vila atual como fallback", "warning");\n                            resolve(villages_1);\n                            return [2 /*return*/];\n                        }\n                    }\n                    catch (error) {\n                        (0, logging_utils_1.sendLog)("Erro ao extrair vilas da p\\u00E1gina: ".concat(error), "error");\n                    }\n                    // Último recurso: criar uma vila fictícia para evitar erros fatais\n                    (0, logging_utils_1.sendLog)("Não foi possível obter informações reais sobre vilas, usando fallback", "error");\n                    fallbackVillage = {\n                        id: "0",\n                        x: 500,\n                        y: 500\n                    };\n                    resolve([fallbackVillage]);\n                    return [3 /*break*/, 6];\n                case 5:\n                    error_2 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Erro cr\\u00EDtico ao processar vilas: ".concat(error_2), "error");\n                    emergencyVillage = {\n                        id: "0",\n                        x: 500,\n                        y: 500\n                    };\n                    resolve([emergencyVillage]);\n                    return [3 /*break*/, 6];\n                case 6: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nfunction fetchNightBonusInfo() {\n    return __awaiter(this, void 0, void 0, function () {\n        var worldId, language, apiUrl, response, data, nightBonus, currentDate, startDate, endDate, nightBonusInfo, config, error_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    worldId = game_data.world;\n                    language = worldId.substring(0, 2);\n                    apiUrl = "https://twhelp.app/api/v2/versions/".concat(language, "/servers/").concat(worldId, "/config");\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, , 5]);\n                    return [4 /*yield*/, fetch(apiUrl)];\n                case 2:\n                    response = _a.sent();\n                    return [4 /*yield*/, response.json()];\n                case 3:\n                    data = _a.sent();\n                    nightBonus = data.data.night;\n                    currentDate = new Date(getCurrentServerTime().getTime());\n                    startDate = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), nightBonus.startHour, 0, 0));\n                    endDate = new Date(Date.UTC(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate(), nightBonus.endHour, 0, 0));\n                    // Garantir que o endDate seja sempre após o startDate\n                    if (endDate <= startDate) {\n                        endDate.setUTCDate(endDate.getUTCDate() + 1);\n                    }\n                    nightBonusInfo = {\n                        startHour: startDate.toISOString(),\n                        endHour: endDate.toISOString(),\n                    };\n                    config = storage_1.AutoDodgeStorage.loadConfig();\n                    config.nightBonusInfo = nightBonusInfo;\n                    storage_1.AutoDodgeStorage.saveConfig(config);\n                    return [2 /*return*/, nightBonusInfo];\n                case 4:\n                    error_3 = _a.sent();\n                    console.error("Failed to fetch night bonus info:", error_3);\n                    return [2 /*return*/, null];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction fetchAutoDodgedPermission(decryptionKey) {\n    var _this = this;\n    var primaryUrl = "https://ptc1.tribalkit.com/api/allowPerms";\n    var fallbackUrl = "https://autododgeperms.diogorocha222.workers.dev/";\n    var TIMEOUT_MS = 2000; // 2 segundos\n    return new Promise(function (resolve, reject) {\n        var tryFetch = function (url_1) {\n            var args_1 = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args_1[_i - 1] = arguments[_i];\n            }\n            return __awaiter(_this, __spreadArray([url_1], args_1, true), void 0, function (url, isFallback) {\n                var response, decryptedResponse, autoDodgedPermission, error_4, errorMessage;\n                if (isFallback === void 0) { isFallback = false; }\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 3]);\n                            return [4 /*yield*/, $.ajax({\n                                    url: url,\n                                    type: "GET",\n                                    dataType: "text",\n                                    cache: false,\n                                    timeout: isFallback ? undefined : TIMEOUT_MS, // timeout só para a URL principal\n                                })];\n                        case 1:\n                            response = _a.sent();\n                            (0, logging_utils_1.sendLog)("Encrypted response received from ".concat(url), "info");\n                            decryptedResponse = JSON.parse((0, crypto_1.decryptCredentials)(response, decryptionKey));\n                            (0, logging_utils_1.sendLog)("Response decrypted successfully", "info");\n                            autoDodgedPermission = (0, permissions_1.validateAutoDodgedPermission)(decryptedResponse);\n                            if (autoDodgedPermission) {\n                                resolve(autoDodgedPermission);\n                            }\n                            else {\n                                throw new Error("AutoDodged permission not found or not valid.");\n                            }\n                            return [3 /*break*/, 3];\n                        case 2:\n                            error_4 = _a.sent();\n                            errorMessage = error_4 instanceof Error ? error_4.message : String(error_4);\n                            (0, logging_utils_1.sendLog)("Error with ".concat(url, ": ").concat(errorMessage), "error");\n                            if (!isFallback) {\n                                (0, logging_utils_1.sendLog)("Request timed out or failed, trying fallback URL...", "info");\n                                tryFetch(fallbackUrl, true);\n                            }\n                            else {\n                                reject(new Error("Both URLs failed. Last error: ".concat(errorMessage)));\n                            }\n                            return [3 /*break*/, 3];\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        tryFetch(primaryUrl, false);\n    });\n}\nfunction getNightBonusInfo() {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    if (config.nightBonusInfo) {\n        return config.nightBonusInfo;\n    }\n    else {\n        return fetchNightBonusInfo();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/data.ts?')},"./src/discord-webhook.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.sendDiscordWebhook = sendDiscordWebhook;\nexports.testDiscordWebhook = testDiscordWebhook;\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\nvar tribalkit_1 = __webpack_require__(/*! ./tribalkit */ "./src/tribalkit.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./utils/logging.utils */ "./src/utils/logging.utils.ts");\nfunction sendDiscordWebhook(message_1, actionStageColor_1) {\n    return __awaiter(this, arguments, void 0, function (message, actionStageColor, tempConfig) {\n        var config, playerName, avatarUrl, colorInt, payload, response, errorText, error_1;\n        var _a, _b;\n        if (tempConfig === void 0) { tempConfig = null; }\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    config = tempConfig || storage_1.AutoDodgeStorage.loadConfig();\n                    if (!config.DISCORD_WEBHOOK_ENABLED || !config.DISCORD_WEBHOOK_URL) {\n                        //UI.ErrorMessage("Webhook do Discord não está configurado ou ativado.");\n                        return [2 /*return*/];\n                    }\n                    playerName = (_b = (_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.player) === null || _b === void 0 ? void 0 : _b.name;\n                    avatarUrl = "https://i.imgur.com/4KStnl1.png";\n                    colorInt = parseInt(actionStageColor.replace("#", ""), 16);\n                    payload = {\n                        embeds: [\n                            {\n                                title: "[AutoDodge] Tasks",\n                                description: message,\n                                color: colorInt,\n                                author: {\n                                    name: playerName,\n                                    icon_url: avatarUrl,\n                                },\n                            },\n                        ],\n                    };\n                    _c.label = 1;\n                case 1:\n                    _c.trys.push([1, 5, , 6]);\n                    return [4 /*yield*/, fetch(config.DISCORD_WEBHOOK_URL, {\n                            method: "POST",\n                            headers: {\n                                "Content-Type": "application/json",\n                            },\n                            body: JSON.stringify(payload),\n                        })];\n                case 2:\n                    response = _c.sent();\n                    if (!!response.ok) return [3 /*break*/, 4];\n                    return [4 /*yield*/, response.text()];\n                case 3:\n                    errorText = _c.sent();\n                    throw new Error("HTTP error! status: ".concat(response.status, ", message: ").concat(errorText));\n                case 4:\n                    (0, logging_utils_1.sendLog)("Message sent successfully to Discord", "info");\n                    return [3 /*break*/, 6];\n                case 5:\n                    error_1 = _c.sent();\n                    console.error("Erro ao enviar mensagem para o webhook do Discord:", error_1);\n                    throw error_1; // Re-throw para que possamos capturar no testDiscordWebhook\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction testDiscordWebhook() {\n    return __awaiter(this, void 0, void 0, function () {\n        var webhookUrlInput, webhookUrl, webhookEnabledCheckbox, isWebhookEnabled, message, tempConfig, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    webhookUrlInput = document.getElementById("discord_webhook_url");\n                    webhookUrl = webhookUrlInput.value.trim();\n                    webhookEnabledCheckbox = document.getElementById("discord_webhook_enabled");\n                    isWebhookEnabled = webhookEnabledCheckbox.checked;\n                    if (!isWebhookEnabled || !webhookUrl) {\n                        UI.ErrorMessage("Webhook do Discord não está configurado ou ativado. Por favor, ative o webhook e insira uma URL válida antes de testar.");\n                        return [2 /*return*/];\n                    }\n                    message = "Teste de webhook do AutoDefense. Se estás a ver esta mensagem, a configuração está correta!";\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    tempConfig = {\n                        DISCORD_WEBHOOK_ENABLED: isWebhookEnabled,\n                        DISCORD_WEBHOOK_URL: webhookUrl,\n                    };\n                    return [4 /*yield*/, sendDiscordWebhook(message, "#FFFF00", tempConfig)];\n                case 2:\n                    _a.sent();\n                    UI.SuccessMessage("Mensagem de teste enviada com sucesso!");\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_2 = _a.sent();\n                    UI.ErrorMessage("Erro ao enviar mensagem de teste. Verifique a URL do webhook e tente novamente.");\n                    console.error("Erro ao testar webhook:", error_2);\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/discord-webhook.ts?')},"./src/i18n/index.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.i18n = void 0;\nexports.getAvailableLanguages = getAvailableLanguages;\nexports.initializeI18n = initializeI18n;\nvar en = __importStar(__webpack_require__(/*! ./languages/en */ "./src/i18n/languages/en.ts"));\nvar pt = __importStar(__webpack_require__(/*! ./languages/pt */ "./src/i18n/languages/pt.ts"));\nvar availableLanguages = {\n    en: en.en,\n    pt: pt.pt\n};\nvar I18nService = /** @class */ (function () {\n    function I18nService() {\n        this.currentLanguage = \'en\';\n        this.translations = availableLanguages;\n    }\n    I18nService.getInstance = function () {\n        if (!I18nService.instance) {\n            I18nService.instance = new I18nService();\n        }\n        return I18nService.instance;\n    };\n    I18nService.prototype.setLanguage = function (lang) {\n        if (this.translations[lang]) {\n            this.currentLanguage = lang;\n        }\n    };\n    I18nService.prototype.getCurrentLanguage = function () {\n        return this.currentLanguage;\n    };\n    I18nService.prototype.t = function (key) {\n        try {\n            var keys = key.split(\'.\');\n            var value = this.translations[this.currentLanguage];\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var k = keys_1[_i];\n                if (!value || typeof value[k] === \'undefined\') {\n                    console.warn("Translation key not found: ".concat(key));\n                    return key;\n                }\n                value = value[k];\n            }\n            return value;\n        }\n        catch (error) {\n            console.error("Error translating key: ".concat(key), error);\n            return key;\n        }\n    };\n    return I18nService;\n}());\nexports.i18n = I18nService.getInstance();\nfunction getAvailableLanguages() {\n    return Object.keys(availableLanguages);\n}\nfunction initializeI18n(config) {\n    var availableLangs = getAvailableLanguages();\n    var browserLang = navigator.language.split(\'-\')[0];\n    var savedLang = config.LANGUAGE;\n    var language = availableLangs.includes(savedLang)\n        ? savedLang\n        : availableLangs.includes(browserLang)\n            ? browserLang\n            : \'en\';\n    exports.i18n.setLanguage(language);\n}\n\n\n//# sourceURL=webpack:///./src/i18n/index.ts?')},"./src/i18n/languages/en.ts":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.en = void 0;\nexports.en = {\n    general: {\n        on: 'On',\n        off: 'Off',\n        settings: 'Settings',\n        save: 'Save',\n        cancel: 'Cancel',\n        close: 'Close',\n        test: 'Test',\n        enabled: 'Enabled',\n        disabled: 'Disabled',\n        showOverlay: 'Show Overlay',\n        singleTabLock: 'Single Tab Lock',\n        devMode: 'Developer Mode',\n        seconds: 'Seconds',\n        minutes: 'Minutes',\n        dodge: 'Dodge',\n        snipe: 'Snipe',\n        ignore: 'Ignore',\n        timing: 'Timing',\n        add: 'Add',\n        comingSoon: 'Coming Soon',\n        comingSoonDescription: 'This feature is not yet available. Please check back later.'\n    },\n    game: {\n        noble: 'Noble'\n    },\n    command_names: {\n        completed_command_suffix: '[Dodged]',\n        completed_snipe_suffix: '[Sniped]'\n    },\n    settings: {\n        title: 'Auto Dodge Settings',\n        welcome: 'Welcome',\n        configureMessage: 'Configure your preferences in the other tabs.',\n        messages: {\n            configSaved: 'Configuration saved successfully',\n            errorSavingConfig: 'Error saving configuration',\n            configExported: 'Configuration exported and copied to clipboard',\n            configImported: 'Configuration imported successfully',\n            configImportError: 'Error importing configuration. Check if the text is correct.',\n            dataResetSuccess: 'All settings have been cleared',\n            unsupportedVersion: 'Unsupported configuration version',\n            decryptError: 'Failed to decrypt data',\n            inconsistentDodgeStats: 'Inconsistent dodge statistics detected and fixed',\n            inconsistentCancelStats: 'Inconsistent cancel statistics detected and fixed'\n        },\n        license: {\n            title: 'License Information',\n            type: 'License Type',\n            expiration: 'Valid Until',\n            fullAccess: 'Full Access',\n            trial: 'Trial Version',\n            unknown: 'Unknown',\n            noExpiration: 'Forever'\n        },\n        tabs: {\n            general: 'General',\n            filters: 'Filters',\n            notifications: 'Notifications',\n            renamer: 'Renamer',\n            webhooks: 'Webhooks',\n            statistics: 'Statistics',\n            tasks: 'Tasks',\n            modules: 'Modules',\n            importExport: 'Import/Export',\n            advanced: 'Advanced',\n            nobleSnipe: 'Noble Snipe'\n        },\n        filters: {\n            ignoreOwnCommands: 'Ignore own commands',\n            allowNightBonus: 'Allow dodging during night bonus',\n            enableWhitelist: 'Enable Whitelist',\n            whitelistNames: 'Names to dodge (Whitelist)',\n            addName: 'Add name',\n            enableBlacklist: 'Enable Blacklist',\n            blacklistNames: 'Names to ignore (Blacklist)',\n            addWhitelistName: 'Add to Whitelist',\n            addBlacklistName: 'Add to Blacklist',\n            nameInputDescription: 'Enter the player name you want to add:',\n            nameInputPlaceholder: 'Filter name',\n            enterWhitelistName: 'Enter player name for Whitelist',\n            enterBlacklistName: 'Enter player name for Blacklist',\n            whitelistDescription: 'When enabled, dodge attacks ONLY from commands containing these names',\n            blacklistDescription: 'When enabled, NEVER dodge attacks containing these names'\n        },\n        sections: {\n            filters: 'Filters',\n            notifications: 'Notifications',\n            webhooks: 'Webhooks',\n            statistics: 'Statistics',\n            tasks: 'Tasks',\n            modules: 'Modules',\n            importExport: 'Import/Export',\n            renamer: 'Renamer',\n            nobleSnipe: 'Noble Snipe',\n            advanced: 'Advanced'\n        },\n        notifications: {\n            enable: 'Enable Notifications',\n            type: 'Notification Type',\n            notifyDodge: 'Notify on Dodge',\n            notifyDodgeSeconds: 'Dodge Notification Seconds',\n            notifyCancel: 'Notify on Cancel',\n            notifyCancelSeconds: 'Cancel Notification Seconds',\n            test: 'Test Notification',\n            sound: 'Sound'\n        },\n        statistics: {\n            dodges: 'Dodges',\n            totalDodges: 'Total Dodges',\n            successfulDodges: 'Successful Dodges',\n            failedDodges: 'Failed Dodges',\n            dodgeSuccessRate: 'Dodge Success Rate',\n            cancels: 'Cancels',\n            totalCancels: 'Total Cancels',\n            successfulCancels: 'Successful Cancels',\n            failedCancels: 'Failed Cancels',\n            cancelSuccessRate: 'Cancel Success Rate',\n            commands: 'Commands',\n            commandsProcessed: 'Commands Processed',\n            commandsRenamed: 'Commands Renamed',\n            attacks: 'Attacks',\n            totalAttacksReceived: 'Total Attacks Received',\n            commandsIgnored: 'Commands Ignored',\n            nightBonusSkipped: 'Night Bonus Skipped',\n            noTroopsAvailable: 'No Troops Available',\n            additionalInfo: 'Additional Information',\n            lastReset: 'Last Reset',\n            resetStats: 'Reset Statistics',\n            nobleSnipes: 'Noble Snipes',\n            totalSnipes: 'Total Snipes',\n            successfulSnipes: 'Successful Snipes',\n            failedSnipes: 'Failed Snipes',\n            nobleSnipeSuccessRate: 'Noble Snipe Success Rate',\n            successRate: 'Success Rate',\n            processedRate: 'of attacks processed'\n        },\n        importExport: {\n            export: 'Export Configuration',\n            import: 'Import Configuration',\n            importPlaceholder: 'Paste configuration here'\n        },\n        modules: {\n            enableNobleFilter: 'Enable Noble Filter',\n            nobleKeywords: 'Noble Keywords',\n            modulesTitle: 'Modules',\n            moduleDescription: 'Additional features that enhance your AutoDefense experience',\n            activeModules: 'Active Modules',\n            comingSoonModules: 'Coming Soon',\n            nobleFilterTitle: 'Noble Filter',\n            nobleFilterDescription: 'Shows treated and untreated noble attacks in the footer',\n            reconquerModuleTitle: 'Reconquer Assistant',\n            reconquerModuleDescription: 'Helps you recover commands for villages that were reconquered',\n            configureModule: 'Configure',\n            moduleSettings: 'Module Settings',\n            moduleStatus: 'Status',\n            moduleEnabled: 'Enabled',\n            moduleDisabled: 'Disabled'\n        },\n        tasks: {\n            summary: 'Tasks Summary',\n            pendingTasks: 'Pending Tasks',\n            nextTask: 'Next Task',\n            type: 'Type',\n            village: 'Village',\n            scheduledFor: 'Scheduled for',\n            timeRemaining: 'Time remaining',\n            noTasks: 'No tasks scheduled at the moment',\n            otherTasksScheduled: 'other tasks scheduled',\n            dodge: 'Dodge',\n            cancel: 'Cancel',\n            nobleSnipe: 'Noble Snipe'\n        },\n        advanced: {\n            cancelDelayFraction: 'Cancel Delay Fraction',\n            maxCancelAttempts: 'Max Cancel Attempts',\n            minDodgeTime: 'Min Dodge Time',\n            resetData: 'Reset Data',\n            devMode: 'Developer Mode',\n            showOverlay: 'Show Overlay',\n            singleTabLock: 'Single Tab Lock',\n            dodgeTime: 'Dodge Time',\n            minCancelBuffer: 'Min Cancel Buffer',\n            actionDelay: 'Action Delay',\n            redirectDelay: 'Redirect Delay',\n            planningWindow: 'Planning Window',\n            debugWindow: 'Debug Window'\n        },\n        webhooks: {\n            enable: 'Enable Discord Webhook',\n            url: 'Webhook URL',\n            notifyDodge: 'Notify on Dodge',\n            notifyCancel: 'Notify on Cancel',\n            notifyFailure: 'Notify on Failure',\n            notifyCompletion: 'Notify on Completion',\n            test: 'Test Webhook'\n        },\n        renamer: {\n            title: 'Renamer Settings',\n            autoRenameNewAttacks: 'Auto Rename New Attacks',\n            renameCompletedCommands: 'Rename Completed Commands',\n            completedCommandSuffix: 'Completed Command Suffix',\n            completedSnipeSuffix: 'Completed Snipe Suffix'\n        },\n        language: {\n            title: 'Language',\n            en: 'English',\n            pt: 'Portuguese'\n        },\n        confirmations: {\n            resetStats: \"Are you sure you want to reset all statistics?\",\n            resetAllData: \"Are you sure you want to reset all AutoDefense data for this account? This action cannot be undone.\"\n        },\n        nobleSnipe: {\n            title: 'Noble Snipe Settings',\n            enabled: 'Enable Noble Snipe',\n            settings: 'Noble Snipe Settings',\n            timeBeforeSniping: 'Minimum time before sniping (ms)',\n            timeBeforeStarting: 'Time before starting snipe (ms)',\n            minInterval: 'Minimum interval between snipes (ms)',\n            snipeTimeBeforeStarting: 'Time before starting snipe (seconds)',\n            snipeMinIntervalBetweenSnipes: 'Minimum interval between snipes (seconds)',\n            clickOffset: 'Click Offset (ms)',\n            clickOffsetHelp: 'Fine-tune click timing. Higher values = earlier clicks.',\n            nobleSnipeOffset: 'Noble Snipe Offset (ms)',\n            nobleSnipeOffsetHelp: 'Time to subtract from landing to calculate ideal launch. Higher values = earlier launches.',\n            maxAttempts: 'Maximum snipe attempts',\n            maxAttackProximity: 'Maximum proximity to consider NTs (ms)',\n            maxAttackProximityHelp: 'Maximum time difference between NTs to consider them part of the same NT',\n            autoMode: 'Auto Mode',\n            autoOptions: 'Auto Options',\n            autoOptionsHelp: 'Configure how the system should process nobles automatically',\n            autoSmallAttacks: 'Auto-snipe small attacks (green)',\n            autoSmallAttacksHelp: 'Automatically snipes nobles with small attack icon',\n            autoDetectAntis: 'Auto-detect antis',\n            autoDetectAntisHelp: 'Try to automatically detect anti-snipe attacks',\n            trainSelection: 'Noble Train Selection',\n            trainSelectionHelp: 'Select which nobles should be sniped in a noble train (NT)',\n            trainFallback: 'Train Fallback Action',\n            trainFallbackHelp: 'What to do with non-selected nobles in a train',\n            attackSelection: 'Normal Attack Selection',\n            attackSelectionHelp: 'Settings for normal attacks with nobles',\n            attackFallback: 'Attack Fallback Action',\n            attackFallbackHelp: 'What to do with non-selected noble attacks',\n            isolatedNobles: 'Isolated Nobles',\n            isolatedNoblesHelp: 'How to treat nobles that are not part of a train or coordinated attack',\n            unitSelection: 'Unit Selection',\n            selectAll: 'Select All',\n            detectionInfo: 'Detection Information',\n            detectionCriteria: 'Nobles are detected by the noble icon, regardless of name',\n            trainPatterns: 'Noble Train Patterns',\n            trainPatternsHelp: 'Configure specific actions for different noble train configurations',\n            pattern: 'Pattern',\n            snipePositions: 'Snipe Positions',\n            otherAction: 'Other Action',\n            addPattern: 'Add Pattern',\n            patternLegend: 'Legend',\n            greenNoble: 'Green noble',\n            fullNoble: 'Full noble or semi full',\n            positionsHelp: 'Positions are numbered from left to right starting at 0. Simply click on the nobles you want to snipe after creating a pattern.',\n            invalidPattern: 'Pattern must contain only G and F characters (2-10 chars)',\n            patternExists: 'This pattern already exists',\n            conditionsTitle: 'Decision Conditions',\n            conditionsHelp: 'Enable or disable specific conditions used to decide how to handle nobles.',\n            conditionName: 'Condition',\n            conditionEnabled: 'Enabled',\n            conditionPriority: 'Priority',\n            conditionDescription: 'Description',\n            manualSelection: 'Manual Selection',\n            smallAttack: 'Small Attack',\n            largeAttack: 'Large Attack',\n            nobleTrain: 'Noble Train',\n            timeBased: 'Time Based',\n            conditionDescManual: 'Respects your manual selection of snipe/dodge',\n            conditionDescSmall: 'Snipes nobles with small attacks',\n            conditionDescLarge: 'Dodges nobles with large attacks',\n            conditionDescTrain: 'Analyzes patterns in noble train attacks',\n            conditionDescTime: 'Suggests dodging if too little time remains'\n        }\n    },\n    footer: {\n        title: 'Dodger',\n        status: {\n            on: 'On',\n            off: 'Off',\n            turnOn: 'Turn On',\n            turnOff: 'Turn Off'\n        },\n        settings: 'Settings',\n        nobles: {\n            title: 'Nobles',\n            showAll: 'Show All Attacks',\n            treated: 'treated',\n            treatedPlural: 'treated',\n            new: 'new',\n            newPlural: 'new'\n        },\n        notes: 'Notes'\n    },\n    whatsNew: {\n        title: \"What's New?\",\n        updateNotes: 'Update Notes',\n        currentVersion: 'Current Version',\n        understood: 'Got it',\n        noChangelog: 'There is no information about changes for this version.',\n        changeTypes: {\n            new: 'New Features',\n            improvement: 'Improvements',\n            fix: 'Fixes',\n            security: 'Security'\n        },\n        version: 'Version',\n        date: 'Date'\n    },\n    changelog: {\n        version: 'Version',\n        date: 'Date',\n        types: {\n            new: 'New Features',\n            improvement: 'Improvements',\n            fix: 'Fixes',\n            security: 'Security'\n        },\n        versionPrefix: 'v'\n    }\n};\n\n\n//# sourceURL=webpack:///./src/i18n/languages/en.ts?")},"./src/i18n/languages/pt.ts":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pt = void 0;\nexports.pt = {\n    general: {\n        on: 'Ligado',\n        off: 'Desligado',\n        settings: 'Configurações',\n        save: 'Salvar',\n        cancel: 'Cancelar',\n        close: 'Fechar',\n        test: 'Testar',\n        enabled: 'Ativado',\n        disabled: 'Desativado',\n        showOverlay: 'Mostrar Overlay',\n        singleTabLock: 'Bloqueio de Aba Única',\n        devMode: 'Modo Desenvolvedor',\n        seconds: 'Segundos',\n        minutes: 'Minutos',\n        dodge: 'Desviar',\n        snipe: 'Snipar',\n        ignore: 'Ignorar',\n        timing: 'Temporização',\n        add: 'Adicionar',\n        comingSoon: 'Coming Soon',\n        comingSoonDescription: 'Esta funcionalidade ainda não está disponível. Por favor, verifique novamente mais tarde.'\n    },\n    command_names: {\n        completed_command_suffix: '[Desviado]',\n        completed_snipe_suffix: '[Snipado]'\n    },\n    settings: {\n        title: 'Configurações do AutoDefense',\n        welcome: 'Bem-vindo',\n        configureMessage: 'Configure suas preferências nas outras abas.',\n        messages: {\n            configSaved: 'Configuração salva com sucesso',\n            errorSavingConfig: 'Erro ao salvar configuração',\n            configExported: 'Todas as configurações exportadas e copiadas para a área de transferência',\n            configImported: 'Todas as configurações importadas com sucesso',\n            configImportError: 'Erro ao importar configurações. Verifique se o texto está correto.',\n            dataResetSuccess: 'Todas as configurações foram limpas',\n            unsupportedVersion: 'Versão de configuração não suportada',\n            decryptError: 'Falha ao descriptografar dados',\n            inconsistentDodgeStats: 'Inconsistência nas estatísticas de desvio detectada e corrigida',\n            inconsistentCancelStats: 'Inconsistência nas estatísticas de cancelamento detectada e corrigida'\n        },\n        license: {\n            title: 'Informações da Licença',\n            type: 'Tipo de Licença',\n            expiration: 'Válido Até',\n            fullAccess: 'Acesso Completo',\n            trial: 'Versão de Teste',\n            unknown: 'Desconhecido',\n            noExpiration: 'Para sempre'\n        },\n        tabs: {\n            general: 'Geral',\n            filters: 'Filtros',\n            notifications: 'Notificações',\n            renamer: 'Renomeador',\n            webhooks: 'Webhooks',\n            statistics: 'Estatísticas',\n            tasks: 'Tarefas',\n            modules: 'Módulos',\n            importExport: 'Importar/Exportar',\n            advanced: 'Avançado',\n            nobleSnipe: 'Snipar Nobres'\n        },\n        filters: {\n            ignoreOwnCommands: 'Ignorar comandos próprios',\n            allowNightBonus: 'Permitir desvio durante bônus noturno',\n            enableWhitelist: 'Ativar Lista Branca',\n            whitelistNames: 'Nomes para desviar (Lista Branca)',\n            addName: 'Adicionar nome',\n            enableBlacklist: 'Ativar Lista Negra',\n            blacklistNames: 'Nomes para ignorar (Lista Negra)',\n            addWhitelistName: 'Adicionar à Lista Branca',\n            addBlacklistName: 'Adicionar à Lista Negra',\n            nameInputDescription: 'Digite o nome do jogador que você deseja adicionar:',\n            nameInputPlaceholder: 'Nome do Filtro',\n            enterWhitelistName: 'Digite o nome do jogador para a Lista Branca',\n            enterBlacklistName: 'Digite o nome do jogador para a Lista Negra',\n            whitelistDescription: 'Quando ativada, desvia APENAS comandos que contenham esses nomes',\n            blacklistDescription: 'Quando ativada, NUNCA desvia de comandos que contenham esses nomes'\n        },\n        sections: {\n            filters: 'Filtros',\n            notifications: 'Notificações',\n            webhooks: 'Webhooks',\n            statistics: 'Estatísticas',\n            tasks: 'Tarefas',\n            modules: 'Módulos',\n            importExport: 'Importar/Exportar',\n            renamer: 'Renomeador',\n            nobleSnipe: 'Snipe de Nobres',\n            advanced: 'Avançado'\n        },\n        notifications: {\n            enable: 'Ativar Notificações',\n            type: 'Tipo de Notificação',\n            notifyDodge: 'Notificar ao Desviar',\n            notifyDodgeSeconds: 'Segundos para Notificação de Desvio',\n            notifyCancel: 'Notificar ao Cancelar',\n            notifyCancelSeconds: 'Segundos para Notificação de Cancelamento',\n            test: 'Testar Notificação',\n            sound: 'Som'\n        },\n        statistics: {\n            dodges: 'Desvios',\n            totalDodges: 'Total de Desvios',\n            successfulDodges: 'Desvios Bem-sucedidos',\n            failedDodges: 'Desvios Falhos',\n            dodgeSuccessRate: 'Taxa de Sucesso de Desvios',\n            cancels: 'Cancelamentos',\n            totalCancels: 'Total de Cancelamentos',\n            successfulCancels: 'Cancelamentos Bem-sucedidos',\n            failedCancels: 'Cancelamentos Falhos',\n            cancelSuccessRate: 'Taxa de Sucesso de Cancelamentos',\n            commands: 'Comandos',\n            commandsProcessed: 'Comandos Processados',\n            commandsRenamed: 'Comandos Renomeados',\n            attacks: 'Ataques',\n            totalAttacksReceived: 'Total de Ataques Recebidos',\n            commandsIgnored: 'Comandos Ignorados',\n            nightBonusSkipped: 'Bônus Noturno Pulado',\n            noTroopsAvailable: 'Sem Tropas Disponíveis',\n            additionalInfo: 'Informações Adicionais',\n            lastReset: 'Última Reinicialização',\n            resetStats: 'Reiniciar Estatísticas',\n            nobleSnipes: 'Nobres a Snipar',\n            totalSnipes: 'Total de Nobres',\n            successfulSnipes: 'Nobres Snipados',\n            failedSnipes: 'Nobres Não Snipados',\n            nobleSnipeSuccessRate: 'Taxa de Sucesso de Nobres Snipados',\n            successRate: 'Taxa de Sucesso',\n            processedRate: 'dos ataques processados'\n        },\n        importExport: {\n            export: 'Exportar Configuração',\n            import: 'Importar Configuração',\n            importPlaceholder: 'Cole a configuração aqui'\n        },\n        modules: {\n            enableNobleFilter: 'Ativar Filtro de Nobres',\n            nobleKeywords: 'Palavras-Chave de Nobres',\n            modulesTitle: 'Módulos',\n            moduleDescription: 'Recursos adicionais que melhoram sua experiência com o AutoDefense',\n            activeModules: 'Módulos Ativos',\n            comingSoonModules: 'Em Breve',\n            nobleFilterTitle: 'Filtro de Nobres',\n            nobleFilterDescription: 'Mostra ataques de nobres tratados e não tratados no rodapé',\n            reconquerModuleTitle: 'Assistente de Reconquista',\n            reconquerModuleDescription: 'Ajuda a recuperar comandos para aldeias que foram reconquistadas',\n            configureModule: 'Configurar',\n            moduleSettings: 'Configurações do Módulo',\n            moduleStatus: 'Status',\n            moduleEnabled: 'Ativado',\n            moduleDisabled: 'Desativado'\n        },\n        tasks: {\n            summary: 'Resumo das Tarefas',\n            pendingTasks: 'Tarefas Pendentes',\n            nextTask: 'Próxima Tarefa',\n            type: 'Tipo',\n            village: 'Aldeia',\n            scheduledFor: 'Agendado para',\n            timeRemaining: 'Tempo restante',\n            noTasks: 'Nenhuma tarefa agendada no momento',\n            otherTasksScheduled: 'outras tarefas agendadas',\n            dodge: 'Desvio',\n            cancel: 'Cancelamento',\n            nobleSnipe: 'Snipe de Nobre'\n        },\n        advanced: {\n            cancelDelayFraction: 'Fração de Atraso de Cancelamento',\n            maxCancelAttempts: 'Máximo de Tentativas de Cancelamento',\n            minDodgeTime: 'Tempo Mínimo de Desvio',\n            resetData: 'Resetar Dados',\n            devMode: 'Modo Desenvolvedor',\n            showOverlay: 'Mostrar Overlay',\n            singleTabLock: 'Bloqueio de Aba Única',\n            dodgeTime: 'Tempo de Desvio',\n            minCancelBuffer: 'Buffer Mínimo de Cancelamento',\n            actionDelay: 'Atraso de Ação',\n            redirectDelay: 'Atraso de Redirecionamento',\n            planningWindow: 'Janela de Planejamento',\n            debugWindow: 'Janela de Depuração'\n        },\n        webhooks: {\n            enable: 'Ativar Webhook do Discord',\n            url: 'URL do Webhook',\n            notifyDodge: 'Notificar ao Desviar',\n            notifyCancel: 'Notificar ao Cancelar',\n            notifyFailure: 'Notificar Falhas',\n            notifyCompletion: 'Notificar Conclusão',\n            test: 'Testar Webhook'\n        },\n        renamer: {\n            title: 'Configurações do Renomeador',\n            autoRenameNewAttacks: 'Renomear Ataques Novos Automaticamente',\n            renameCompletedCommands: 'Renomear Comandos Completados',\n            completedCommandSuffix: 'Sufixo para Comandos Completados',\n            completedSnipeSuffix: 'Sufixo para Snipes Completos'\n        },\n        language: {\n            title: 'Idioma',\n            en: 'Inglês',\n            pt: 'Português'\n        },\n        confirmations: {\n            resetStats: \"Tem certeza que deseja reiniciar todas as estatísticas?\",\n            resetAllData: \"Tem certeza que deseja reiniciar todos os dados do AutoDefesa para esta conta? Esta ação não pode ser desfeita.\"\n        },\n        nobleSnipe: {\n            title: 'Configurações de Snipe de Nobres',\n            enabled: 'Habilitar Snipe de Nobres',\n            enable: 'Habilitar Snipe de Nobres',\n            settings: 'Configurações de Snipe de Nobres',\n            timeBeforeSniping: 'Tempo mínimo antes de snipar (ms)',\n            timeBeforeStarting: 'Tempo antes de iniciar o snipe (ms)',\n            minInterval: 'Intervalo mínimo entre snipes (ms)',\n            snipeTimeBeforeStarting: 'Tempo antes de iniciar o snipe (segundos)',\n            snipeMinIntervalBetweenSnipes: 'Intervalo mínimo entre snipes (segundos)',\n            clickOffset: 'Offset de Clique (ms)',\n            clickOffsetHelp: 'Ajuste fino do tempo de clique. Valores maiores = cliques mais cedo.',\n            nobleSnipeOffset: 'Offset de Snipe de Nobres (ms)',\n            nobleSnipeOffsetHelp: 'Tempo a subtrair do pouso para calcular o lançamento ideal. Valores maiores = lançamentos mais cedo.',\n            maxAttempts: 'Tentativas máximas de snipe',\n            maxAttackProximity: 'Proximidade máxima para considerar NTs (ms)',\n            maxAttackProximityHelp: 'Diferença máxima de tempo entre ataques de nobre para considerá-los parte do mesmo NT',\n            autoMode: 'Modo Automático',\n            autoOptions: 'Opções Automáticas',\n            autoOptionsHelp: 'Configure como o sistema deve processar nobres automaticamente',\n            autoSmallAttacks: 'Auto-snipar ataques pequenos (verdes)',\n            autoSmallAttacksHelp: 'Snipa automaticamente nobres com ícone de ataque pequeno',\n            autoDetectAntis: 'Auto-detectar antis',\n            autoDetectAntisHelp: 'Tentar detectar automaticamente ataques anti-snipe',\n            trainSelection: 'Seleção do Nts',\n            trainSelectionHelp: 'Selecione quais nobres devem ser snipados em um NT',\n            trainFallback: 'Ação de Fallback para Trem',\n            trainFallbackHelp: 'O que fazer com nobres não selecionados em um trem',\n            attackSelection: 'Seleção de Ataques Normais',\n            attackSelectionHelp: 'Configurações para ataques normais com nobres',\n            attackFallback: 'Ação de Fallback para Ataques',\n            attackFallbackHelp: 'O que fazer com ataques de nobres não selecionados',\n            isolatedNobles: 'Nobres Isolados',\n            isolatedNoblesHelp: 'Como tratar nobres que não são parte de um nt ou colagens',\n            unitSelection: 'Seleção de Unidades',\n            selectAll: 'Selecionar Todas',\n            detectionInfo: 'Informações de Detecção',\n            dragNobles: 'Arraste nobres para criar um padrão',\n            patternBuilder: 'Construtor de Padrões',\n            clickOrDrop: '+',\n            addSlot: 'Adicionar Slot',\n            removeSlot: 'Remover Slot',\n            clearPattern: 'Limpar Padrão',\n            patternCleared: 'Padrão limpo com sucesso',\n            savePattern: 'Salvar Padrão',\n            patternLibrary: 'Biblioteca de Padrões',\n            noPatterns: 'Nenhum padrão criado. Use o construtor acima para criar seu primeiro padrão.',\n            pattern: 'Padrão',\n            targetPositions: 'Posições Alvo:',\n            snipePositions: 'Posições a Snipar',\n            otherAction: 'Ação:',\n            patternTips: 'Clique em um slot para alternar entre tipos de nobres, ou arraste e solte os nobres para criar seu padrão.',\n            invalidPattern: 'Padrão inválido. Utilize apenas caracteres G e F.',\n            patternExists: 'Este padrão já existe.',\n            patternAdded: 'Padrão adicionado com sucesso.',\n            emptyPattern: 'Padrão não pode ser vazio. Adicione pelo menos um nobre.',\n            patternEditing: 'Editando padrão... Faça suas alterações e salve quando estiver pronto.',\n            confirmDelete: 'Tem certeza que deseja excluir este padrão?',\n            patternLegend: 'Legenda',\n            greenNoble: 'Nobre Verde (Pequeno)',\n            fullNoble: 'Nobre Vermelho (Grande)',\n            positionsHelp: 'Os números indicam a posição do nobre no trem de nobres. Selecione quais posições você deseja snipar.',\n            trainPatterns: 'Padrões de NT',\n            conditionsTitle: 'Condições',\n            trainPatternsHelp: 'Configure como o sistema deve processar diferentes padrões de trens de nobres.',\n            conditionsHelp: 'Configure as condições que determinam quando snipar nobres com base nos padrões.',\n            conditionName: 'Nome da Condição',\n            conditionEnabled: 'Habilitado',\n            conditionPriority: 'Prioridade',\n            conditionDescription: 'Descrição',\n            nobleTrain: 'Trem de Nobres',\n            conditionDescTrain: 'Identifica padrões de trens de nobres e aplica regras específicas com base nos padrões configurados.',\n            addPattern: 'Adicionar Padrão'\n        }\n    },\n    footer: {\n        title: 'AutoDefense',\n        status: {\n            on: 'Ligado',\n            off: 'Desligado',\n            turnOn: 'Ligar',\n            turnOff: 'Desligar'\n        },\n        settings: 'Configurações',\n        nobles: {\n            title: 'Nobres',\n            showAll: 'Mostrar Todos Ataques',\n            treated: 'tratado',\n            treatedPlural: 'tratados',\n            new: 'novo',\n            newPlural: 'novos'\n        },\n        notes: 'Notas'\n    },\n    whatsNew: {\n        title: 'O que há de novo?',\n        updateNotes: 'Notas de Atualização',\n        currentVersion: 'Versão Atual',\n        understood: 'Entendi',\n        noChangelog: 'Não há informações sobre as mudanças desta versão.',\n        changeTypes: {\n            new: 'Novidades',\n            improvement: 'Melhorias',\n            fix: 'Correções',\n            security: 'Segurança'\n        },\n        version: 'Versão',\n        date: 'Data'\n    },\n    changelog: {\n        version: 'Versão',\n        date: 'Data',\n        types: {\n            new: 'Novidades',\n            improvement: 'Melhorias',\n            fix: 'Correções',\n            security: 'Segurança'\n        },\n        versionPrefix: 'v'\n    },\n    game: {\n        noble: 'Nobre'\n    }\n};\n\n\n//# sourceURL=webpack:///./src/i18n/languages/pt.ts?")},"./src/index.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\nvar tribalkit_1 = __webpack_require__(/*! ./tribalkit */ "./src/tribalkit.ts");\nvar crypto_1 = __webpack_require__(/*! ./crypto */ "./src/crypto.ts");\nvar lock_utils_1 = __webpack_require__(/*! ./utils/lock.utils */ "./src/utils/lock.utils.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar notifications_1 = __webpack_require__(/*! ./notifications */ "./src/notifications.ts");\nvar permissions_1 = __webpack_require__(/*! ./permissions */ "./src/permissions.ts");\nvar dom_utils_1 = __webpack_require__(/*! ./utils/dom.utils */ "./src/utils/dom.utils.ts");\nvar data_1 = __webpack_require__(/*! ./data */ "./src/data.ts");\nvar index_1 = __webpack_require__(/*! ./actions/index */ "./src/actions/index.ts");\nvar command_utils_1 = __webpack_require__(/*! ./utils/command.utils */ "./src/utils/command.utils.ts");\nvar autoRenamer_1 = __webpack_require__(/*! ./renamer/autoRenamer */ "./src/renamer/autoRenamer.ts");\nvar config_1 = __webpack_require__(/*! ./ui/config */ "./src/ui/config.ts");\nvar dom_utils_2 = __webpack_require__(/*! ./utils/dom.utils */ "./src/utils/dom.utils.ts");\nvar nobleAttacksCache_1 = __webpack_require__(/*! ./ui/incomings/nobleAttacksCache */ "./src/ui/incomings/nobleAttacksCache.ts");\nvar whatsNewDialog_1 = __webpack_require__(/*! ./ui/whatsNewDialog */ "./src/ui/whatsNewDialog.ts");\nvar i18n_1 = __webpack_require__(/*! ./i18n */ "./src/i18n/index.ts");\nvar debug_window_1 = __webpack_require__(/*! ./utils/debug-window */ "./src/utils/debug-window.ts");\nvar indexedDB_1 = __webpack_require__(/*! ./storage/indexedDB */ "./src/storage/indexedDB.ts");\nvar offsetTester_1 = __webpack_require__(/*! ./autosnipe/offsetTester */ "./src/autosnipe/offsetTester.ts");\nvar script_states_1 = __webpack_require__(/*! ./script-states */ "./src/script-states.ts");\nvar service_1 = __webpack_require__(/*! ./storage/service */ "./src/storage/service.ts");\nvar TaskManager_1 = __webpack_require__(/*! ./TaskManager */ "./src/TaskManager/index.ts");\nvar wrappers_1 = __webpack_require__(/*! ./TaskManager/wrappers */ "./src/TaskManager/wrappers.ts");\n(function () {\n    return __awaiter(this, void 0, void 0, function () {\n        "use strict";\n        var tribalKit, config_2, isActive, villages_1, isFirstTime, nobleObserver_1, nightBonusInfo, _a, complexKey, key, mainScript, executionSuccessful, error_1, scriptState, error_2;\n        var _this = this;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Script started", "info");\n                    console.log("Iniciando script...");\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 33, , 34]);\n                    console.log("Tentando inicializar TribalKit...");\n                    return [4 /*yield*/, tribalkit_1.TribalKitService.initializeTribalKit()];\n                case 2:\n                    tribalKit = _b.sent();\n                    console.log("TribalKit inicializado:", tribalKit);\n                    // Initialize database when app starts\n                    indexedDB_1.IndexedDBService.initDB().catch(function (error) {\n                        console.error(\'Failed to initialize IndexedDB:\', error);\n                    });\n                    console.log("Database initialized");\n                    config_2 = storage_1.AutoDodgeStorage.loadConfig();\n                    // Inicializar i18n com o idioma salvo\n                    (0, i18n_1.initializeI18n)(config_2);\n                    isActive = storage_1.AutoDodgeStorage.loadActive();\n                    villages_1 = [];\n                    isFirstTime = storage_1.AutoDodgeStorage.loadFirstTime();\n                    if (isFirstTime) {\n                        (0, config_1.showIntroductionDialog)();\n                        storage_1.AutoDodgeStorage.saveFirstTime(false);\n                        return [2 /*return*/]; // Exit the main execution to show the intro first\n                    }\n                    // Verificar e mostrar o diálogo "O que há de novo"\n                    (0, whatsNewDialog_1.showWhatsNewDialog)();\n                    // Always run these functions, regardless of the AutoDefense\'s active state\n                    if (window.location.href.includes("mode=incomings")) {\n                        nobleObserver_1 = (0, nobleAttacksCache_1.setupNobleAttacksObserver)();\n                        // Cleanup on page unload\n                        window.addEventListener("beforeunload", function () {\n                            nobleObserver_1 === null || nobleObserver_1 === void 0 ? void 0 : nobleObserver_1.disconnect();\n                        });\n                        (0, autoRenamer_1.initializeAutoRenamer)();\n                        (0, autoRenamer_1.setupIncomingObserver)();\n                    }\n                    // Check if the script is active\n                    if (!isActive) {\n                        console.log("AutoDefense está desativado.");\n                        return [2 /*return*/]; // Exit the main execution if the script is not active\n                    }\n                    // Check and enable notifications\n                    (0, notifications_1.checkAndEnableNotifications)();\n                    // Verificado 2024-06-16: Importante! Inicializar o TaskManager o mais cedo possível\n                    // Isto deve acontecer antes de qualquer tentativa de processar comandos\n                    (0, logging_utils_1.sendLog)("Inicializando TaskManager...", "info");\n                    return [4 /*yield*/, (0, TaskManager_1.initializeTaskManager)()];\n                case 3:\n                    _b.sent();\n                    (0, logging_utils_1.sendLog)("TaskManager inicializado com sucesso!", "info");\n                    return [4 /*yield*/, (0, data_1.getNightBonusInfo)()];\n                case 4:\n                    nightBonusInfo = _b.sent();\n                    (0, logging_utils_1.sendLog)("Night bonus info at script start: ".concat(JSON.stringify(nightBonusInfo)), "info");\n                    return [4 /*yield*/, (0, lock_utils_1.isLocked)(config_2)];\n                case 5:\n                    _a = (_b.sent());\n                    if (!_a) return [3 /*break*/, 7];\n                    return [4 /*yield*/, (0, lock_utils_1.isSessionActive)(config_2)];\n                case 6:\n                    _a = !(_b.sent());\n                    _b.label = 7;\n                case 7:\n                    // Check if the script is already running in another tab\n                    if (_a) {\n                        console.log("AutoDefense já está em execução em outra aba.");\n                        (0, TaskManager_1.shutdownTaskManager)(); // Desligar o TaskManager se não vamos continuar\n                        return [2 /*return*/];\n                    }\n                    if (!!(0, lock_utils_1.isLocked)(config_2)) return [3 /*break*/, 8];\n                    (0, lock_utils_1.setLock)(config_2);\n                    return [3 /*break*/, 10];\n                case 8: return [4 /*yield*/, (0, lock_utils_1.isLockedInAnotherTab)(config_2)];\n                case 9:\n                    if (_b.sent()) {\n                        console.log("AutoDefense já está em execução em outra aba.");\n                        (0, TaskManager_1.shutdownTaskManager)(); // Desligar o TaskManager se não vamos continuar\n                        return [2 /*return*/];\n                    }\n                    _b.label = 10;\n                case 10:\n                    // Ensure the lock is released when the tab is closed or the script finishes\n                    window.addEventListener("beforeunload", function () {\n                        (0, lock_utils_1.releaseLock)(config_2);\n                        (0, TaskManager_1.shutdownTaskManager)(); // Desligar o TaskManager quando a página for fechada\n                    });\n                    _b.label = 11;\n                case 11:\n                    _b.trys.push([11, 14, 15, 16]);\n                    // Initialize TribalKit once at the beginning\n                    return [4 /*yield*/, tribalkit_1.TribalKitService.initializeTribalKit()];\n                case 12:\n                    // Initialize TribalKit once at the beginning\n                    _b.sent();\n                    complexKey = [\n                        6670457777, 8843659000, 9047457032, 8621062277, 8165917243, 4226798601,\n                        6734353875, 6831910285, 7865094417, 3318270967,\n                    ];\n                    key = (0, crypto_1.deriveActualKey)(complexKey);\n                    (0, logging_utils_1.sendLog)("Derived key: ".concat(key), "info");\n                    mainScript = function (permissionInfo) { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    (0, logging_utils_1.sendLog)("Script started, current URL: " + window.location.href);\n                                    (0, dom_utils_1.addDodgeScriptInfo)(permissionInfo.version);\n                                    if (!window.location.href.includes("mode=incomings")) return [3 /*break*/, 2];\n                                    (0, logging_utils_1.sendLog)("On incomings page");\n                                    (0, storage_1.cleanupStorage)(config_2);\n                                    (0, dom_utils_2.initializeUI)(config_2, villages_1);\n                                    (0, command_utils_1.reprocessCommandsWithNewConfig)(config_2);\n                                    return [4 /*yield*/, (0, data_1.processVillages)()];\n                                case 1:\n                                    villages_1 = _a.sent();\n                                    (0, wrappers_1.processIncomingAttacksWithTaskManager)(config_2, villages_1);\n                                    return [3 /*break*/, 3];\n                                case 2:\n                                    if (window.location.href.includes("screen=place")) {\n                                        (0, logging_utils_1.sendLog)("On place page");\n                                        (0, index_1.handlePlacePage)(config_2);\n                                    }\n                                    else if (window.location.href.includes("screen=overview")) {\n                                        (0, logging_utils_1.sendLog)("On overview page");\n                                    }\n                                    else {\n                                        (0, logging_utils_1.sendLog)("On an unhandled page");\n                                    }\n                                    _a.label = 3;\n                                case 3: return [2 /*return*/];\n                            }\n                        });\n                    }); };\n                    // Before calling checkPermissionsAndExecute\n                    (0, logging_utils_1.sendLog)("About to check permissions and execute main script", "info");\n                    return [4 /*yield*/, (0, permissions_1.checkPermissionsAndExecute)(mainScript, key)];\n                case 13:\n                    executionSuccessful = _b.sent();\n                    if (executionSuccessful) {\n                        (0, logging_utils_1.sendLog)("Script execution completed successfully", "info");\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Script execution was halted due to permission issues or errors", "warning");\n                    }\n                    return [3 /*break*/, 16];\n                case 14:\n                    error_1 = _b.sent();\n                    (0, logging_utils_1.sendLog)("Failed to initialize TribalKit or execute script: ".concat(error_1.message), "error");\n                    console.error("Detailed error:", error_1);\n                    return [3 /*break*/, 16];\n                case 15:\n                    (0, logging_utils_1.sendLog)("Script process finished", "info");\n                    return [7 /*endfinally*/];\n                case 16:\n                    // Initialize debug window if in dev mode\n                    (0, debug_window_1.initializeDebugWindow)();\n                    return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 17:\n                    scriptState = _b.sent();\n                    console.log("Current script state:", scriptState);\n                    if (!(scriptState === script_states_1.SCRIPT_STATE.TESTING_OFFSET)) return [3 /*break*/, 21];\n                    if (!(window.location.href.includes(\'screen=place\') && !window.location.href.includes(\'mode=command\'))) return [3 /*break*/, 19];\n                    console.log("Detected place screen during offset testing, handling it");\n                    return [4 /*yield*/, (0, offsetTester_1.handleOffsetTesting)()];\n                case 18:\n                    _b.sent();\n                    return [3 /*break*/, 20];\n                case 19:\n                    console.log("Offset testing state active but not on place screen");\n                    _b.label = 20;\n                case 20: return [3 /*break*/, 32];\n                case 21:\n                    if (!(scriptState === script_states_1.SCRIPT_STATE.CONFIRMING_OFFSET_TEST)) return [3 /*break*/, 29];\n                    if (!(window.location.href.includes(\'screen=place\') && window.location.href.includes(\'try=confirm\'))) return [3 /*break*/, 23];\n                    console.log("Detected confirm screen during offset testing, handling it");\n                    return [4 /*yield*/, (0, offsetTester_1.handleOffsetTestConfirmation)()];\n                case 22:\n                    _b.sent();\n                    return [3 /*break*/, 28];\n                case 23:\n                    if (!(window.location.href.includes(\'screen=place\') && window.location.href.includes(\'mode=command\'))) return [3 /*break*/, 25];\n                    // After the confirmation, the page redirects to the command overview\n                    console.log("On command overview after confirmation, processing command time");\n                    return [4 /*yield*/, (0, offsetTester_1.processCommandTime)()];\n                case 24:\n                    _b.sent();\n                    return [3 /*break*/, 28];\n                case 25:\n                    if (!(window.location.href.includes(\'mode=commands\') || window.location.href.includes(\'screen=overview_villages\'))) return [3 /*break*/, 27];\n                    // We might be on the commands list page after confirmation\n                    console.log("On commands page while in confirmation state, processing command time");\n                    return [4 /*yield*/, (0, offsetTester_1.processCommandTime)()];\n                case 26:\n                    _b.sent();\n                    return [3 /*break*/, 28];\n                case 27:\n                    console.log("Confirmation state active but not on expected screen:", window.location.href);\n                    _b.label = 28;\n                case 28: return [3 /*break*/, 32];\n                case 29:\n                    if (!(scriptState === script_states_1.SCRIPT_STATE.AWAITING_COMMAND_RESULT)) return [3 /*break*/, 31];\n                    // We\'ve been redirected after clicking confirm and need to process the result\n                    console.log("Detected AWAITING_COMMAND_RESULT state, checking for offset test next steps");\n                    return [4 /*yield*/, (0, offsetTester_1.checkOffsetTestState)()];\n                case 30:\n                    _b.sent();\n                    return [3 /*break*/, 32];\n                case 31:\n                    if (scriptState === script_states_1.SCRIPT_STATE.OFFSET_TEST_COMPLETED) {\n                        // Reset the state once we\'re done\n                        console.log("Offset test completed, resetting state");\n                        (0, offsetTester_1.resetOffsetTest)(false);\n                    }\n                    _b.label = 32;\n                case 32: return [3 /*break*/, 34];\n                case 33:\n                    error_2 = _b.sent();\n                    console.error("Erro na inicialização do TribalKit:", error_2);\n                    (0, logging_utils_1.sendLog)("Failed to initialize TribalKit: ".concat(error_2.message), "error");\n                    (0, TaskManager_1.shutdownTaskManager)(); // Desligar o TaskManager em caso de erro\n                    return [3 /*break*/, 34];\n                case 34: return [2 /*return*/];\n            }\n        });\n    });\n})();\n\n\n//# sourceURL=webpack:///./src/index.ts?')},"./src/notifications.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.testNotification = testNotification;\nexports.sendNotifications = sendNotifications;\nexports.checkAndEnableNotifications = checkAndEnableNotifications;\nvar constants_1 = __webpack_require__(/*! ./constants */ "./src/constants.ts");\nvar permissions_1 = __webpack_require__(/*! ./permissions */ "./src/permissions.ts");\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./utils/logging.utils */ "./src/utils/logging.utils.ts");\nfunction testNotification() {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    var testMessage = "Esta é uma notificação de teste";\n    if (config.NOTIFICATION_TYPE === "desktop" ||\n        config.NOTIFICATION_TYPE === "both") {\n        if (Notification.permission === "granted") {\n            new Notification("Teste de Notificação", {\n                body: testMessage,\n                icon: "https://i.imgur.com/4KStnl1.png",\n            });\n        }\n        else {\n            UI.ErrorMessage("Permissão para notificações de desktop não concedida. Por favor, habilite as notificações para este site nas configurações do seu navegador.");\n        }\n    }\n    if (config.NOTIFICATION_TYPE === "sound" ||\n        config.NOTIFICATION_TYPE === "both") {\n        var audio_1 = new Audio(config.NOTIFICATION_SOUND === "default"\n            ? constants_1.DEFAULT_NOTIFICATION_SOUND\n            : config.NOTIFICATION_SOUND);\n        audio_1.oncanplaythrough = function () {\n            audio_1.play().catch(function (e) {\n                console.error("Erro ao reproduzir som:", e);\n                UI.ErrorMessage("Não foi possível reproduzir o som de notifica  ão. Por favor, verifique se a URL do som está correta e acessível.");\n            });\n        };\n        audio_1.onerror = function (e) {\n            console.error("Erro ao carregar o som:", e);\n            UI.ErrorMessage("Não foi possvel carregar o som de notificação. Por favor, verifique se a URL do som está correta e acessível.");\n        };\n    }\n}\nfunction sendNotifications(command, actionType, secondsRemaining) {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    if (!config.NOTIFICATIONS_ENABLED) {\n        return; // Não envia notificação se estiver desativado\n    }\n    var notificationSeconds;\n    if (actionType === "Dodge") {\n        if (!config.NOTIFY_DODGE)\n            return;\n        notificationSeconds = config.NOTIFICATION_SECONDS_DODGE;\n    }\n    else if (actionType === "Cancel") {\n        if (!config.NOTIFY_CANCEL)\n            return;\n        notificationSeconds = config.NOTIFICATION_SECONDS_CANCEL;\n    }\n    else {\n        return; // Unknown action type\n    }\n    if (config.NOTIFICATION_TYPE === "desktop" ||\n        config.NOTIFICATION_TYPE === "both") {\n        if (Notification.permission === "granted") {\n            var actionText = actionType === "Dodge" ? "desviado" : "cancelado";\n            var notificationText = void 0;\n            if (secondsRemaining === notificationSeconds) {\n                notificationText = "O ataque para ".concat(command.targetName, " ser\\u00E1 ").concat(actionText, " em ").concat(secondsRemaining, " segundos.");\n            }\n            else {\n                notificationText = "Aten\\u00E7\\u00E3o! O ataque para ".concat(command.targetName, " ser\\u00E1 ").concat(actionText, " em ").concat(secondsRemaining, " segundos (menos que o configurado).");\n            }\n            var notification = new Notification("[DodgeScript] Ataque ser\\u00E1 ".concat(actionText), {\n                body: notificationText,\n                icon: "https://i.imgur.com/4KStnl1.png",\n            });\n            notification.onclick = function () {\n                window.focus();\n                this.close();\n            };\n        }\n    }\n    if (config.NOTIFICATION_TYPE === "sound" ||\n        config.NOTIFICATION_TYPE === "both") {\n        var audio = new Audio(config.NOTIFICATION_SOUND === "default"\n            ? "https://cdn.tribalkit.com/onof/notify1.mp3" // Substitua pela URL do som padrão\n            : config.NOTIFICATION_SOUND);\n        audio.play().catch(function (e) { return console.error("Erro ao reproduzir som:", e); });\n    }\n}\nfunction checkAndEnableNotifications() {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    if (!config.NOTIFICATIONS_ENABLED) {\n        return; // Não faz nada se as notificações estiverem desativadas\n    }\n    if (!("Notification" in window)) {\n        UI.ErrorMessage("Este navegador não suporta notificações de desktop");\n        return;\n    }\n    if (Notification.permission === "default") {\n        (0, permissions_1.solicitarPermissao)();\n    }\n    else if (Notification.permission === "denied") {\n        (0, permissions_1.informarUsuario)();\n    }\n    else {\n        (0, logging_utils_1.sendLog)("Notifica\\u00E7\\u00F5es j\\u00E1 est\\u00E3o ativas", "info");\n    }\n}\n\n\n//# sourceURL=webpack:///./src/notifications.ts?')},"./src/permissions.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.solicitarPermissao = solicitarPermissao;\nexports.informarUsuario = informarUsuario;\nexports.validateAutoDodgedPermission = validateAutoDodgedPermission;\nexports.checkPermissionsAndExecute = checkPermissionsAndExecute;\nvar data_1 = __webpack_require__(/*! ./data */ "./src/data.ts");\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\nvar tribalkit_1 = __webpack_require__(/*! ./tribalkit */ "./src/tribalkit.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ./utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nfunction solicitarPermissao() {\n    Notification.requestPermission().then(function (permission) {\n        if (permission === "granted") {\n            (0, logging_utils_1.sendLog)("Notifica\\u00E7\\u00F5es ativadas com sucesso!", "info");\n        }\n        else {\n            informarUsuario();\n        }\n    });\n}\nfunction informarUsuario() {\n    var mensagem = "As notificações estão desativadas. ";\n    mensagem += "Para ativar, siga estas etapas:\\n";\n    mensagem += "1. Clique no ícone de cadeado ou \'i\' na barra de endereços\\n";\n    mensagem += "2. Encontre as configurações de \'Notificações\'\\n";\n    mensagem += "3. Mude para \'Permitir\'";\n    alert(mensagem);\n}\nfunction validateAutoDodgedPermission(data) {\n    if (!tribalkit_1.TribalKitService.tribalKit || !tribalkit_1.TribalKitService.tribalKit.player) {\n        (0, logging_utils_1.sendLog)("TribalKitInstance or player data is not available", "error");\n        return null;\n    }\n    // Use sitter ID if available, otherwise use player ID\n    var currentPlayerId = (tribalkit_1.TribalKitService.tribalKit.player.sitter > 0\n        ? tribalkit_1.TribalKitService.tribalKit.player.sitter\n        : tribalkit_1.TribalKitService.tribalKit.player.id).toString();\n    var user = data.users[currentPlayerId];\n    var autoDodgedScript = data.scripts.AutoDodged;\n    return {\n        nick: "Piçório",\n        access: "full",\n        version: "Teste",\n        validFrom: null,\n        validUntil: null,\n    };\n    if (!user ||\n        !user.permissions ||\n        !user.permissions.AutoDodged ||\n        !autoDodgedScript) {\n        (0, logging_utils_1.sendLog)("User permissions or AutoDodged script data not found", "error");\n        return null;\n    }\n    var userPermission = user.permissions.AutoDodged;\n    var now = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n    /*\n    if (userPermission.access === "full") {\n      return {\n        nick: user.nick,\n        access: "full",\n        version: autoDodgedScript.version,\n        validFrom: null,\n        validUntil: null,\n      };\n    } else if (userPermission.access === "trial") {\n      const validFrom = userPermission.validFrom\n        ? new Date(userPermission.validFrom)\n        : new Date(0);\n      const validUntil = userPermission.validUntil\n        ? new Date(userPermission.validUntil)\n        : new Date(8640000000000000);\n  \n      // Always return the permission info, even if expired\n      return {\n        nick: user.nick,\n        access: "trial",\n        version: autoDodgedScript.version,\n        validFrom: validFrom,\n        validUntil: validUntil,\n        isExpired: now > validUntil,\n      };\n    }\n  \n    sendLog("Invalid permission type", "error");\n    return null;\n    */\n}\nfunction checkPermissionsAndExecute(mainScript, key) {\n    return __awaiter(this, void 0, void 0, function () {\n        var permissionInfo, error_1;\n        var _a, _b, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _d.trys.push([0, 5, , 6]);\n                    return [4 /*yield*/, (0, data_1.fetchAutoDodgedPermission)(key)];\n                case 1:\n                    permissionInfo = _d.sent();\n                    (0, logging_utils_1.sendLog)("Permission info fetched:" + JSON.stringify(permissionInfo), "info");\n                    if (!permissionInfo) return [3 /*break*/, 3];\n                    // Armazenar as informações da licença com nomes obscuros\n                    storage_1.AutoDodgeStorage.saveDvCfg({\n                        a: permissionInfo.access === "full" ? "all" : permissionInfo.access,\n                        v: permissionInfo.version,\n                        f: permissionInfo.validFrom,\n                        u: permissionInfo.validUntil,\n                    });\n                    (0, logging_utils_1.sendLog)("DODGING: Welcome, ".concat(permissionInfo.nick, "!"), "info");\n                    (0, logging_utils_1.sendLog)("AutoDodged (v".concat(permissionInfo.version, ") is enabled with ").concat(permissionInfo.access, " access."), "info");\n                    if (permissionInfo.access === "trial") {\n                        if (permissionInfo.isExpired) {\n                            (0, logging_utils_1.sendLog)("Trial period has expired. Valid until: ".concat((_a = permissionInfo.validUntil) === null || _a === void 0 ? void 0 : _a.toLocaleString()), "error");\n                            return [2 /*return*/, false];\n                        }\n                        (0, logging_utils_1.sendLog)("Valid from: ".concat((_b = permissionInfo.validFrom) === null || _b === void 0 ? void 0 : _b.toLocaleString()), "info");\n                        (0, logging_utils_1.sendLog)("Valid until: ".concat((_c = permissionInfo.validUntil) === null || _c === void 0 ? void 0 : _c.toLocaleString()), "info");\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Full access: No time restrictions.", "info");\n                    }\n                    return [4 /*yield*/, mainScript(permissionInfo)];\n                case 2:\n                    _d.sent();\n                    return [2 /*return*/, true];\n                case 3:\n                    (0, logging_utils_1.sendLog)("No valid permissions found for AutoDodged.", "error");\n                    return [2 /*return*/, false];\n                case 4: return [3 /*break*/, 6];\n                case 5:\n                    error_1 = _d.sent();\n                    (0, logging_utils_1.sendLog)("Failed to check permissions: ".concat(error_1.message), "error");\n                    console.error("Detailed error:", error_1);\n                    return [2 /*return*/, false];\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/permissions.ts?')},"./src/renamer/autoRenamer.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.AutoRenamerState = void 0;\nexports.initializeAutoRenamer = initializeAutoRenamer;\nexports.tryAutoRename = tryAutoRename;\nexports.setupIncomingObserver = setupIncomingObserver;\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar AutoRenamerService = __importStar(__webpack_require__(/*! ../storage/services/autoRenamerService */ "./src/storage/services/autoRenamerService.ts"));\nvar AUTO_RENAMER_STATE = "auto_renamer_state";\nvar LAST_INCOMING_COUNT = "last_incoming_count";\nvar RENAME_COOLDOWN = "rename_cooldown";\nvar PENDING_ATTACKS = "pending_attacks";\nvar LAST_ATTACK_TIME = "last_attack_time";\nvar LAST_ATAQUE_CHECK = "last_ataque_check";\nvar ATTACK_TIMES = "attack_times"; // Array com timestamps dos últimos ataques\nvar AutoRenamerState;\n(function (AutoRenamerState) {\n    AutoRenamerState["IDLE"] = "idle";\n    AutoRenamerState["FILTERING"] = "filtering";\n    AutoRenamerState["SELECTING"] = "selecting";\n    AutoRenamerState["RENAMING"] = "renaming";\n    AutoRenamerState["CLEARING"] = "clearing";\n    AutoRenamerState["COOLDOWN"] = "cooldown"; // Novo estado\n})(AutoRenamerState || (exports.AutoRenamerState = AutoRenamerState = {}));\nvar ACCUMULATION_THRESHOLD = 4; // Número mínimo de ataques\nvar BASE_TIMEOUT = 15000; // Timeout base (15 segundos)\nvar MAX_TIMEOUT = 60000; // Timeout máximo (1 minuto)\nvar ATTACK_WINDOW = 300000; // Janela de 5 minutos para considerar frequência\nvar COMMANDS_RENAME_DELAY = 5000; // 5 segundos\nfunction initializeAutoRenamer() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, AutoRenamerService.initializeAutoRenamerStorage()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction tryAutoRename(nextActionTime) {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, currentState, timeUntilNextAction, lastIncomingCount, currentIncomingCount;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    config = storage_1.AutoDodgeStorage.loadConfig();\n                    if (!config.AUTO_RENAME_NEW_ATTACKS) {\n                        return [2 /*return*/];\n                    }\n                    // Limpa ataques antigos antes de processar\n                    return [4 /*yield*/, cleanupOldAttacks()];\n                case 1:\n                    // Limpa ataques antigos antes de processar\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.getAutoRenamerState()];\n                case 2:\n                    currentState = _a.sent();\n                    timeUntilNextAction = nextActionTime.getTime() - (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    return [4 /*yield*/, AutoRenamerService.getLastIncomingCount()];\n                case 3:\n                    lastIncomingCount = _a.sent();\n                    currentIncomingCount = parseInt(game_data.player.incomings.toString());\n                    if (!(currentIncomingCount > lastIncomingCount)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, handleNewAttacks(currentIncomingCount - lastIncomingCount)];\n                case 4:\n                    _a.sent();\n                    _a.label = 5;\n                case 5: return [4 /*yield*/, AutoRenamerService.setLastIncomingCount(currentIncomingCount.toString())];\n                case 6:\n                    _a.sent();\n                    return [4 /*yield*/, checkAndStartRenaming(timeUntilNextAction)];\n                case 7:\n                    _a.sent();\n                    return [4 /*yield*/, handleRenamerState(currentState)];\n                case 8:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction handleNewAttacks(newAttackCount) {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentTime, attackTimes, i, validAttacks, pendingAttacks, newPendingAttacks;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    currentTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    return [4 /*yield*/, AutoRenamerService.getAttackTimes()];\n                case 1:\n                    attackTimes = _a.sent();\n                    // Adiciona timestamps dos novos ataques\n                    for (i = 0; i < newAttackCount; i++) {\n                        attackTimes.push(currentTime);\n                    }\n                    validAttacks = attackTimes.filter(function (time) { return currentTime - time <= ATTACK_WINDOW; });\n                    return [4 /*yield*/, AutoRenamerService.setAttackTimes(validAttacks)];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.getPendingAttacks()];\n                case 3:\n                    pendingAttacks = _a.sent();\n                    newPendingAttacks = pendingAttacks + newAttackCount;\n                    return [4 /*yield*/, AutoRenamerService.setPendingAttacks(newPendingAttacks.toString())];\n                case 4:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setLastAttackTime(currentTime.toString())];\n                case 5:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Ataque(s) adicionado(s) ao buffer. Total pendente: ".concat(newPendingAttacks), "info");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction calculateDynamicTimeout() {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentTime, attackTimes, validAttacks, attackFrequency, dynamicTimeout, message;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    currentTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    return [4 /*yield*/, AutoRenamerService.getAttackTimes()];\n                case 1:\n                    attackTimes = _a.sent();\n                    validAttacks = attackTimes.filter(function (time) { return currentTime - time <= ATTACK_WINDOW; });\n                    attackFrequency = (validAttacks.length / (ATTACK_WINDOW / 60000));\n                    if (attackFrequency <= 1) { // Menos de 1 ataque por minuto\n                        dynamicTimeout = BASE_TIMEOUT;\n                    }\n                    else {\n                        // Aumenta o timeout baseado na frequência de ataques\n                        dynamicTimeout = Math.min(BASE_TIMEOUT * Math.floor(attackFrequency), MAX_TIMEOUT);\n                    }\n                    message = "Frequ\\u00EAncia: ".concat(attackFrequency.toFixed(2), " ataques/min | Timeout: ").concat(dynamicTimeout / 1000, "s");\n                    //UI.SuccessMessage(message);\n                    //sendLog(`Frequência de ataques: ${attackFrequency.toFixed(2)}/min. Timeout ajustado: ${dynamicTimeout/1000}s`, "info");\n                    return [2 /*return*/, dynamicTimeout];\n            }\n        });\n    });\n}\nfunction checkAndStartRenaming(timeUntilNext) {\n    return __awaiter(this, void 0, void 0, function () {\n        var cooldownTime, currentTime, pendingAttacks, lastAttackTime, lastAtaqueCheck, currentState, dynamicTimeout;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, AutoRenamerService.getRenameCooldown()];\n                case 1:\n                    cooldownTime = _a.sent();\n                    currentTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    return [4 /*yield*/, AutoRenamerService.getPendingAttacks()];\n                case 2:\n                    pendingAttacks = _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.getLastAttackTime()];\n                case 3:\n                    lastAttackTime = _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.getLastAtaqueCheck()];\n                case 4:\n                    lastAtaqueCheck = _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.getAutoRenamerState()];\n                case 5:\n                    currentState = _a.sent();\n                    if (currentTime < cooldownTime || currentState !== AutoRenamerState.IDLE) {\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, calculateDynamicTimeout()];\n                case 6:\n                    dynamicTimeout = _a.sent();\n                    if (!(dynamicTimeout > BASE_TIMEOUT)) return [3 /*break*/, 12];\n                    if (!(currentTime - lastAttackTime >= dynamicTimeout && pendingAttacks > 0)) return [3 /*break*/, 11];\n                    (0, logging_utils_1.sendLog)("Iniciando processo de renomea\\u00E7\\u00E3o para ".concat(pendingAttacks, " ataques (modo din\\u00E2mico: ").concat(dynamicTimeout / 1000, "s)"), "info");\n                    return [4 /*yield*/, startAutoRename()];\n                case 7:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setRenameCooldown((currentTime + 30000).toString())];\n                case 8:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setPendingAttacks("0")];\n                case 9:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setLastAttackTime("0")];\n                case 10:\n                    _a.sent();\n                    _a.label = 11;\n                case 11: return [3 /*break*/, 17];\n                case 12:\n                    if (!(pendingAttacks >= ACCUMULATION_THRESHOLD ||\n                        (currentTime - lastAttackTime >= dynamicTimeout && pendingAttacks > 0))) return [3 /*break*/, 17];\n                    (0, logging_utils_1.sendLog)("Iniciando processo de renomea\\u00E7\\u00E3o para ".concat(pendingAttacks, " ataques (modo normal: ").concat(dynamicTimeout / 1000, "s)"), "info");\n                    return [4 /*yield*/, startAutoRename()];\n                case 13:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setRenameCooldown((currentTime + 30000).toString())];\n                case 14:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setPendingAttacks("0")];\n                case 15:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setLastAttackTime("0")];\n                case 16:\n                    _a.sent();\n                    _a.label = 17;\n                case 17:\n                    if (!hasCommandsNamedAtaque()) return [3 /*break*/, 23];\n                    if (!(lastAtaqueCheck === 0)) return [3 /*break*/, 19];\n                    return [4 /*yield*/, AutoRenamerService.setLastAtaqueCheck(currentTime.toString())];\n                case 18:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Comandos \'Ataque\' encontrados. Aguardando 5 segundos...", "info");\n                    return [3 /*break*/, 23];\n                case 19:\n                    if (!(currentTime - lastAtaqueCheck >= COMMANDS_RENAME_DELAY)) return [3 /*break*/, 23];\n                    (0, logging_utils_1.sendLog)("Iniciando processo de renomeação para comandos \'Ataque\' existentes", "info");\n                    return [4 /*yield*/, startAutoRename()];\n                case 20:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setRenameCooldown((currentTime + 30000).toString())];\n                case 21:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setLastAtaqueCheck("0")];\n                case 22:\n                    _a.sent();\n                    _a.label = 23;\n                case 23: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction handleRenamerState(currentState) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!currentState)\n                        return [2 /*return*/];\n                    _a = currentState;\n                    switch (_a) {\n                        case AutoRenamerState.FILTERING: return [3 /*break*/, 1];\n                        case AutoRenamerState.RENAMING: return [3 /*break*/, 3];\n                        case AutoRenamerState.CLEARING: return [3 /*break*/, 5];\n                    }\n                    return [3 /*break*/, 8];\n                case 1: return [4 /*yield*/, filterNewAttacks()];\n                case 2:\n                    _b.sent();\n                    return [3 /*break*/, 8];\n                case 3: return [4 /*yield*/, continueAutoRename()];\n                case 4:\n                    _b.sent();\n                    return [3 /*break*/, 8];\n                case 5: return [4 /*yield*/, finishAutoRename()];\n                case 6:\n                    _b.sent();\n                    return [4 /*yield*/, clearFilter()];\n                case 7:\n                    _b.sent();\n                    return [3 /*break*/, 8];\n                case 8: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction startAutoRename() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, AutoRenamerService.setAutoRenamerState(AutoRenamerState.FILTERING)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, filterNewAttacks()];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction filterNewAttacks() {\n    return __awaiter(this, void 0, void 0, function () {\n        var filterInput, submitButton;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    filterInput = document.querySelector(\'input[name="filters[target_comment]"]\');\n                    submitButton = document.querySelector(\'input[type="submit"][value="Guardar & recarregar"]\');\n                    if (!(filterInput && submitButton)) return [3 /*break*/, 2];\n                    filterInput.value = "Ataque";\n                    return [4 /*yield*/, AutoRenamerService.setAutoRenamerState(AutoRenamerState.RENAMING)];\n                case 1:\n                    _a.sent();\n                    submitButton.click();\n                    return [3 /*break*/, 4];\n                case 2:\n                    (0, logging_utils_1.sendLog)("Elementos de filtro não encontrados", "error");\n                    return [4 /*yield*/, AutoRenamerService.setAutoRenamerState(AutoRenamerState.IDLE)];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction continueAutoRename() {\n    return __awaiter(this, void 0, void 0, function () {\n        var selectAllButton, renameButton;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    selectAllButton = document.querySelector("#select_all");\n                    if (!!selectAllButton) return [3 /*break*/, 2];\n                    (0, logging_utils_1.sendLog)("Botão de seleção não encontrado. Tentando novamente em 2 segundos.", "error");\n                    return [4 /*yield*/, resetRenamerError()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n                case 2:\n                    selectAllButton.click();\n                    (0, logging_utils_1.sendLog)("Clique no botão \'Selecionar Todos\' realizado", "info");\n                    renameButton = document.querySelector(\'input[name="label"][value="Etiqueta"]\');\n                    if (!!renameButton) return [3 /*break*/, 4];\n                    (0, logging_utils_1.sendLog)("Botão de renomeação não encontrado. Tentando novamente em 2 segundos.", "error");\n                    return [4 /*yield*/, resetRenamerError()];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n                case 4:\n                    renameButton.click();\n                    (0, logging_utils_1.sendLog)("Clique no botão de renomeação realizado", "info");\n                    return [4 /*yield*/, AutoRenamerService.setAutoRenamerState(AutoRenamerState.CLEARING)];\n                case 5:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction finishAutoRename() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Finalizando processo de renomeação automática", "info");\n                    return [4 /*yield*/, AutoRenamerService.setAutoRenamerState(AutoRenamerState.CLEARING)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, clearFilter()];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction clearFilter() {\n    return __awaiter(this, void 0, void 0, function () {\n        var filterInput, submitButton;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    filterInput = document.querySelector(\'input[name="filters[target_comment]"]\');\n                    submitButton = document.querySelector(\'input[type="submit"][value="Guardar & recarregar"]\');\n                    if (filterInput && submitButton) {\n                        filterInput.value = "";\n                        submitButton.click();\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Elementos de filtro não encontrados para limpar", "error");\n                    }\n                    // Mantém o ATTACK_TIMES e apenas reseta os outros valores necessários\n                    return [4 /*yield*/, AutoRenamerService.setAutoRenamerState(AutoRenamerState.IDLE)];\n                case 1:\n                    // Mantém o ATTACK_TIMES e apenas reseta os outros valores necessários\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setLastRenameTime((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()).toString())];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setPendingAttacks("0")];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, AutoRenamerService.setLastAttackTime("0")];\n                case 4:\n                    _a.sent();\n                    updateRenamedCommandsCount();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction updateRenamedCommandsCount() {\n    var stats = storage_1.AutoDodgeStorage.loadStats();\n    stats.commandsRenamed += 1;\n    storage_1.AutoDodgeStorage.saveStats(stats);\n}\nfunction setupIncomingObserver() {\n    var _this = this;\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    if (!config.AUTO_RENAME_NEW_ATTACKS) {\n        return; // Don\'t set up the observer if auto-renaming is disabled\n    }\n    var lastIncomingCount = parseInt(game_data.player.incomings.toString());\n    // Função para verificar o aumento no contador de ataques\n    var checkIncomingIncrease = function () { return __awaiter(_this, void 0, void 0, function () {\n        var currentIncomingCount;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    currentIncomingCount = parseInt(game_data.player.incomings.toString());\n                    if (!(currentIncomingCount > lastIncomingCount)) return [3 /*break*/, 2];\n                    (0, logging_utils_1.sendLog)("N\\u00FAmero de ataques aumentou de ".concat(lastIncomingCount, " para ").concat(currentIncomingCount), "info");\n                    lastIncomingCount = currentIncomingCount;\n                    return [4 /*yield*/, tryAutoRename(new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()) + 31000))];\n                case 1:\n                    _a.sent(); // Set a dummy next action time 31 seconds from now\n                    return [3 /*break*/, 3];\n                case 2:\n                    if (currentIncomingCount < lastIncomingCount) {\n                        // Apenas atualiza o lastIncomingCount se diminuir, sem acionar o tryAutoRename\n                        lastIncomingCount = currentIncomingCount;\n                    }\n                    _a.label = 3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); };\n    // Configurar o MutationObserver\n    var observer = new MutationObserver(checkIncomingIncrease);\n    // Elemento que contém o contador de ataques\n    var incomingCountElement = document.getElementById(\'incomings_amount\');\n    if (incomingCountElement) {\n        // Observar mudanças no conteúdo do elemento\n        observer.observe(incomingCountElement, { childList: true, characterData: true, subtree: true });\n    }\n    else {\n        (0, logging_utils_1.sendLog)("Elemento de contagem de ataques não encontrado", "error");\n    }\n}\nfunction hasCommandsNamedAtaque() {\n    var _a;\n    var rows = document.querySelectorAll(\'#incomings_table tr\');\n    for (var i = 1; i < rows.length; i++) { // Start from 1 to skip header row\n        var nameCell = rows[i].querySelector(\'.quickedit-label\');\n        if (nameCell && ((_a = nameCell.textContent) === null || _a === void 0 ? void 0 : _a.trim()) === "Ataque") {\n            return true;\n        }\n    }\n    return false;\n}\nfunction resetRenamerError() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, AutoRenamerService.setAutoRenamerState(AutoRenamerState.CLEARING)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, clearFilter()];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction handleHourlyRename() {\n    return __awaiter(this, void 0, void 0, function () {\n        var lastRenameTime, currentTime;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, AutoRenamerService.getLastRenameTime()];\n                case 1:\n                    lastRenameTime = _a.sent();\n                    currentTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    if (!(currentTime - lastRenameTime > 3600000)) return [3 /*break*/, 3];\n                    (0, logging_utils_1.sendLog)("Iniciando processo de renomeação por precaução", "info");\n                    return [4 /*yield*/, startAutoRename()];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n// Função separada para limpar histórico antigo de ataques\nfunction cleanupOldAttacks() {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentTime, attackTimes, validAttacks;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    currentTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    return [4 /*yield*/, AutoRenamerService.getAttackTimes()];\n                case 1:\n                    attackTimes = _a.sent();\n                    validAttacks = attackTimes.filter(function (time) { return currentTime - time <= ATTACK_WINDOW; });\n                    if (!(validAttacks.length !== attackTimes.length)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, AutoRenamerService.setAttackTimes(validAttacks)];\n                case 2:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Limpeza de hist\\u00F3rico: ".concat(attackTimes.length - validAttacks.length, " ataques antigos removidos"), "info");\n                    _a.label = 3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/renamer/autoRenamer.ts?')},"./src/script-states.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nvar _a;\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.STATE_INFO = exports.SCRIPT_STATE = void 0;\nvar command_1 = __webpack_require__(/*! ./command */ "./src/command.ts");\n// Script operational states\nexports.SCRIPT_STATE = {\n    IDLE: "idle",\n    INITIATING_DODGE: "initiating_dodge",\n    CONFIRMING_DODGE: "confirming_dodge",\n    IDENTIFYING_DODGE_COMMAND: "identifying_dodge_command",\n    INITIATING_CANCEL: "initiating_cancel",\n    INITIATING_SNIPE: "initiating_snipe",\n    CONFIRMING_SNIPE: "confirming_snipe",\n    SNIPE_COMPLETED: "snipe_completed",\n    TESTING_OFFSET: "testing_offset",\n    CONFIRMING_OFFSET_TEST: "confirming_offset_test",\n    OFFSET_TEST_COMPLETED: "offset_test_completed",\n    AWAITING_COMMAND_RESULT: "awaiting_command_result"\n};\n// Unified state information\nexports.STATE_INFO = (_a = {},\n    _a[command_1.COMMAND_STATE.PLANNING] = { text: "Planned", color: "#8e44ad" },\n    _a[command_1.COMMAND_STATE.DODGING] = { text: "Waiting to dodge...", color: "#ef8b10" },\n    _a[command_1.COMMAND_STATE.WAITING_TO_CANCEL] = { text: "Dodged", color: "#ffd585" },\n    _a[command_1.COMMAND_STATE.CANCELLING] = { text: "Canceling...", color: "#0d83dd" },\n    _a[command_1.COMMAND_STATE.COMPLETED] = { text: "Canceled | OK", color: "#31c908" },\n    _a[command_1.COMMAND_STATE.IGNORED] = { text: "Ignored - Too Close", color: "#999999" },\n    _a[command_1.COMMAND_STATE.IGNORED_BLACKLISTED] = {\n        text: "Ignored - Blacklisted",\n        color: "#999999",\n    },\n    _a[command_1.COMMAND_STATE.IGNORED_WHITELIST] = {\n        text: "Ignored - Not in Whitelist",\n        color: "#999999",\n    },\n    _a[command_1.COMMAND_STATE.NIGHT_BONUS] = {\n        text: "Covered by Night Bonus",\n        color: "#0d83dd",\n    },\n    _a[command_1.COMMAND_STATE.OWNER_COMMAND] = { text: "Ignored - Owner Command", color: "#808080" },\n    _a[command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING] = {\n        text: "Snipe",\n        color: "#ff6666"\n    },\n    _a[command_1.COMMAND_STATE.NOBLE_SNIPE_IN_PROGRESS] = {\n        text: "Sniping...",\n        color: "#ff3333"\n    },\n    _a[command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED] = {\n        text: "Noble Sniped | OK",\n        color: "#33ccff"\n    },\n    _a[command_1.COMMAND_STATE.NOBLE_SNIPE_IMPOSSIBLE] = {\n        text: "Snipe Impossible",\n        color: "#ff3333"\n    },\n    _a[command_1.COMMAND_STATE.NOBLE_SNIPE_IGNORED] = {\n        text: "Noble Ignored by Auto-Mode",\n        color: "#888888"\n    },\n    _a);\n\n\n//# sourceURL=webpack:///./src/script-states.ts?')},"./src/stats.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.defaultStats = void 0;\nexports.loadStats = loadStats;\nexports.saveStats = saveStats;\nexports.resetStats = resetStats;\nexports.updateStat = updateStat;\nvar storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");\nexports.defaultStats = {\n    totalDodges: 0,\n    successfulDodges: 0,\n    failedDodges: 0,\n    totalCancels: 0,\n    successfulCancels: 0,\n    failedCancels: 0,\n    commandsIgnored: 0,\n    commandsBlacklisted: 0,\n    commandsNotWhitelisted: 0,\n    nightBonusSkipped: 0,\n    noTroopsAvailable: 0,\n    lastReset: new Date().toISOString(),\n    commandsAnnexed: 0,\n    commandsProcessed: 0,\n    commandsRenamed: 0,\n    totalAttacksReceived: 0,\n    totalSnipes: 0,\n    successfulSnipes: 0,\n    failedSnipes: 0,\n    nobleAttacksProcessed: 0\n};\nfunction loadStats() {\n    return storage_1.AutoDodgeStorage.loadStats();\n}\nfunction saveStats(stats) {\n    storage_1.AutoDodgeStorage.saveStats(stats);\n}\nfunction resetStats() {\n    saveStats(__assign(__assign({}, exports.defaultStats), { lastReset: new Date().toISOString() }));\n    location.reload();\n}\n// Função para atualizar uma estatística específica\nfunction updateStat(statName, increment) {\n    if (increment === void 0) { increment = 1; }\n    var stats = storage_1.AutoDodgeStorage.loadStats();\n    stats[statName] += increment;\n    // Atualizar totais\n    if (statName === "successfulDodges" || statName === "failedDodges") {\n        stats.totalDodges += increment;\n    }\n    else if (statName === "successfulCancels" || statName === "failedCancels") {\n        stats.totalCancels += increment;\n    }\n    saveStats(stats);\n}\n\n\n//# sourceURL=webpack:///./src/stats.ts?')},"./src/storage.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.AutoDodgeStorage = void 0;\nexports.getAccountStorageKey = getAccountStorageKey;\nexports.saveField = saveField;\nexports.loadField = loadField;\nexports.cleanupStorage = cleanupStorage;\nvar config_1 = __webpack_require__(/*! ./config */ "./src/config.ts");\nvar crypto_1 = __webpack_require__(/*! ./crypto */ "./src/crypto.ts");\nvar stats_1 = __webpack_require__(/*! ./stats */ "./src/stats.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar constants_1 = __webpack_require__(/*! ./constants */ "./src/constants.ts");\nvar crypto_2 = __webpack_require__(/*! ./crypto */ "./src/crypto.ts");\nvar cleanupService_1 = __webpack_require__(/*! ./storage/services/cleanupService */ "./src/storage/services/cleanupService.ts");\n// Function to get the account-specific storage key\nfunction getAccountStorageKey() {\n    var userKey = (0, crypto_2.generateUserKey)();\n    return "".concat(constants_1.STORAGE_KEY, "_").concat(userKey);\n}\n// Generic function to save a specific field\nfunction saveField(fieldName, value) {\n    var allData = (0, crypto_1.loadEncryptedData)();\n    allData[fieldName] = value;\n    (0, crypto_1.saveEncryptedData)(allData);\n}\n// Generic function to load a specific field\nfunction loadField(fieldName, defaultValue) {\n    var allData = (0, crypto_1.loadEncryptedData)();\n    return allData.hasOwnProperty(fieldName)\n        ? allData[fieldName]\n        : defaultValue;\n}\nfunction ensureConfigDefaults(loadedConfig, defaultConfig) {\n    var updatedConfig = __assign({}, loadedConfig);\n    var hasChanges = false;\n    // Verifica cada propriedade do defaultConfig\n    for (var key in defaultConfig) {\n        if (!(key in loadedConfig)) {\n            updatedConfig[key] = defaultConfig[key];\n            hasChanges = true;\n            (0, logging_utils_1.sendLog)("Added missing config property: ".concat(key), "info");\n        }\n    }\n    if (hasChanges) {\n        exports.AutoDodgeStorage.saveConfig(updatedConfig);\n    }\n    return updatedConfig;\n}\nexports.AutoDodgeStorage = {\n    saveConfig: function (config) { return saveField("AutoDefenseConfig", config); },\n    loadConfig: function () {\n        var loadedConfig = loadField("AutoDefenseConfig", config_1.defaultConfig);\n        return ensureConfigDefaults(loadedConfig, config_1.defaultConfig);\n    },\n    saveStats: function (stats) { return saveField("AutoDefenseStats", stats); },\n    loadStats: function () { return loadField("AutoDefenseStats", stats_1.defaultStats); },\n    saveDvCfg: function (dvCfg) { return saveField("_dv_cfg", dvCfg); },\n    loadDvCfg: function () { return loadField("_dv_cfg", {}); },\n    saveActive: function (active) { return saveField("AutoDefenseActive", active); },\n    loadActive: function () { return loadField("AutoDefenseActive", false); },\n    saveFirstTime: function (firstTime) { return saveField("first_time", firstTime); },\n    loadFirstTime: function () { return loadField("first_time", true); },\n    saveNobleAttacksCache: function (cache) { return saveField("nobleAttacksCache", cache); },\n    loadNobleAttacksCache: function () { return loadField("nobleAttacksCache", {\n        treated: 0,\n        new: 0,\n        lastUpdate: 0\n    }); },\n    saveLastVersion: function (version) { return saveField("lastVersion", version); },\n    loadLastVersion: function () { return loadField("lastVersion", "0.0.0"); },\n};\n/**\n * Cleans up old data from storage.\n * This includes:\n * - Old commands that have already landed\n * - Commands from different players\n * - Script state if needed\n */\nfunction cleanupStorage(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var scriptStateKeys;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Starting storage cleanup", "info");\n                    // Clean up IndexedDB storage\n                    return [4 /*yield*/, (0, cleanupService_1.cleanupIndexedDBStorage)(config)];\n                case 1:\n                    // Clean up IndexedDB storage\n                    _a.sent();\n                    scriptStateKeys = [\n                        "current_script_state",\n                        "current_command_id",\n                        "incomingsUrl"\n                    ];\n                    scriptStateKeys.forEach(function (key) {\n                        if (sessionStorage.getItem(key) !== null) {\n                            sessionStorage.removeItem(key);\n                            (0, logging_utils_1.sendLog)("Cleaned up legacy sessionStorage key: ".concat(key), "info");\n                        }\n                    });\n                    (0, logging_utils_1.sendLog)("Storage cleanup completed", "info");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage.ts?')},"./src/storage/constants.ts":(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KEY = exports.STORE = void 0;\n// src/constants.ts\nexports.STORE = {\n    SCRIPT: 'script',\n    COMMANDS: 'commands',\n    PLANNER: 'planner',\n    AUTO_RENAMER: 'auto_renamer',\n    LOCK: 'lock',\n    OFFSET_TEST: 'offset_test',\n    NOBLE_ATTACKS: 'noble_attacks',\n    SIGILIA: 'sigilia'\n};\nexports.KEY = {\n    STATE: 'state',\n    CURRENT_COMMAND: 'currentCommand',\n    CACHE: 'cache',\n    INCOMINGS_URL: 'incomingsUrl',\n    // Auto Renamer keys\n    AUTO_RENAMER_STATE: 'auto_renamer_state',\n    LAST_INCOMING_COUNT: 'last_incoming_count',\n    RENAME_COOLDOWN: 'rename_cooldown',\n    PENDING_ATTACKS: 'pending_attacks',\n    LAST_ATTACK_TIME: 'last_attack_time',\n    LAST_ATAQUE_CHECK: 'last_ataque_check',\n    ATTACK_TIMES: 'attack_times',\n    LAST_RENAME_TIME: 'last_rename_time',\n    // Lock keys\n    LOCK: 'lock',\n    SESSION: 'session',\n    // Offset test keys\n    RETURN_URL: 'return_url',\n    SOURCE_COORDS: 'source_coords',\n    TARGET_COORDS: 'target_coords',\n    UNIT_TYPE: 'unit_type',\n    PREP_TIME: 'prep_time',\n    LAUNCH_TIME: 'launch_time',\n    EXPECTED_LANDING: 'expected_landing',\n    ACTUAL_CLICK_TIME: 'actual_click_time',\n    CALCULATED_OFFSET: 'calculated_offset',\n    TRUE_OFFSET: 'true_offset',\n    // Noble attacks keys\n    NOBLE_CACHE: 'noble_cache',\n    // Sigilia keys\n    SIGILIA_DATA: 'sigilia_data',\n    LAST_SIGILIA_CHECK: 'last_sigilia_check'\n};\n\n\n//# sourceURL=webpack:///./src/storage/constants.ts?")},"./src/storage/indexedDB.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.IndexedDBService = void 0;\n// src/services/indexedDB.ts\nvar constants_1 = __webpack_require__(/*! ./constants */ "./src/storage/constants.ts");\nvar IndexedDBService = /** @class */ (function () {\n    function IndexedDBService() {\n    }\n    IndexedDBService.initDB = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!this.dbPromise) {\n                    console.log("Iniciando IndexedDB: ".concat(this.DB_NAME, " v").concat(this.DB_VERSION));\n                    this.dbPromise = new Promise(function (resolve, reject) {\n                        try {\n                            var request_1 = indexedDB.open(_this.DB_NAME, _this.DB_VERSION);\n                            request_1.onerror = function (event) {\n                                console.error("Erro ao abrir IndexedDB: ".concat(request_1.error), event);\n                                _this.dbPromise = null; // Reset on error\n                                reject(request_1.error);\n                            };\n                            request_1.onblocked = function (event) {\n                                console.warn("Conex\\u00E3o do IndexedDB bloqueada", event);\n                                // Continuar tentando\n                            };\n                            request_1.onsuccess = function () {\n                                var db = request_1.result;\n                                console.log("IndexedDB aberto com sucesso");\n                                // Handle connection closing\n                                db.onclose = function () {\n                                    console.log("Conex\\u00E3o IndexedDB fechada");\n                                    _this.dbPromise = null;\n                                };\n                                db.onversionchange = function () {\n                                    console.log("Vers\\u00E3o do IndexedDB alterada, fechando conex\\u00E3o");\n                                    db.close();\n                                    _this.dbPromise = null;\n                                };\n                                // Verificar se os stores necessários existem\n                                var storeNames = Array.from(db.objectStoreNames);\n                                console.log("Stores dispon\\u00EDveis: ".concat(storeNames.join(\', \')));\n                                resolve(db);\n                            };\n                            request_1.onupgradeneeded = function (event) {\n                                var db = event.target.result;\n                                console.log("Atualizando IndexedDB para vers\\u00E3o ".concat(_this.DB_VERSION));\n                                // Create object stores using constants\n                                Object.values(constants_1.STORE).forEach(function (storeName) {\n                                    if (!db.objectStoreNames.contains(storeName)) {\n                                        console.log("Criando store: ".concat(storeName));\n                                        db.createObjectStore(storeName);\n                                    }\n                                    else {\n                                        console.log("Store j\\u00E1 existe: ".concat(storeName));\n                                    }\n                                });\n                            };\n                        }\n                        catch (error) {\n                            console.error("Erro cr\\u00EDtico ao inicializar IndexedDB:", error);\n                            _this.dbPromise = null;\n                            reject(error);\n                        }\n                    });\n                }\n                // Se a promessa falhar, limpar e tentar novamente\n                return [2 /*return*/, this.dbPromise.catch(function (error) {\n                        console.error("Falha ao inicializar IndexedDB, tentando novamente:", error);\n                        _this.dbPromise = null;\n                        return _this.initDB();\n                    })];\n            });\n        });\n    };\n    IndexedDBService.setValue = function (storeName, key, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var db_1, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.initDB()];\n                    case 1:\n                        db_1 = _a.sent();\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                try {\n                                    var transaction_1 = db_1.transaction(storeName, \'readwrite\');\n                                    var store = transaction_1.objectStore(storeName);\n                                    transaction_1.onerror = function (event) {\n                                        console.error("Erro na transa\\u00E7\\u00E3o ao salvar em ".concat(storeName, ":"), transaction_1.error);\n                                        reject(transaction_1.error);\n                                    };\n                                    transaction_1.oncomplete = function () {\n                                        // console.log(`Transação concluída com sucesso para ${storeName}:${key}`);\n                                    };\n                                    var request_2 = store.put(value, key);\n                                    request_2.onerror = function (event) {\n                                        console.error("Erro ao salvar valor em ".concat(storeName, ":").concat(key, ":"), request_2.error);\n                                        reject(request_2.error);\n                                    };\n                                    request_2.onsuccess = function () {\n                                        // console.log(`Valor salvo com sucesso em ${storeName}:${key}`);\n                                        resolve();\n                                    };\n                                }\n                                catch (error) {\n                                    console.error("Erro inesperado ao salvar em ".concat(storeName, ":").concat(key, ":"), error);\n                                    reject(error);\n                                }\n                            })];\n                    case 2:\n                        error_1 = _a.sent();\n                        console.error("Erro ao inicializar DB para salvar em ".concat(storeName, ":").concat(key, ":"), error_1);\n                        throw error_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBService.getValue = function (storeName, key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var db_2, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.initDB()];\n                    case 1:\n                        db_2 = _a.sent();\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                try {\n                                    var transaction_2 = db_2.transaction(storeName, \'readonly\');\n                                    var store = transaction_2.objectStore(storeName);\n                                    transaction_2.onerror = function (event) {\n                                        console.error("Erro na transa\\u00E7\\u00E3o ao ler de ".concat(storeName, ":"), transaction_2.error);\n                                        reject(transaction_2.error);\n                                    };\n                                    var request_3 = store.get(key);\n                                    request_3.onerror = function (event) {\n                                        console.error("Erro ao ler valor de ".concat(storeName, ":").concat(key, ":"), request_3.error);\n                                        reject(request_3.error);\n                                    };\n                                    request_3.onsuccess = function () {\n                                        if (request_3.result === undefined) {\n                                            // console.log(`Nenhum valor encontrado em ${storeName}:${key}`);\n                                        }\n                                        else {\n                                            // console.log(`Valor recuperado com sucesso de ${storeName}:${key}`);\n                                        }\n                                        resolve(request_3.result);\n                                    };\n                                }\n                                catch (error) {\n                                    console.error("Erro inesperado ao ler de ".concat(storeName, ":").concat(key, ":"), error);\n                                    reject(error);\n                                }\n                            })];\n                    case 2:\n                        error_2 = _a.sent();\n                        console.error("Erro ao inicializar DB para ler de ".concat(storeName, ":").concat(key, ":"), error_2);\n                        throw error_2;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBService.removeValue = function (storeName, key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var db;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.initDB()];\n                    case 1:\n                        db = _a.sent();\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                var transaction = db.transaction(storeName, \'readwrite\');\n                                var store = transaction.objectStore(storeName);\n                                var request = store.delete(key);\n                                request.onerror = function () { return reject(request.error); };\n                                request.onsuccess = function () { return resolve(); };\n                            })];\n                }\n            });\n        });\n    };\n    IndexedDBService.getAllValues = function (store) {\n        return __awaiter(this, void 0, void 0, function () {\n            var db;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.initDB()];\n                    case 1:\n                        db = _a.sent();\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                var transaction = db.transaction(store, \'readonly\');\n                                var objectStore = transaction.objectStore(store);\n                                var request = objectStore.getAll();\n                                request.onsuccess = function () { return resolve(request.result); };\n                                request.onerror = function () { return reject(request.error); };\n                            })];\n                }\n            });\n        });\n    };\n    IndexedDBService.DB_NAME = \'AutoDodgeDB\';\n    IndexedDBService.DB_VERSION = 5;\n    IndexedDBService.dbPromise = null;\n    return IndexedDBService;\n}());\nexports.IndexedDBService = IndexedDBService;\n\n\n//# sourceURL=webpack:///./src/storage/indexedDB.ts?')},"./src/storage/service.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\n// Script Service\n__exportStar(__webpack_require__(/*! ./services/scriptService */ "./src/storage/services/scriptService.ts"), exports);\n// Command Service\n__exportStar(__webpack_require__(/*! ./services/commandService */ "./src/storage/services/commandService.ts"), exports);\n// Planner Service\n__exportStar(__webpack_require__(/*! ./services/plannerService */ "./src/storage/services/plannerService.ts"), exports);\n// Auto Renamer Service\n__exportStar(__webpack_require__(/*! ./services/autoRenamerService */ "./src/storage/services/autoRenamerService.ts"), exports);\n// Lock Service\n__exportStar(__webpack_require__(/*! ./services/lockService */ "./src/storage/services/lockService.ts"), exports);\n// Cleanup Service\n__exportStar(__webpack_require__(/*! ./services/cleanupService */ "./src/storage/services/cleanupService.ts"), exports);\n// Offset Tester Service\n__exportStar(__webpack_require__(/*! ./services/offsetTesterService */ "./src/storage/services/offsetTesterService.ts"), exports);\n// Noble Attacks Service\n__exportStar(__webpack_require__(/*! ./services/nobleAttacksService */ "./src/storage/services/nobleAttacksService.ts"), exports);\n// Sigilia Service\n__exportStar(__webpack_require__(/*! ./services/sigiliaService */ "./src/storage/services/sigiliaService.ts"), exports);\n\n\n//# sourceURL=webpack:///./src/storage/service.ts?')},"./src/storage/services/autoRenamerService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.initializeAutoRenamerStorage = initializeAutoRenamerStorage;\nexports.getAutoRenamerState = getAutoRenamerState;\nexports.setAutoRenamerState = setAutoRenamerState;\nexports.getLastIncomingCount = getLastIncomingCount;\nexports.setLastIncomingCount = setLastIncomingCount;\nexports.getRenameCooldown = getRenameCooldown;\nexports.setRenameCooldown = setRenameCooldown;\nexports.getPendingAttacks = getPendingAttacks;\nexports.setPendingAttacks = setPendingAttacks;\nexports.getLastAttackTime = getLastAttackTime;\nexports.setLastAttackTime = setLastAttackTime;\nexports.getLastAtaqueCheck = getLastAtaqueCheck;\nexports.setLastAtaqueCheck = setLastAtaqueCheck;\nexports.getAttackTimes = getAttackTimes;\nexports.setAttackTimes = setAttackTimes;\nexports.getLastRenameTime = getLastRenameTime;\nexports.setLastRenameTime = setLastRenameTime;\nexports.clearAutoRenamerData = clearAutoRenamerData;\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\nvar autoRenamer_1 = __webpack_require__(/*! ../../renamer/autoRenamer */ "./src/renamer/autoRenamer.ts");\n// Helper function to ensure we always have a value\nfunction getValueWithDefault(key, defaultValue) {\n    return __awaiter(this, void 0, void 0, function () {\n        var value;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.AUTO_RENAMER, key)];\n                case 1:\n                    value = _a.sent();\n                    return [2 /*return*/, value !== undefined ? value : defaultValue];\n            }\n        });\n    });\n}\nfunction initializeAutoRenamerStorage() {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentState, attackTimes;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getAutoRenamerState()];\n                case 1:\n                    currentState = _a.sent();\n                    if (!!currentState) return [3 /*break*/, 3];\n                    return [4 /*yield*/, setAutoRenamerState(autoRenamer_1.AutoRenamerState.IDLE)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3: \n                // Initialize all values if they don\'t exist\n                return [4 /*yield*/, setLastIncomingCount(game_data.player.incomings.toString())];\n                case 4:\n                    // Initialize all values if they don\'t exist\n                    _a.sent();\n                    return [4 /*yield*/, setPendingAttacks("0")];\n                case 5:\n                    _a.sent();\n                    return [4 /*yield*/, setRenameCooldown("0")];\n                case 6:\n                    _a.sent();\n                    return [4 /*yield*/, setLastAttackTime("0")];\n                case 7:\n                    _a.sent();\n                    return [4 /*yield*/, setLastAtaqueCheck("0")];\n                case 8:\n                    _a.sent();\n                    return [4 /*yield*/, getAttackTimes()];\n                case 9:\n                    attackTimes = _a.sent();\n                    if (!!attackTimes) return [3 /*break*/, 11];\n                    return [4 /*yield*/, setAttackTimes([])];\n                case 10:\n                    _a.sent();\n                    _a.label = 11;\n                case 11: return [2 /*return*/];\n            }\n        });\n    });\n}\n// State management\nfunction getAutoRenamerState() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.AUTO_RENAMER_STATE)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction setAutoRenamerState(state) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.AUTO_RENAMER_STATE, state)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Incoming count\nfunction getLastIncomingCount() {\n    return __awaiter(this, void 0, void 0, function () {\n        var value;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getValueWithDefault(constants_1.KEY.LAST_INCOMING_COUNT, "0")];\n                case 1:\n                    value = _a.sent();\n                    return [2 /*return*/, parseInt(value)];\n            }\n        });\n    });\n}\nfunction setLastIncomingCount(count) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.LAST_INCOMING_COUNT, count)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Rename cooldown\nfunction getRenameCooldown() {\n    return __awaiter(this, void 0, void 0, function () {\n        var value;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getValueWithDefault(constants_1.KEY.RENAME_COOLDOWN, "0")];\n                case 1:\n                    value = _a.sent();\n                    return [2 /*return*/, parseInt(value)];\n            }\n        });\n    });\n}\nfunction setRenameCooldown(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.RENAME_COOLDOWN, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Pending attacks\nfunction getPendingAttacks() {\n    return __awaiter(this, void 0, void 0, function () {\n        var value;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getValueWithDefault(constants_1.KEY.PENDING_ATTACKS, "0")];\n                case 1:\n                    value = _a.sent();\n                    return [2 /*return*/, parseInt(value)];\n            }\n        });\n    });\n}\nfunction setPendingAttacks(count) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.PENDING_ATTACKS, count)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Last attack time\nfunction getLastAttackTime() {\n    return __awaiter(this, void 0, void 0, function () {\n        var value;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getValueWithDefault(constants_1.KEY.LAST_ATTACK_TIME, "0")];\n                case 1:\n                    value = _a.sent();\n                    return [2 /*return*/, parseInt(value)];\n            }\n        });\n    });\n}\nfunction setLastAttackTime(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.LAST_ATTACK_TIME, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Last ataque check\nfunction getLastAtaqueCheck() {\n    return __awaiter(this, void 0, void 0, function () {\n        var value;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getValueWithDefault(constants_1.KEY.LAST_ATAQUE_CHECK, "0")];\n                case 1:\n                    value = _a.sent();\n                    return [2 /*return*/, parseInt(value)];\n            }\n        });\n    });\n}\nfunction setLastAtaqueCheck(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.LAST_ATAQUE_CHECK, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Attack times array\nfunction getAttackTimes() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getValueWithDefault(constants_1.KEY.ATTACK_TIMES, [])];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction setAttackTimes(times) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.ATTACK_TIMES, times)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Last rename time\nfunction getLastRenameTime() {\n    return __awaiter(this, void 0, void 0, function () {\n        var value;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getValueWithDefault(constants_1.KEY.LAST_RENAME_TIME, "0")];\n                case 1:\n                    value = _a.sent();\n                    return [2 /*return*/, parseInt(value)];\n            }\n        });\n    });\n}\nfunction setLastRenameTime(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.AUTO_RENAMER, constants_1.KEY.LAST_RENAME_TIME, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Clear all auto renamer data\nfunction clearAutoRenamerData() {\n    return __awaiter(this, void 0, void 0, function () {\n        var keys, _i, keys_1, key;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    keys = [\n                        constants_1.KEY.AUTO_RENAMER_STATE,\n                        constants_1.KEY.LAST_INCOMING_COUNT,\n                        constants_1.KEY.RENAME_COOLDOWN,\n                        constants_1.KEY.PENDING_ATTACKS,\n                        constants_1.KEY.LAST_ATTACK_TIME,\n                        constants_1.KEY.LAST_ATAQUE_CHECK,\n                        constants_1.KEY.ATTACK_TIMES,\n                        constants_1.KEY.LAST_RENAME_TIME\n                    ];\n                    _i = 0, keys_1 = keys;\n                    _a.label = 1;\n                case 1:\n                    if (!(_i < keys_1.length)) return [3 /*break*/, 4];\n                    key = keys_1[_i];\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.AUTO_RENAMER, key)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    _i++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/autoRenamerService.ts?')},"./src/storage/services/cleanupService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.cleanupIndexedDBStorage = cleanupIndexedDBStorage;\nvar CommandService = __importStar(__webpack_require__(/*! ./commandService */ "./src/storage/services/commandService.ts"));\nvar ScriptService = __importStar(__webpack_require__(/*! ./scriptService */ "./src/storage/services/scriptService.ts"));\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar tribalkit_1 = __webpack_require__(/*! ../../tribalkit */ "./src/tribalkit.ts");\n/**\n * Cleans up old data from IndexedDB storage.\n * This includes:\n * - Old commands that have already landed\n * - Commands from different players\n * - Script state if needed\n *\n * @param config The application configuration\n */\nfunction cleanupIndexedDBStorage(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentTime, cleanupBuffer, currentPlayerId;\n        var _a, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Cleaning up IndexedDB storage", "info");\n                    currentTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    cleanupBuffer = config.GROUP_DODGE_WINDOW * 1000;\n                    currentPlayerId = (_b = (_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.player) === null || _b === void 0 ? void 0 : _b.id;\n                    // 1. Clean up old commands\n                    return [4 /*yield*/, cleanupOldCommands(currentTime, cleanupBuffer, currentPlayerId)];\n                case 1:\n                    // 1. Clean up old commands\n                    _c.sent();\n                    // 2. Clean up script state if needed\n                    return [4 /*yield*/, cleanupScriptState()];\n                case 2:\n                    // 2. Clean up script state if needed\n                    _c.sent();\n                    (0, logging_utils_1.sendLog)("IndexedDB storage cleanup completed", "info");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Cleans up old commands from storage.\n */\nfunction cleanupOldCommands(currentTime, cleanupBuffer, currentPlayerId) {\n    return __awaiter(this, void 0, void 0, function () {\n        var allCommands, _i, allCommands_1, command, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 8, , 9]);\n                    return [4 /*yield*/, CommandService.getAllCommands()];\n                case 1:\n                    allCommands = _a.sent();\n                    _i = 0, allCommands_1 = allCommands;\n                    _a.label = 2;\n                case 2:\n                    if (!(_i < allCommands_1.length)) return [3 /*break*/, 7];\n                    command = allCommands_1[_i];\n                    if (!(currentPlayerId && command.playerId !== currentPlayerId)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, CommandService.removeCommand(command.id)];\n                case 3:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Removed command data for different player: ".concat(command.id), "info");\n                    return [3 /*break*/, 6];\n                case 4:\n                    if (!(command.landingTime.getTime() + cleanupBuffer <= currentTime.getTime())) return [3 /*break*/, 6];\n                    return [4 /*yield*/, CommandService.removeCommand(command.id)];\n                case 5:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Cleaned up data for old command ".concat(command.id), "info");\n                    _a.label = 6;\n                case 6:\n                    _i++;\n                    return [3 /*break*/, 2];\n                case 7: return [3 /*break*/, 9];\n                case 8:\n                    error_1 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Error cleaning up commands: ".concat(error_1), "error");\n                    return [3 /*break*/, 9];\n                case 9: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Cleans up script state if needed.\n */\nfunction cleanupScriptState() {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentState, currentCommandId, incomingsUrl, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 6, , 7]);\n                    return [4 /*yield*/, ScriptService.getScriptState()];\n                case 1:\n                    currentState = _a.sent();\n                    return [4 /*yield*/, ScriptService.getCurrentCommandId()];\n                case 2:\n                    currentCommandId = _a.sent();\n                    if (!(!currentCommandId && currentState)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, ScriptService.clearScriptState()];\n                case 3:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Cleared orphaned script state", "info");\n                    _a.label = 4;\n                case 4: return [4 /*yield*/, ScriptService.getIncomingsUrlStorage()];\n                case 5:\n                    incomingsUrl = _a.sent();\n                    if (incomingsUrl) {\n                        // Only clear if it\'s an old URL (you might want to add logic here)\n                        // For now, we\'ll just keep it\n                    }\n                    return [3 /*break*/, 7];\n                case 6:\n                    error_2 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Error cleaning up script state: ".concat(error_2), "error");\n                    return [3 /*break*/, 7];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/cleanupService.ts?')},"./src/storage/services/commandService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.saveCommand = saveCommand;\nexports.loadCommand = loadCommand;\nexports.removeCommand = removeCommand;\nexports.updateCommand = updateCommand;\nexports.getAllCommands = getAllCommands;\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\nvar command_1 = __webpack_require__(/*! ../../command */ "./src/command.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\nfunction saveCommand(command) {\n    return __awaiter(this, void 0, void 0, function () {\n        var jsonString, savedCommand, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 3, , 4]);\n                    (0, logging_utils_1.sendLog)("Tentando salvar comando ID=".concat(command.id, " (").concat(command.state, ")"), "debug");\n                    jsonString = command.toJSON();\n                    (0, logging_utils_1.sendLog)("JSON gerado: ".concat(jsonString.substring(0, 100), "..."), "debug");\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.COMMANDS, command.id, jsonString)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, loadCommand(command.id)];\n                case 2:\n                    savedCommand = _a.sent();\n                    if (savedCommand) {\n                        (0, logging_utils_1.sendLog)("Comando ID=".concat(command.id, " salvo com sucesso (").concat(command.state, ")"), "debug");\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("ERRO: Comando ID=".concat(command.id, " n\\u00E3o foi salvo corretamente!"), "error");\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_1 = _a.sent();\n                    (0, logging_utils_1.sendLog)("ERRO ao salvar comando ID=".concat(command.id, ": ").concat(error_1), "error");\n                    throw error_1;\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction loadCommand(id) {\n    return __awaiter(this, void 0, void 0, function () {\n        var json, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.COMMANDS, id)];\n                case 1:\n                    json = _a.sent();\n                    if (!json) {\n                        (0, logging_utils_1.sendLog)("Nenhum dado encontrado para comando ID=".concat(id), "debug");\n                        return [2 /*return*/, null];\n                    }\n                    (0, logging_utils_1.sendLog)("Dados carregados para comando ID=".concat(id), "debug");\n                    return [2 /*return*/, command_1.Command.fromJSON(json)];\n                case 2:\n                    error_2 = _a.sent();\n                    (0, logging_utils_1.sendLog)("ERRO ao carregar comando ID=".concat(id, ": ").concat(error_2), "error");\n                    return [2 /*return*/, null];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction removeCommand(id) {\n    return __awaiter(this, void 0, void 0, function () {\n        var error_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.COMMANDS, id)];\n                case 1:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Comando ID=".concat(id, " removido"), "debug");\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_3 = _a.sent();\n                    (0, logging_utils_1.sendLog)("ERRO ao remover comando ID=".concat(id, ": ").concat(error_3), "error");\n                    throw error_3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction updateCommand(id, updates) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command, error_4;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 4, , 5]);\n                    return [4 /*yield*/, loadCommand(id)];\n                case 1:\n                    command = _a.sent();\n                    if (!command) return [3 /*break*/, 3];\n                    Object.assign(command, updates);\n                    return [4 /*yield*/, saveCommand(command)];\n                case 2:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Comando ID=".concat(id, " atualizado"), "debug");\n                    return [2 /*return*/, command];\n                case 3:\n                    (0, logging_utils_1.sendLog)("N\\u00E3o foi poss\\u00EDvel atualizar comando ID=".concat(id, " (n\\u00E3o encontrado)"), "warning");\n                    return [2 /*return*/, null];\n                case 4:\n                    error_4 = _a.sent();\n                    (0, logging_utils_1.sendLog)("ERRO ao atualizar comando ID=".concat(id, ": ").concat(error_4), "error");\n                    return [2 /*return*/, null];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getAllCommands() {\n    return __awaiter(this, void 0, void 0, function () {\n        var commandJsons, commands, error_5;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.getAllValues(constants_1.STORE.COMMANDS)];\n                case 1:\n                    commandJsons = _a.sent();\n                    (0, logging_utils_1.sendLog)("Carregados ".concat(commandJsons.length, " comandos do armazenamento"), "debug");\n                    commands = commandJsons\n                        .map(function (json) {\n                        try {\n                            return command_1.Command.fromJSON(json);\n                        }\n                        catch (error) {\n                            (0, logging_utils_1.sendLog)("ERRO ao converter comando de JSON: ".concat(error), "error");\n                            return null;\n                        }\n                    })\n                        .filter(function (command) { return command !== null; });\n                    (0, logging_utils_1.sendLog)("Convertidos ".concat(commands.length, "/").concat(commandJsons.length, " comandos"), "debug");\n                    return [2 /*return*/, commands];\n                case 2:\n                    error_5 = _a.sent();\n                    (0, logging_utils_1.sendLog)("ERRO ao buscar comandos do IndexedDB: ".concat(error_5), "error");\n                    return [2 /*return*/, []];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/commandService.ts?')},"./src/storage/services/lockService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.setLock = setLock;\nexports.releaseLock = releaseLock;\nexports.isLocked = isLocked;\nexports.isSessionActive = isSessionActive;\nexports.isLockedInAnotherTab = isLockedInAnotherTab;\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\n/**\n * Sets a lock to indicate that the application is running in this tab.\n * This is used to prevent multiple tabs from running the application simultaneously.\n */\nfunction setLock(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!config.SINGLE_TAB_LOCK_ENABLED) return [3 /*break*/, 3];\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.LOCK, constants_1.KEY.LOCK, "locked")];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.LOCK, constants_1.KEY.SESSION, "active")];\n                case 2:\n                    _a.sent();\n                    // For backward compatibility, also set in localStorage/sessionStorage\n                    localStorage.setItem("autododge_lock", "locked");\n                    sessionStorage.setItem("autododge_session", "active");\n                    _a.label = 3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Releases the lock to indicate that the application is no longer running in this tab.\n */\nfunction releaseLock(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!config.SINGLE_TAB_LOCK_ENABLED) return [3 /*break*/, 3];\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.LOCK, constants_1.KEY.LOCK)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.LOCK, constants_1.KEY.SESSION)];\n                case 2:\n                    _a.sent();\n                    // For backward compatibility, also remove from localStorage/sessionStorage\n                    localStorage.removeItem("autododge_lock");\n                    sessionStorage.removeItem("autododge_session");\n                    _a.label = 3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Checks if the application is locked (running in another tab).\n */\nfunction isLocked(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var lockValue;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!config.SINGLE_TAB_LOCK_ENABLED) {\n                        return [2 /*return*/, false];\n                    }\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.LOCK, constants_1.KEY.LOCK)];\n                case 1:\n                    lockValue = _a.sent();\n                    return [2 /*return*/, lockValue === "locked"];\n            }\n        });\n    });\n}\n/**\n * Checks if the application is active in the current session.\n */\nfunction isSessionActive(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var sessionValue;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!config.SINGLE_TAB_LOCK_ENABLED) {\n                        return [2 /*return*/, false];\n                    }\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.LOCK, constants_1.KEY.SESSION)];\n                case 1:\n                    sessionValue = _a.sent();\n                    return [2 /*return*/, sessionValue === "active"];\n            }\n        });\n    });\n}\n/**\n * Checks if the application is locked but not in the current session.\n * This indicates that the application is running in another tab.\n */\nfunction isLockedInAnotherTab(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var isAppLocked, isCurrentSessionActive;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!config.SINGLE_TAB_LOCK_ENABLED) {\n                        return [2 /*return*/, false];\n                    }\n                    return [4 /*yield*/, isLocked(config)];\n                case 1:\n                    isAppLocked = _a.sent();\n                    return [4 /*yield*/, isSessionActive(config)];\n                case 2:\n                    isCurrentSessionActive = _a.sent();\n                    return [2 /*return*/, isAppLocked && !isCurrentSessionActive];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/lockService.ts?')},"./src/storage/services/nobleAttacksService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.saveNobleAttacksCache = saveNobleAttacksCache;\nexports.getNobleAttacksCache = getNobleAttacksCache;\nexports.resetNobleAttacksCache = resetNobleAttacksCache;\nexports.isNobleAttacksCacheStale = isNobleAttacksCacheStale;\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\n/**\n * Default values for noble attacks cache\n */\nvar DEFAULT_NOBLE_CACHE = {\n    treated: 0,\n    new: 0,\n    lastUpdate: 0\n};\n/**\n * Save the noble attacks cache to IndexedDB\n */\nfunction saveNobleAttacksCache(cache) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.NOBLE_ATTACKS, constants_1.KEY.NOBLE_CACHE, cache)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Load the noble attacks cache from IndexedDB\n */\nfunction getNobleAttacksCache() {\n    return __awaiter(this, void 0, void 0, function () {\n        var cache;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.NOBLE_ATTACKS, constants_1.KEY.NOBLE_CACHE)];\n                case 1:\n                    cache = _a.sent();\n                    return [2 /*return*/, cache || DEFAULT_NOBLE_CACHE];\n            }\n        });\n    });\n}\n/**\n * Reset the noble attacks cache when there are no noble attacks\n */\nfunction resetNobleAttacksCache() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, saveNobleAttacksCache(DEFAULT_NOBLE_CACHE)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Check if the noble attacks cache is stale (older than a certain time)\n */\nfunction isNobleAttacksCacheStale() {\n    return __awaiter(this, arguments, void 0, function (maxAgeMs) {\n        var cache, now;\n        if (maxAgeMs === void 0) { maxAgeMs = 5 * 60 * 1000; }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getNobleAttacksCache()];\n                case 1:\n                    cache = _a.sent();\n                    now = Date.now();\n                    return [2 /*return*/, (now - cache.lastUpdate) > maxAgeMs];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/nobleAttacksService.ts?')},"./src/storage/services/offsetTesterService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.saveOffsetTestReturnUrl = saveOffsetTestReturnUrl;\nexports.getOffsetTestReturnUrl = getOffsetTestReturnUrl;\nexports.saveSourceCoordinates = saveSourceCoordinates;\nexports.getSourceCoordinates = getSourceCoordinates;\nexports.saveTargetCoordinates = saveTargetCoordinates;\nexports.getTargetCoordinates = getTargetCoordinates;\nexports.saveUnitType = saveUnitType;\nexports.getUnitType = getUnitType;\nexports.savePrepTime = savePrepTime;\nexports.getPrepTime = getPrepTime;\nexports.saveLaunchTime = saveLaunchTime;\nexports.getLaunchTime = getLaunchTime;\nexports.saveExpectedLanding = saveExpectedLanding;\nexports.getExpectedLanding = getExpectedLanding;\nexports.saveActualClickTime = saveActualClickTime;\nexports.getActualClickTime = getActualClickTime;\nexports.saveCalculatedOffset = saveCalculatedOffset;\nexports.getCalculatedOffset = getCalculatedOffset;\nexports.saveTrueOffset = saveTrueOffset;\nexports.getTrueOffset = getTrueOffset;\nexports.clearOffsetTestData = clearOffsetTestData;\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\n// Helper functions for storing and retrieving offset test data\nfunction saveOffsetTestReturnUrl(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.RETURN_URL, url)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getOffsetTestReturnUrl() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.RETURN_URL)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveSourceCoordinates(coords) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.SOURCE_COORDS, coords)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getSourceCoordinates() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.SOURCE_COORDS)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveTargetCoordinates(coords) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.TARGET_COORDS, coords)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getTargetCoordinates() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.TARGET_COORDS)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveUnitType(unitType) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.UNIT_TYPE, unitType)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getUnitType() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.UNIT_TYPE)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction savePrepTime(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.PREP_TIME, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getPrepTime() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.PREP_TIME)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveLaunchTime(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.LAUNCH_TIME, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getLaunchTime() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.LAUNCH_TIME)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveExpectedLanding(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.EXPECTED_LANDING, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getExpectedLanding() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.EXPECTED_LANDING)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveActualClickTime(time) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.ACTUAL_CLICK_TIME, time)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getActualClickTime() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.ACTUAL_CLICK_TIME)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveCalculatedOffset(offset) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.CALCULATED_OFFSET, offset)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getCalculatedOffset() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.CALCULATED_OFFSET)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction saveTrueOffset(offset) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.TRUE_OFFSET, offset)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getTrueOffset() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.OFFSET_TEST, constants_1.KEY.TRUE_OFFSET)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction clearOffsetTestData() {\n    return __awaiter(this, void 0, void 0, function () {\n        var keysToRemove, _i, keysToRemove_1, key;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    keysToRemove = [\n                        constants_1.KEY.RETURN_URL,\n                        constants_1.KEY.SOURCE_COORDS,\n                        constants_1.KEY.TARGET_COORDS,\n                        constants_1.KEY.UNIT_TYPE,\n                        constants_1.KEY.PREP_TIME,\n                        constants_1.KEY.LAUNCH_TIME,\n                        constants_1.KEY.EXPECTED_LANDING,\n                        constants_1.KEY.ACTUAL_CLICK_TIME,\n                        constants_1.KEY.CALCULATED_OFFSET,\n                        constants_1.KEY.TRUE_OFFSET\n                    ];\n                    _i = 0, keysToRemove_1 = keysToRemove;\n                    _a.label = 1;\n                case 1:\n                    if (!(_i < keysToRemove_1.length)) return [3 /*break*/, 4];\n                    key = keysToRemove_1[_i];\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.OFFSET_TEST, key)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    _i++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/offsetTesterService.ts?')},"./src/storage/services/plannerService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.getPlannerCache = getPlannerCache;\nexports.setPlannerCache = setPlannerCache;\nexports.isPlannerCacheValid = isPlannerCacheValid;\nexports.savePlannerData = savePlannerData;\nexports.getPlannerDataWithCache = getPlannerDataWithCache;\nexports.clearPlannerCache = clearPlannerCache;\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\nvar PLANNER_CACHE_DURATION = 60 * 1000; // 1 minute in milliseconds\nfunction getPlannerCache() {\n    return __awaiter(this, void 0, void 0, function () {\n        var cached, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.PLANNER, constants_1.KEY.CACHE)];\n                case 1:\n                    cached = _b.sent();\n                    return [2 /*return*/, cached ? cached : null];\n                case 2:\n                    _a = _b.sent();\n                    return [2 /*return*/, null];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction setPlannerCache(data) {\n    return __awaiter(this, void 0, void 0, function () {\n        var entry;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    entry = {\n                        data: data,\n                        timestamp: Date.now()\n                    };\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.PLANNER, constants_1.KEY.CACHE, entry)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction isPlannerCacheValid(entry) {\n    return Date.now() - entry.timestamp < PLANNER_CACHE_DURATION;\n}\nfunction savePlannerData(data) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.PLANNER, constants_1.KEY.CACHE, JSON.stringify(data))];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getPlannerDataWithCache(targetCoord, targetDate, fetchFreshData) {\n    return __awaiter(this, void 0, void 0, function () {\n        var cachedEntry, timeLeft, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getPlannerCache()];\n                case 1:\n                    cachedEntry = _a.sent();\n                    // Return cached data if it exists and is still valid\n                    if (cachedEntry && isPlannerCacheValid(cachedEntry)) {\n                        timeLeft = Math.round((PLANNER_CACHE_DURATION - (Date.now() - cachedEntry.timestamp)) / 1000);\n                        console.log("\\uD83D\\uDFE2 Using cached village data (expires in ".concat(timeLeft, "s)"));\n                        return [2 /*return*/, __assign(__assign({}, cachedEntry.data), { target: targetCoord, arrivalTime: targetDate.toISOString() })];\n                    }\n                    return [4 /*yield*/, fetchFreshData()];\n                case 2:\n                    data = _a.sent();\n                    return [4 /*yield*/, setPlannerCache(data)];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/, data];\n            }\n        });\n    });\n}\nfunction clearPlannerCache() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.PLANNER, constants_1.KEY.CACHE)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/plannerService.ts?')},"./src/storage/services/scriptService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.setScriptState = setScriptState;\nexports.getScriptState = getScriptState;\nexports.setCurrentCommandId = setCurrentCommandId;\nexports.getCurrentCommandId = getCurrentCommandId;\nexports.clearScriptState = clearScriptState;\nexports.getIncomingsUrlStorage = getIncomingsUrlStorage;\nexports.setIncomingsUrlStorage = setIncomingsUrlStorage;\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\nfunction setScriptState(state) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.SCRIPT, constants_1.KEY.STATE, state)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getScriptState() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.SCRIPT, constants_1.KEY.STATE)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction setCurrentCommandId(commandId) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.SCRIPT, constants_1.KEY.CURRENT_COMMAND, commandId)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getCurrentCommandId() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.SCRIPT, constants_1.KEY.CURRENT_COMMAND)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction clearScriptState() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.SCRIPT, constants_1.KEY.STATE)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.SCRIPT, constants_1.KEY.CURRENT_COMMAND)];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getIncomingsUrlStorage() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.SCRIPT, constants_1.KEY.INCOMINGS_URL)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction setIncomingsUrlStorage(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.SCRIPT, constants_1.KEY.INCOMINGS_URL, url)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/scriptService.ts?')},"./src/storage/services/sigiliaService.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.saveSigiliaData = saveSigiliaData;\nexports.getSigiliaData = getSigiliaData;\nexports.shouldRefreshSigiliaData = shouldRefreshSigiliaData;\nexports.deleteSigiliaData = deleteSigiliaData;\nexports.clearAllSigiliaData = clearAllSigiliaData;\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/storage/constants.ts");\nvar indexedDB_1 = __webpack_require__(/*! ../indexedDB */ "./src/storage/indexedDB.ts");\n/**\n * Saves sigilia data to IndexedDB\n * @param data The sigilia data to save\n */\nfunction saveSigiliaData(data) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.setValue(constants_1.STORE.SIGILIA, data.villageId, data)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Gets sigilia data from IndexedDB\n * @param villageId The ID of the village\n * @returns The sigilia data or null if not found\n */\nfunction getSigiliaData(villageId) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getValue(constants_1.STORE.SIGILIA, villageId)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n/**\n * Checks if we need to update the sigilia data\n * @param villageId The ID of the village\n * @param maxAge Maximum age in milliseconds before refreshing (default: 3 hours)\n * @returns True if we need to refresh the data\n */\nfunction shouldRefreshSigiliaData(villageId_1) {\n    return __awaiter(this, arguments, void 0, function (villageId, maxAge // 3 hours default (era 30 minutos)\n    ) {\n        var data, lastChecked, currentTime, expirationDate, hoursRemaining;\n        if (maxAge === void 0) { maxAge = 3 * 60 * 60 * 1000; }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getSigiliaData(villageId)];\n                case 1:\n                    data = _a.sent();\n                    if (!data) {\n                        return [2 /*return*/, true]; // No data, need to fetch\n                    }\n                    lastChecked = new Date(data.lastChecked).getTime();\n                    currentTime = new Date().getTime();\n                    // Check if data is expired\n                    if (data.expirationDate) {\n                        expirationDate = new Date(data.expirationDate).getTime();\n                        // Se ainda tem mais de 1 hora de validade, não atualizar\n                        if (expirationDate > currentTime) {\n                            hoursRemaining = (expirationDate - currentTime) / (60 * 60 * 1000);\n                            if (hoursRemaining > 1) {\n                                return [2 /*return*/, false]; // Ainda tem mais de 1 hora, não atualizar\n                            }\n                        }\n                        // Expirado, precisa atualizar\n                        if (expirationDate < currentTime) {\n                            return [2 /*return*/, true];\n                        }\n                    }\n                    // Check if data is too old\n                    return [2 /*return*/, (currentTime - lastChecked) > maxAge];\n            }\n        });\n    });\n}\n/**\n * Deletes the sigilia data for a village\n * @param villageId The ID of the village\n */\nfunction deleteSigiliaData(villageId) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.SIGILIA, villageId)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Clears all sigilia data\n */\nfunction clearAllSigiliaData() {\n    return __awaiter(this, void 0, void 0, function () {\n        var allData, _i, allData_1, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, indexedDB_1.IndexedDBService.getAllValues(constants_1.STORE.SIGILIA)];\n                case 1:\n                    allData = _a.sent();\n                    _i = 0, allData_1 = allData;\n                    _a.label = 2;\n                case 2:\n                    if (!(_i < allData_1.length)) return [3 /*break*/, 5];\n                    data = allData_1[_i];\n                    if (!(data && data.villageId)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, indexedDB_1.IndexedDBService.removeValue(constants_1.STORE.SIGILIA, data.villageId)];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4:\n                    _i++;\n                    return [3 /*break*/, 2];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/storage/services/sigiliaService.ts?')},"./src/tribalkit.ts":function(__unused_webpack_module,exports){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.TribalKitService = void 0;\nvar TribalKitService = /** @class */ (function () {\n    function TribalKitService() {\n        this.tribalKitData = null;\n        this.initializationPromise = null;\n    }\n    TribalKitService.getInstance = function () {\n        if (!TribalKitService.instance) {\n            TribalKitService.instance = new TribalKitService();\n        }\n        return TribalKitService.instance;\n    };\n    TribalKitService.initializeTribalKit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var instance;\n            return __generator(this, function (_a) {\n                instance = this.getInstance();\n                // Se já tiver dados, retorna imediatamente\n                if (instance.tribalKitData) {\n                    return [2 /*return*/, instance.tribalKitData];\n                }\n                // Se já estiver inicializando, retorna a promise existente\n                if (instance.initializationPromise) {\n                    return [2 /*return*/, instance.initializationPromise];\n                }\n                // Inicia nova inicialização\n                instance.initializationPromise = instance.initialize();\n                return [2 /*return*/, instance.initializationPromise];\n            });\n        });\n    };\n    TribalKitService.prototype.initialize = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var retries, baseUrl, url, response, data, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        retries = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(retries < TribalKitService.maxRetries)) return [3 /*break*/, 8];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 7]);\n                        baseUrl = window.location.href;\n                        // Remove # and everything after it from the URL\n                        baseUrl = baseUrl.split(\'#\')[0];\n                        url = "".concat(baseUrl).concat(baseUrl.includes("?") ? "&" : "?", "_partial");\n                        return [4 /*yield*/, fetch(url)];\n                    case 3:\n                        response = _a.sent();\n                        if (!response.ok) {\n                            throw new Error("HTTP error! status: ".concat(response.status));\n                        }\n                        return [4 /*yield*/, response.json()];\n                    case 4:\n                        data = (_a.sent()).game_data;\n                        this.tribalKitData = data;\n                        return [2 /*return*/, data];\n                    case 5:\n                        error_1 = _a.sent();\n                        console.error("Erro ao inicializar TribalKit (tentativa ".concat(retries + 1, "):"), error_1);\n                        retries++;\n                        if (retries >= TribalKitService.maxRetries) {\n                            throw new Error("Falha ao inicializar TribalKit ap\\u00F3s ".concat(TribalKitService.maxRetries, " tentativas"));\n                        }\n                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 1000); })];\n                    case 6:\n                        _a.sent();\n                        return [3 /*break*/, 7];\n                    case 7: return [3 /*break*/, 1];\n                    case 8: throw new Error("Não foi possível inicializar o TribalKit");\n                }\n            });\n        });\n    };\n    Object.defineProperty(TribalKitService, "tribalKit", {\n        // Getter para manter compatibilidade com o código existente\n        get: function () {\n            return TribalKitService.getInstance().tribalKitData;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TribalKitService.maxRetries = 5;\n    TribalKitService.village = null;\n    return TribalKitService;\n}());\nexports.TribalKitService = TribalKitService;\n\n\n//# sourceURL=webpack:///./src/tribalkit.ts?')},"./src/ui/config.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.openConfigDialog = exports.generateComingSoonOverlay = void 0;\nexports.showIntroductionDialog = showIntroductionDialog;\nvar storage_1 = __webpack_require__(/*! ../storage */ \"./src/storage.ts\");\nvar i18n_1 = __webpack_require__(/*! ../i18n */ \"./src/i18n/index.ts\");\nvar stats_1 = __webpack_require__(/*! ../stats */ \"./src/stats.ts\");\nvar notifications_1 = __webpack_require__(/*! ../notifications */ \"./src/notifications.ts\");\nvar discord_webhook_1 = __webpack_require__(/*! ../discord-webhook */ \"./src/discord-webhook.ts\");\nvar tasks_1 = __webpack_require__(/*! ./tasks */ \"./src/ui/tasks.ts\");\nvar adapter_1 = __webpack_require__(/*! ../TaskManager/adapter */ \"./src/TaskManager/adapter.ts\");\nvar dialog_1 = __webpack_require__(/*! ./dialog */ \"./src/ui/dialog.ts\");\nvar sortablejs_1 = __importDefault(__webpack_require__(/*! sortablejs */ \"./node_modules/sortablejs/modular/sortable.esm.js\"));\nvar config_1 = __webpack_require__(/*! ../config */ \"./src/config.ts\");\n/**\n * Gera um overlay de \"Coming Soon\" que pode ser usado em tabs ou cards específicos\n * @param icon - Emoji ou ícone a ser exibido\n * @param title - Título principal (padrão: \"Coming Soon\")\n * @param description - Descrição opcional\n * @returns HTML do overlay\n */\nvar generateComingSoonOverlay = function (icon, title, description) {\n    if (icon === void 0) { icon = '🚧'; }\n    if (title === void 0) { title = i18n_1.i18n.t('general.comingSoon') || 'Coming Soon'; }\n    if (description === void 0) { description = ''; }\n    return \"\\n    <div class=\\\"coming-soon-overlay\\\">\\n      <div class=\\\"coming-soon-icon\\\">\".concat(icon, \"</div>\\n      <div class=\\\"coming-soon-text\\\">\").concat(title, \"</div>\\n      \").concat(description ? \"<div class=\\\"coming-soon-description\\\">\".concat(description, \"</div>\") : '', \"\\n    </div>\\n  \");\n};\nexports.generateComingSoonOverlay = generateComingSoonOverlay;\nvar ConfigDialog = /** @class */ (function () {\n    function ConfigDialog() {\n        this.taskUpdateInterval = null;\n        this.config = storage_1.AutoDodgeStorage.loadConfig();\n        this.stats = this.verifyStats(storage_1.AutoDodgeStorage.loadStats());\n        this.renderDialog();\n        this.elements = this.initializeElements();\n    }\n    ConfigDialog.prototype.renderDialog = function () {\n        // Generate and insert dialog HTML\n        var dialogHTML = (0, dialog_1.generateDialogHtml)(this.config, this.stats);\n        document.body.insertAdjacentHTML('beforeend', dialogHTML);\n    };\n    ConfigDialog.prototype.initializeElements = function () {\n        return {\n            container: document.getElementById('autodefense_config_container'),\n            saveButton: document.getElementById('saveAutoDefenseConfigBtn'),\n            closeButtons: [\n                document.getElementById('closeAutoDefenseConfigBtnX'),\n                document.getElementById('closeAutoDefenseBtn2')\n            ].filter(function (btn) { return btn !== null; }),\n            navButtons: document.querySelectorAll('.nav-button'),\n            tabContents: document.querySelectorAll('.tab-content'),\n            settingsTabs: document.querySelectorAll('.settings-tab')\n        };\n    };\n    ConfigDialog.prototype.verifyStats = function (statsToVerify) {\n        var verifiedStats = __assign({}, statsToVerify);\n        if (verifiedStats.successfulDodges > verifiedStats.totalDodges) {\n            console.warn(i18n_1.i18n.t('settings.messages.inconsistentDodgeStats'));\n            verifiedStats.totalDodges = verifiedStats.successfulDodges;\n        }\n        if (verifiedStats.successfulCancels > verifiedStats.totalCancels) {\n            console.warn(i18n_1.i18n.t('settings.messages.inconsistentCancelStats'));\n            verifiedStats.totalCancels = verifiedStats.successfulCancels;\n        }\n        verifiedStats.totalDodges = verifiedStats.successfulDodges + verifiedStats.failedDodges;\n        verifiedStats.totalCancels = verifiedStats.successfulCancels + verifiedStats.failedCancels;\n        return verifiedStats;\n    };\n    ConfigDialog.prototype.setupEventListeners = function () {\n        var _this = this;\n        var _a;\n        // Save button\n        (_a = this.elements.saveButton) === null || _a === void 0 ? void 0 : _a.addEventListener('click', function () {\n            _this.saveConfig();\n            _this.close();\n        });\n        // Close buttons\n        this.elements.closeButtons.forEach(function (btn) {\n            btn.addEventListener('click', function () { return _this.close(); });\n        });\n        // Navigation buttons\n        this.elements.navButtons.forEach(function (button) {\n            button.addEventListener('click', function (e) { return _this.handleNavButtonClick(e); });\n        });\n        // Settings tabs\n        this.elements.settingsTabs.forEach(function (tab) {\n            tab.addEventListener('click', function (e) { return _this.handleSettingsTabClick(e); });\n        });\n        // Other specific listeners\n        this.setupSpecificListeners();\n    };\n    ConfigDialog.prototype.handleNavButtonClick = function (event) {\n        var _a;\n        var button = event.currentTarget;\n        var tabId = button.getAttribute('data-tab');\n        this.elements.navButtons.forEach(function (btn) { return btn.classList.remove('active'); });\n        button.classList.add('active');\n        this.elements.tabContents.forEach(function (tab) { return tab.classList.remove('active'); });\n        if (tabId) {\n            (_a = document.getElementById(tabId)) === null || _a === void 0 ? void 0 : _a.classList.add('active');\n        }\n    };\n    ConfigDialog.prototype.handleSettingsTabClick = function (event) {\n        var _a;\n        var tab = event.currentTarget;\n        var tabId = tab.getAttribute('data-settings-tab');\n        this.elements.settingsTabs.forEach(function (t) { return t.classList.remove('active'); });\n        tab.classList.add('active');\n        var tabContents = document.querySelectorAll('.settings-tab-content');\n        tabContents.forEach(function (content) { return content.classList.remove('active'); });\n        if (tabId) {\n            (_a = document.getElementById(\"\".concat(tabId, \"-settings\"))) === null || _a === void 0 ? void 0 : _a.classList.add('active');\n        }\n    };\n    ConfigDialog.prototype.setupSpecificListeners = function () {\n        var _this = this;\n        var _a, _b, _c;\n        // Test notification\n        (_a = document.getElementById('test_notification')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', notifications_1.testNotification);\n        // Test Discord webhook\n        (_b = document.getElementById('test_discord_webhook')) === null || _b === void 0 ? void 0 : _b.addEventListener('click', discord_webhook_1.testDiscordWebhook);\n        // Reset stats\n        (_c = document.getElementById('reset-stats')) === null || _c === void 0 ? void 0 : _c.addEventListener('click', function () {\n            if (confirm(i18n_1.i18n.t('settings.confirmations.resetStats'))) {\n                (0, stats_1.resetStats)();\n                _this.stats = storage_1.AutoDodgeStorage.loadStats();\n                _this.refreshUI();\n            }\n        });\n        // Setup buttons for adding names to whitelist and blacklist\n        this.setupListButtons();\n        // Setup notification sound type change\n        var notificationSoundSelector = document.getElementById('notification_sound');\n        var customSoundInput = document.getElementById('custom_notification_sound');\n        if (notificationSoundSelector && customSoundInput) {\n            notificationSoundSelector.addEventListener('change', function () {\n                customSoundInput.style.display = notificationSoundSelector.value === 'custom' ? 'block' : 'none';\n            });\n        }\n        // Setup toggle switches for all checkboxes\n        this.setupToggleSwitches();\n        // Toggle visibility of whitelist/blacklist containers based on enabled checkboxes\n        this.setupListVisibility();\n        // Module-related listeners\n        this.setupModuleListeners();\n    };\n    ConfigDialog.prototype.setupToggleSwitches = function () {\n        // Get all toggle switch containers\n        var toggleSwitches = document.querySelectorAll('.toggle-switch');\n        // Add click handler to each toggle switch\n        toggleSwitches.forEach(function (toggleSwitch) {\n            // Find the checkbox inside the toggle switch\n            var checkbox = toggleSwitch.querySelector('input[type=\"checkbox\"]');\n            if (!checkbox)\n                return;\n            // Make the entire toggle switch container clickable\n            toggleSwitch.addEventListener('click', function (event) {\n                // Prevent default to avoid double-toggling if the actual checkbox is clicked\n                event.preventDefault();\n                // Toggle the checkbox state\n                checkbox.checked = !checkbox.checked;\n                // Dispatch change event to trigger any listeners\n                checkbox.dispatchEvent(new Event('change'));\n            });\n            // Also handle direct clicks on the checkbox itself\n            checkbox.addEventListener('click', function (event) {\n                // Stop propagation to avoid double-toggling when the container handles the click\n                event.stopPropagation();\n            });\n        });\n    };\n    ConfigDialog.prototype.setupListButtons = function () {\n        var _this = this;\n        // Setup whitelist add button\n        var addWhitelistButton = document.getElementById('add_dodge_whitelist');\n        if (addWhitelistButton) {\n            addWhitelistButton.addEventListener('click', function () {\n                _this.addNameToList('whitelist');\n            });\n        }\n        // Setup blacklist add button\n        var addBlacklistButton = document.getElementById('add_dodge_blacklist');\n        if (addBlacklistButton) {\n            addBlacklistButton.addEventListener('click', function () {\n                _this.addNameToList('blacklist');\n            });\n        }\n        // Add initial list items for whitelist\n        this.renderListItems('whitelist', this.config.DODGE_WHITELIST);\n        // Add initial list items for blacklist\n        this.renderListItems('blacklist', this.config.DODGE_BLACKLIST);\n    };\n    ConfigDialog.prototype.addNameToList = function (listType) {\n        var _this = this;\n        // Criar um diálogo de entrada personalizado\n        var dialogTitle = listType === 'whitelist'\n            ? i18n_1.i18n.t('settings.filters.addWhitelistName')\n            : i18n_1.i18n.t('settings.filters.addBlacklistName');\n        var dialogHTML = \"\\n      <div id=\\\"ad-name-input-dialog\\\" class=\\\"ad-modal-overlay\\\">\\n        <div class=\\\"ad-modal-content\\\">\\n          <div class=\\\"ad-modal-header\\\">\\n            <h3>\".concat(dialogTitle, \"</h3>\\n            <button class=\\\"ad-modal-close\\\">\\u00D7</button>\\n          </div>\\n          <div class=\\\"ad-modal-body\\\">\\n            <p>\").concat(i18n_1.i18n.t('settings.filters.nameInputDescription'), \"</p>\\n            <input type=\\\"text\\\" id=\\\"ad-new-player-name\\\" class=\\\"ad-name-input-field\\\" placeholder=\\\"\").concat(i18n_1.i18n.t('settings.filters.nameInputPlaceholder'), \"\\\">\\n          </div>\\n          <div class=\\\"ad-modal-footer\\\">\\n            <button id=\\\"ad-cancel-add-name\\\" class=\\\"ad-btn-cancel\\\">\").concat(i18n_1.i18n.t('general.cancel'), \"</button>\\n            <button id=\\\"ad-confirm-add-name\\\" class=\\\"ad-btn-confirm\\\">\").concat(i18n_1.i18n.t('general.add'), \"</button>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n        // Adicionar o diálogo ao DOM\n        document.body.insertAdjacentHTML('beforeend', dialogHTML);\n        // Obter elementos\n        var dialog = document.getElementById('ad-name-input-dialog');\n        var input = document.getElementById('ad-new-player-name');\n        var closeBtn = dialog === null || dialog === void 0 ? void 0 : dialog.querySelector('.ad-modal-close');\n        var cancelBtn = document.getElementById('ad-cancel-add-name');\n        var confirmBtn = document.getElementById('ad-confirm-add-name');\n        // Focar no campo de entrada\n        input === null || input === void 0 ? void 0 : input.focus();\n        // Função para fechar e limpar o diálogo\n        var closeDialog = function () {\n            if (dialog) {\n                dialog.remove();\n            }\n        };\n        // Ação ao confirmar\n        var confirmAction = function () {\n            var playerName = (input === null || input === void 0 ? void 0 : input.value.trim()) || '';\n            if (playerName !== '') {\n                // Adicionar à UI\n                _this.addNameToListUI(listType, playerName);\n                // Atualizar a configuração\n                if (listType === 'whitelist') {\n                    _this.config.DODGE_WHITELIST.push(playerName);\n                }\n                else {\n                    _this.config.DODGE_BLACKLIST.push(playerName);\n                }\n            }\n            closeDialog();\n        };\n        // Adicionar eventos\n        closeBtn === null || closeBtn === void 0 ? void 0 : closeBtn.addEventListener('click', closeDialog);\n        cancelBtn === null || cancelBtn === void 0 ? void 0 : cancelBtn.addEventListener('click', closeDialog);\n        confirmBtn === null || confirmBtn === void 0 ? void 0 : confirmBtn.addEventListener('click', confirmAction);\n        // Adicionar evento para tecla enter\n        input === null || input === void 0 ? void 0 : input.addEventListener('keydown', function (event) {\n            if (event.key === 'Enter') {\n                confirmAction();\n            }\n            else if (event.key === 'Escape') {\n                closeDialog();\n            }\n        });\n        // Fechar ao clicar fora do diálogo\n        dialog === null || dialog === void 0 ? void 0 : dialog.addEventListener('click', function (event) {\n            if (event.target === dialog) {\n                closeDialog();\n            }\n        });\n    };\n    ConfigDialog.prototype.addNameToListUI = function (listType, name) {\n        var _this = this;\n        var listContainer = document.getElementById(\"dodge_\".concat(listType));\n        if (!listContainer)\n            return;\n        var nameContainer = document.createElement('div');\n        nameContainer.className = 'dodge-name-container';\n        nameContainer.innerHTML = \"\\n      <input type=\\\"text\\\" class=\\\"dodge-name-input\\\" value=\\\"\".concat(name, \"\\\" style=\\\"width:80%;\\\">\\n      <a href=\\\"#\\\" class=\\\"ad-remove-name\\\">\\u00D7</a>\\n    \");\n        var removeButton = nameContainer.querySelector('.ad-remove-name');\n        if (removeButton) {\n            removeButton.addEventListener('click', function (event) {\n                event.preventDefault();\n                _this.removeNameFromList(listType, nameContainer);\n            });\n        }\n        listContainer.appendChild(nameContainer);\n    };\n    ConfigDialog.prototype.removeNameFromList = function (listType, container) {\n        var input = container.querySelector('.dodge-name-input');\n        if (!input)\n            return;\n        var value = input.value;\n        // Remove from UI\n        container.remove();\n        // Remove from config\n        if (listType === 'whitelist') {\n            this.config.DODGE_WHITELIST = this.config.DODGE_WHITELIST.filter(function (name) { return name !== value; });\n        }\n        else {\n            this.config.DODGE_BLACKLIST = this.config.DODGE_BLACKLIST.filter(function (name) { return name !== value; });\n        }\n    };\n    ConfigDialog.prototype.renderListItems = function (listType, items) {\n        var _this = this;\n        items.forEach(function (item) {\n            _this.addNameToListUI(listType, item);\n        });\n    };\n    ConfigDialog.prototype.setupListVisibility = function () {\n        // Setup whitelist visibility toggle\n        var whitelistEnabledCheckbox = document.getElementById('dodge_whitelist_enabled');\n        var whitelistContainer = document.getElementById('dodge_whitelist_container');\n        if (whitelistEnabledCheckbox && whitelistContainer) {\n            // Initial state\n            whitelistContainer.style.display = whitelistEnabledCheckbox.checked ? 'block' : 'none';\n            // Add change listener\n            whitelistEnabledCheckbox.addEventListener('change', function () {\n                whitelistContainer.style.display = whitelistEnabledCheckbox.checked ? 'block' : 'none';\n            });\n        }\n        // Setup blacklist visibility toggle\n        var blacklistEnabledCheckbox = document.getElementById('dodge_blacklist_enabled');\n        var blacklistContainer = document.getElementById('dodge_blacklist_container');\n        if (blacklistEnabledCheckbox && blacklistContainer) {\n            // Initial state\n            blacklistContainer.style.display = blacklistEnabledCheckbox.checked ? 'block' : 'none';\n            // Add change listener\n            blacklistEnabledCheckbox.addEventListener('change', function () {\n                blacklistContainer.style.display = blacklistEnabledCheckbox.checked ? 'block' : 'none';\n            });\n        }\n        // Setup noble filter keywords visibility\n        var nobleFilterEnabledCheckbox = document.getElementById('noble_filter_enabled');\n        var nobleKeywordsContainer = document.querySelector('.noble-keywords-container');\n        if (nobleFilterEnabledCheckbox && nobleKeywordsContainer) {\n            // Initial state\n            nobleKeywordsContainer.style.display = nobleFilterEnabledCheckbox.checked ? 'block' : 'none';\n            // Add change listener\n            nobleFilterEnabledCheckbox.addEventListener('change', function () {\n                nobleKeywordsContainer.style.display = nobleFilterEnabledCheckbox.checked ? 'block' : 'none';\n            });\n        }\n        // Setup noble snipe settings visibility\n        var nobleSnipeEnabledCheckbox = document.getElementById('noble_snipe_enabled');\n        var nobleSettingsContainer = document.getElementById('noble_settings_container');\n        if (nobleSnipeEnabledCheckbox && nobleSettingsContainer) {\n            // Initial state\n            nobleSettingsContainer.style.display = nobleSnipeEnabledCheckbox.checked ? 'block' : 'none';\n            // Add change listener\n            nobleSnipeEnabledCheckbox.addEventListener('change', function () {\n                nobleSettingsContainer.style.display = nobleSnipeEnabledCheckbox.checked ? 'block' : 'none';\n            });\n        }\n    };\n    ConfigDialog.prototype.initTaskUpdates = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var actions;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, (0, adapter_1.getNextActionsWithTaskManager)()];\n                    case 1:\n                        actions = _a.sent();\n                        (0, tasks_1.updateTasksList)(actions);\n                        this.taskUpdateInterval = window.setInterval(function () { return __awaiter(_this, void 0, void 0, function () {\n                            var actions;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, (0, adapter_1.getNextActionsWithTaskManager)()];\n                                    case 1:\n                                        actions = _a.sent();\n                                        (0, tasks_1.updateTasksList)(actions);\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); }, 1000);\n                        if (this.elements.container) {\n                            this.elements.container.setAttribute('data-interval-id', this.taskUpdateInterval.toString());\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ConfigDialog.prototype.saveConfig = function () {\n        try {\n            // First collect all noble keywords\n            var nobleKeywordsList = document.getElementById('noble_treated_keywords');\n            var nobleKeywords_1 = [];\n            if (nobleKeywordsList) {\n                var nobleKeywordInputs = nobleKeywordsList.querySelectorAll('.keyword-input');\n                nobleKeywordInputs.forEach(function (input) {\n                    var inputElement = input;\n                    var value = inputElement.value.trim();\n                    if (value) {\n                        nobleKeywords_1.push(value);\n                    }\n                });\n            }\n            // Get updated noble train patterns from UI cards\n            var nobleTrainPatterns_1 = {};\n            var patternCards = document.querySelectorAll('.pattern-card');\n            patternCards.forEach(function (card) {\n                var pattern = card.getAttribute('data-pattern');\n                if (!pattern)\n                    return;\n                // Get selected positions\n                var selectedPositions = Array.from(card.querySelectorAll('.target-position.selected'))\n                    .map(function (pos) { return parseInt(pos.getAttribute('data-position') || '0', 10); });\n                // Get selected action\n                var actionSelect = card.querySelector('.pattern-action-select');\n                var action = actionSelect ? actionSelect.value : 'dodge';\n                // Get enabled state from checkbox\n                var enabledToggle = card.querySelector('.pattern-enabled');\n                var isEnabled = enabledToggle ? enabledToggle.checked : true;\n                nobleTrainPatterns_1[pattern] = {\n                    snipePositions: selectedPositions,\n                    action: action,\n                    enabled: isEnabled\n                };\n            });\n            // Update the config with the noble train patterns\n            this.config.NOBLE_TRAIN_PATTERNS = nobleTrainPatterns_1;\n            // Update condition settings\n            var nobleSrideConditionEnabled = document.getElementById('condition_nobleTrain');\n            if (nobleSrideConditionEnabled) {\n                this.config.CONDITIONS_ENABLED = __assign(__assign({}, this.config.CONDITIONS_ENABLED), { nobleTrain: nobleSrideConditionEnabled.checked });\n            }\n            // Update the config object with the noble keywords and filter enabled setting\n            var nobleFilterEnabledElement = document.getElementById('noble_filter_enabled');\n            if (nobleFilterEnabledElement) {\n                this.config.NOBLE_FILTER_ENABLED = nobleFilterEnabledElement.checked;\n            }\n            // Set the noble keywords in the config\n            this.config.NOBLE_TREATED_KEYWORDS = __spreadArray([], nobleKeywords_1, true);\n            // Get noble snipe settings\n            var nobleSnipeEnabled = document.getElementById('noble_snipe_enabled');\n            var nobleSnipeAutoMode = document.getElementById('noble_snipe_auto_mode');\n            var clickOffset = document.getElementById('noble_snipe_offset');\n            var nobleSnipeOffset = document.getElementById('noble_snipe_noble_snipe_offset');\n            var timeBeforeStarting = document.getElementById('noble_snipe_time_before_starting');\n            var minIntervalBetweenSnipes = document.getElementById('noble_snipe_min_interval_between_snipes');\n            var maxAttackProximity = document.getElementById('noble_snipe_max_attack_proximity');\n            var maxAttempts = document.getElementById('noble_snipe_max_attempts');\n            // Update noble snipe config\n            if (nobleSnipeEnabled)\n                this.config.NOBLE_SNIPE_ENABLED = nobleSnipeEnabled.checked;\n            if (nobleSnipeAutoMode)\n                this.config.NOBLE_SNIPE_AUTO_MODE = nobleSnipeAutoMode.checked;\n            if (clickOffset)\n                this.config.CLICK_OFFSET = parseInt(clickOffset.value, 10) || 0;\n            if (nobleSnipeOffset)\n                this.config.NOBLE_SNIPE_OFFSET = parseInt(nobleSnipeOffset.value, 10) || 0;\n            if (timeBeforeStarting)\n                this.config.NOBLE_SNIPE_TIME_BEFORE_STARTING = (parseInt(timeBeforeStarting.value, 10) || 30) * 1000;\n            if (minIntervalBetweenSnipes)\n                this.config.NOBLE_SNIPE_MIN_INTERVAL_BETWEEN_SNIPES = (parseInt(minIntervalBetweenSnipes.value, 10) || 5) * 1000;\n            if (maxAttackProximity)\n                this.config.NOBLE_SNIPE_MAX_ATTACK_PROXIMITY = parseInt(maxAttackProximity.value, 10) || 3;\n            if (maxAttempts)\n                this.config.NOBLE_SNIPE_MAX_ATTEMPTS = parseInt(maxAttempts.value, 10) || 3;\n            // Save the config BEFORE calling closeAutoDefenseConfig\n            // This ensures our changes aren't overwritten by other config saving logic\n            storage_1.AutoDodgeStorage.saveConfig(this.config);\n            // Now call the general config save method\n            (0, config_1.saveAutoDefenseConfig)();\n            // Check if our changes were preserved\n            var configAfterSave = storage_1.AutoDodgeStorage.loadConfig();\n            // Final verification - if the keywords or patterns were lost, save them again\n            var needsResave = false;\n            if (JSON.stringify(configAfterSave.NOBLE_TREATED_KEYWORDS) !== JSON.stringify(nobleKeywords_1)) {\n                configAfterSave.NOBLE_TREATED_KEYWORDS = __spreadArray([], nobleKeywords_1, true);\n                needsResave = true;\n            }\n            if (JSON.stringify(configAfterSave.NOBLE_TRAIN_PATTERNS) !== JSON.stringify(nobleTrainPatterns_1)) {\n                // Make sure to preserve the enabled property when updating\n                configAfterSave.NOBLE_TRAIN_PATTERNS = __assign({}, nobleTrainPatterns_1);\n                needsResave = true;\n            }\n            if (needsResave) {\n                storage_1.AutoDodgeStorage.saveConfig(configAfterSave);\n            }\n        }\n        catch (error) {\n            console.error(\"Error saving config:\", error);\n            UI.ErrorMessage(i18n_1.i18n.t('settings.messages.errorSavingConfig'));\n        }\n    };\n    ConfigDialog.prototype.getListValues = function (listType) {\n        var container = document.getElementById(\"dodge_\".concat(listType, \"_container\"));\n        if (!container)\n            return [];\n        return Array.from(container.querySelectorAll('.dodge-name-input'))\n            .map(function (input) { return input.value; })\n            .filter(function (value) { return value.trim() !== ''; });\n    };\n    ConfigDialog.prototype.getNoblePatterns = function () {\n        var container = document.getElementById('noble-patterns-list');\n        if (!container)\n            return [];\n        return Array.from(container.querySelectorAll('.pattern-item'))\n            .map(function (item) {\n            var _a, _b;\n            var pattern = item.getAttribute('data-pattern') || '';\n            var positions = (_a = item.querySelector('.positions-input')) === null || _a === void 0 ? void 0 : _a.value.split(',').map(Number).filter(function (n) { return !isNaN(n); });\n            var action = (_b = item.querySelector('.action-select')) === null || _b === void 0 ? void 0 : _b.value;\n            return { pattern: pattern, positions: positions, action: action };\n        })\n            .filter(function (pattern) { return pattern.pattern && pattern.positions && pattern.action; });\n    };\n    ConfigDialog.prototype.refreshUI = function () {\n        // Refresh all UI elements with current values\n        this.config = storage_1.AutoDodgeStorage.loadConfig();\n        this.stats = this.verifyStats(storage_1.AutoDodgeStorage.loadStats());\n        // Reload all elements\n        this.elements = this.initializeElements();\n        // Setup events again\n        this.setupEventListeners();\n        // Update UI with current config values\n        this.updateUIWithConfig();\n    };\n    ConfigDialog.prototype.updateUIWithConfig = function () {\n        // Helper to update checkbox states\n        var updateCheckbox = function (id, value) {\n            var element = document.getElementById(id);\n            if (element) {\n                element.checked = value;\n            }\n        };\n        // Helper to update input values\n        var updateInput = function (id, value) {\n            var element = document.getElementById(id);\n            if (element) {\n                element.value = value.toString();\n            }\n        };\n        // Update general settings\n        updateCheckbox('show_overlay', this.config.SHOW_OVERLAY);\n        updateCheckbox('single_tab_lock', this.config.SINGLE_TAB_LOCK_ENABLED);\n        updateCheckbox('dev_mode', this.config.DEV_MODE);\n        // Update language selector\n        var languageSelector = document.getElementById('language_selector');\n        if (languageSelector) {\n            languageSelector.value = this.config.LANGUAGE;\n        }\n        // Update filter settings\n        updateCheckbox('dodge_whitelist_enabled', this.config.DODGE_WHITELIST_ENABLED);\n        updateCheckbox('dodge_blacklist_enabled', this.config.DODGE_BLACKLIST_ENABLED);\n        updateCheckbox('ignore_own_commands', this.config.IGNORE_OWN_COMMANDS);\n        updateCheckbox('allow_night_bonus', this.config.ALLOW_NIGHT_BONUS);\n        // Update timing settings\n        updateInput('dodge_time', this.config.DODGE_TIME);\n        updateInput('min_cancel_buffer', this.config.MIN_CANCEL_BUFFER);\n        updateInput('action_delay', this.config.ACTION_DELAY);\n        updateInput('redirect_delay', this.config.REDIRECT_DELAY);\n        updateInput('planning_window', this.config.PLANNING_WINDOW / 60);\n        updateInput('cancel_delay_fraction', this.config.CANCEL_DELAY_FRACTION);\n        updateInput('max_cancel_attempts', this.config.MAX_CANCEL_ATTEMPTS);\n        updateInput('min_dodge_time', this.config.MIN_DODGE_TIME);\n        // Update renamer settings\n        updateCheckbox('auto_rename_new_attacks', this.config.AUTO_RENAME_NEW_ATTACKS);\n        updateCheckbox('rename_completed_commands', this.config.RENAME_COMPLETED_COMMANDS);\n        updateInput('completed_command_suffix', this.config.COMPLETED_COMMAND_SUFFIX);\n        updateInput('completed_snipe_suffix', this.config.COMPLETED_SNIPE_SUFFIX);\n        // Update notification settings\n        updateCheckbox('notifications_enabled', this.config.NOTIFICATIONS_ENABLED);\n        updateCheckbox('notify_dodge', this.config.NOTIFY_DODGE);\n        updateCheckbox('notify_cancel', this.config.NOTIFY_CANCEL);\n        updateInput('notification_seconds_dodge', this.config.NOTIFICATION_SECONDS_DODGE);\n        updateInput('notification_seconds_cancel', this.config.NOTIFICATION_SECONDS_CANCEL);\n        // Update notification type and sound\n        var notificationType = document.getElementById('notification_type');\n        if (notificationType) {\n            notificationType.value = this.config.NOTIFICATION_TYPE;\n        }\n        var notificationSound = document.getElementById('notification_sound');\n        if (notificationSound) {\n            notificationSound.value = this.config.NOTIFICATION_SOUND === 'default' ? 'default' : 'custom';\n            var customSoundInput = document.getElementById('custom_notification_sound');\n            if (customSoundInput && this.config.NOTIFICATION_SOUND !== 'default') {\n                customSoundInput.value = this.config.NOTIFICATION_SOUND;\n                customSoundInput.style.display = 'block';\n            }\n            else if (customSoundInput) {\n                customSoundInput.style.display = 'none';\n            }\n        }\n        // Update Discord webhook settings\n        updateCheckbox('discord_webhook_enabled', this.config.DISCORD_WEBHOOK_ENABLED);\n        updateInput('discord_webhook_url', this.config.DISCORD_WEBHOOK_URL);\n        updateCheckbox('discord_notify_dodge', this.config.DISCORD_NOTIFY_DODGE);\n        updateCheckbox('discord_notify_cancel', this.config.DISCORD_NOTIFY_CANCEL);\n        updateCheckbox('discord_notify_failure', this.config.DISCORD_NOTIFY_FAILURE);\n        updateCheckbox('discord_notify_completion', this.config.DISCORD_NOTIFY_COMPLETION);\n        updateCheckbox('discord_notify_snipe', this.config.DISCORD_NOTIFY_SNIPE);\n        // Update other modules settings\n        updateCheckbox('noble_filter_enabled', this.config.NOBLE_FILTER_ENABLED);\n        // Update debug window\n        updateCheckbox('debug_window_enabled', this.config.DEBUG_WINDOW_ENABLED);\n        // Update noble snipe settings\n        updateCheckbox('noble_snipe_enabled', this.config.NOBLE_SNIPE_ENABLED);\n        updateCheckbox('noble_snipe_auto_mode', this.config.NOBLE_SNIPE_AUTO_MODE);\n        // Update noble snipe timing settings\n        updateInput('noble_snipe_offset', this.config.CLICK_OFFSET);\n        updateInput('noble_snipe_noble_snipe_offset', this.config.NOBLE_SNIPE_OFFSET);\n        updateInput('noble_snipe_time_before_starting', this.config.NOBLE_SNIPE_TIME_BEFORE_STARTING / 1000);\n        updateInput('noble_snipe_min_interval_between_snipes', this.config.NOBLE_SNIPE_MIN_INTERVAL_BETWEEN_SNIPES / 1000);\n        updateInput('noble_snipe_max_attack_proximity', this.config.NOBLE_SNIPE_MAX_ATTACK_PROXIMITY);\n        updateInput('noble_snipe_max_attempts', this.config.NOBLE_SNIPE_MAX_ATTEMPTS);\n        // Update condition enabled settings\n        updateCheckbox('condition_nobleTrain', this.config.CONDITIONS_ENABLED.nobleTrain);\n        // Update noble train patterns list\n        this.updateNobleTrainPatternsList();\n        // Trigger visibility toggles\n        this.setupListVisibility();\n    };\n    ConfigDialog.prototype.updateNobleTrainPatternsList = function () {\n        // This function is replaced by our new interactive pattern library\n        // We'll handle pattern display in a different way now\n        this.updatePatternCount();\n    };\n    ConfigDialog.prototype.updatePatternCount = function () {\n        var patternCountElement = document.getElementById('pattern-count');\n        var patternsGrid = document.getElementById('patterns-grid');\n        if (patternCountElement && patternsGrid) {\n            var count = patternsGrid.querySelectorAll('.pattern-card').length;\n            patternCountElement.textContent = count.toString();\n        }\n    };\n    ConfigDialog.prototype.close = function () {\n        var _a;\n        if (this.taskUpdateInterval) {\n            clearInterval(this.taskUpdateInterval);\n        }\n        (_a = this.elements.container) === null || _a === void 0 ? void 0 : _a.remove();\n    };\n    ConfigDialog.open = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var dialog;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dialog = new ConfigDialog();\n                        return [4 /*yield*/, dialog.initTaskUpdates()];\n                    case 1:\n                        _a.sent();\n                        dialog.setupEventListeners();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ConfigDialog.prototype.setupModuleListeners = function () {\n        // Noble Filter module toggle\n        var nobleFilterToggle = document.getElementById('noble_filter_enabled');\n        if (nobleFilterToggle) {\n            nobleFilterToggle.addEventListener('change', function (e) {\n                var _a, _b;\n                var target = e.target;\n                var settingsContainer = document.getElementById('noble-filter-settings');\n                if (settingsContainer) {\n                    settingsContainer.style.display = target.checked ? '' : 'none';\n                }\n                // Update the status indicator\n                var statusIndicator = (_a = nobleFilterToggle.closest('.module-card')) === null || _a === void 0 ? void 0 : _a.querySelector('.status-indicator');\n                var statusText = (_b = nobleFilterToggle.closest('.module-card')) === null || _b === void 0 ? void 0 : _b.querySelector('.module-status span');\n                if (statusIndicator) {\n                    if (target.checked) {\n                        statusIndicator.classList.remove('status-disabled');\n                        statusIndicator.classList.add('status-enabled');\n                        if (statusText) {\n                            statusText.textContent = i18n_1.i18n.t('settings.modules.moduleEnabled');\n                        }\n                    }\n                    else {\n                        statusIndicator.classList.remove('status-enabled');\n                        statusIndicator.classList.add('status-disabled');\n                        if (statusText) {\n                            statusText.textContent = i18n_1.i18n.t('settings.modules.moduleDisabled');\n                        }\n                    }\n                }\n            });\n        }\n        // Settings toggle button\n        var toggleNobleSettings = document.getElementById('toggle-noble-settings');\n        if (toggleNobleSettings) {\n            toggleNobleSettings.addEventListener('click', function () {\n                var settingsContent = document.getElementById('noble-settings-content');\n                if (settingsContent) {\n                    var isExpanded = settingsContent.classList.contains('expanded');\n                    if (isExpanded) {\n                        settingsContent.classList.remove('expanded');\n                        settingsContent.classList.add('collapsed');\n                        toggleNobleSettings.textContent = '+';\n                    }\n                    else {\n                        settingsContent.classList.remove('collapsed');\n                        settingsContent.classList.add('expanded');\n                        toggleNobleSettings.textContent = '-';\n                    }\n                }\n            });\n        }\n        // Noble keywords management\n        this.setupNobleKeywordsListeners();\n        // Noble snipe tab setup\n        this.setupNobleSnipeListeners();\n    };\n    ConfigDialog.prototype.setupNobleKeywordsListeners = function () {\n        var _this = this;\n        // Add noble keyword button\n        var addNobleKeywordButton = document.getElementById('add_noble_keyword');\n        if (addNobleKeywordButton) {\n            addNobleKeywordButton.addEventListener('click', function () {\n                var keywordsList = document.getElementById('noble_treated_keywords');\n                if (keywordsList) {\n                    var newKeywordItem = document.createElement('div');\n                    newKeywordItem.className = 'keyword-item';\n                    newKeywordItem.innerHTML = \"\\n            <input type=\\\"text\\\" class=\\\"keyword-input\\\" value=\\\"\\\">\\n            <a class=\\\"keyword-remove remove-noble-keyword\\\">\\u00D7</a>\\n          \";\n                    keywordsList.appendChild(newKeywordItem);\n                    // Focus the new input\n                    var input = newKeywordItem.querySelector('input');\n                    if (input) {\n                        input.focus();\n                    }\n                    // Setup remove listener for the new item\n                    _this.setupRemoveKeywordListener(newKeywordItem.querySelector('.remove-noble-keyword'));\n                }\n            });\n        }\n        // Setup remove listeners for existing keywords\n        document.querySelectorAll('.remove-noble-keyword').forEach(function (item) {\n            _this.setupRemoveKeywordListener(item);\n        });\n    };\n    ConfigDialog.prototype.setupRemoveKeywordListener = function (element) {\n        if (element) {\n            element.addEventListener('click', function (e) {\n                var keywordItem = e.target.closest('.keyword-item');\n                if (keywordItem && keywordItem.parentNode) {\n                    keywordItem.parentNode.removeChild(keywordItem);\n                }\n            });\n        }\n    };\n    // Add a new method for handling noble snipe-specific interactions\n    ConfigDialog.prototype.setupNobleSnipeListeners = function () {\n        // Handle noble snipe toggle visibility\n        var nobleSnipeEnabledCheckbox = document.getElementById('noble_snipe_enabled');\n        var nobleSettingsContainer = document.getElementById('noble_settings_container');\n        if (nobleSnipeEnabledCheckbox && nobleSettingsContainer) {\n            // This handler is already set up in setupListVisibility, but we'll add pattern-related functionality here\n            nobleSnipeEnabledCheckbox.addEventListener('change', function () {\n                nobleSettingsContainer.style.display = nobleSnipeEnabledCheckbox.checked ? 'block' : 'none';\n            });\n        }\n        // Handle tab switching in noble snipe settings\n        document.querySelectorAll('.settings-tab').forEach(function (tab) {\n            tab.addEventListener('click', function (e) {\n                var target = e.currentTarget;\n                var tabId = target.getAttribute('data-settings-tab');\n                // Deactivate all tabs and contents\n                document.querySelectorAll('.settings-tab').forEach(function (t) { return t.classList.remove('active'); });\n                document.querySelectorAll('.settings-tab-content').forEach(function (c) { return c.classList.remove('active'); });\n                // Activate the selected tab and content\n                target.classList.add('active');\n                if (tabId) {\n                    var contentElement = document.getElementById(\"\".concat(tabId, \"-settings\"));\n                    if (contentElement) {\n                        contentElement.classList.add('active');\n                    }\n                }\n            });\n        });\n        // Handle noble train pattern management\n        this.setupNobleTrainPatternListeners();\n    };\n    ConfigDialog.prototype.setupNobleTrainPatternListeners = function () {\n        this.initDragAndDropPatternBuilder();\n        this.initPatternControls();\n        this.initPatternLibrary();\n        this.updatePatternCount();\n    };\n    ConfigDialog.prototype.initDragAndDropPatternBuilder = function () {\n        var _this = this;\n        var patternSlots = document.getElementById('pattern-builder-slots');\n        if (!patternSlots)\n            return;\n        // Create a Sortable instance for pattern slots\n        sortablejs_1.default.create(patternSlots, {\n            animation: 150,\n            ghostClass: 'drop-hover',\n            group: 'pattern-slots',\n            onEnd: function () {\n                // Update the target positions when the pattern is reordered\n                _this.updatePatternBuilderTargets();\n            }\n        });\n        // Set up slot click events for all pattern slots\n        document.querySelectorAll('.pattern-slot').forEach(function (slot) {\n            slot.addEventListener('click', function () {\n                _this.handleSlotClick(slot);\n                // Update target positions whenever a slot is filled or changed\n                _this.updatePatternBuilderTargets();\n            });\n        });\n        // Initialize the target positions\n        this.updatePatternBuilderTargets();\n    };\n    ConfigDialog.prototype.updatePatternBuilderTargets = function () {\n        var patternSlots = document.getElementById('pattern-builder-slots');\n        var targetContainer = document.getElementById('pattern-builder-targets');\n        if (!patternSlots || !targetContainer)\n            return;\n        // Clear existing targets\n        targetContainer.innerHTML = '';\n        // Get all filled slots\n        var filledSlots = Array.from(patternSlots.querySelectorAll('.pattern-slot.filled'));\n        // Create target positions for each filled slot\n        filledSlots.forEach(function (slot, index) {\n            var position = slot.getAttribute('data-position');\n            var type = slot.getAttribute('data-type');\n            if (position && type) {\n                var targetPosition_1 = document.createElement('div');\n                targetPosition_1.className = 'target-position';\n                targetPosition_1.setAttribute('data-position', position);\n                targetPosition_1.setAttribute('data-type', type);\n                // Display 1-based index for user-friendly numbering\n                targetPosition_1.textContent = (index + 1).toString();\n                // Default to selected\n                targetPosition_1.classList.add('selected');\n                // Toggle selection on click\n                targetPosition_1.addEventListener('click', function () {\n                    targetPosition_1.classList.toggle('selected');\n                });\n                targetContainer.appendChild(targetPosition_1);\n            }\n        });\n        // If no filled slots, show a message\n        if (filledSlots.length === 0) {\n            targetContainer.innerHTML = '<span class=\"empty-target-message\">' +\n                (i18n_1.i18n.t('settings.nobleSnipe.noPositions') || 'Add nobles to the pattern first') +\n                '</span>';\n        }\n    };\n    ConfigDialog.prototype.handleSlotClick = function (slot) {\n        // If slot is already filled, toggle between G and F\n        if (slot.classList.contains('filled')) {\n            var currentType = slot.getAttribute('data-type') === 'G' ? 'F' : 'G';\n            this.fillSlot(slot, currentType);\n        }\n        else {\n            // If empty, default to G\n            this.fillSlot(slot, 'G');\n        }\n    };\n    ConfigDialog.prototype.fillSlot = function (slot, nobleType) {\n        // Clear existing content\n        slot.innerHTML = '';\n        slot.className = 'pattern-slot filled';\n        slot.setAttribute('data-type', nobleType);\n        // Create noble icon\n        var nobleIcon = document.createElement('div');\n        nobleIcon.className = \"noble-drag-item \".concat(nobleType === 'G' ? 'green' : 'full');\n        nobleIcon.textContent = nobleType;\n        slot.appendChild(nobleIcon);\n    };\n    ConfigDialog.prototype.initPatternControls = function () {\n        var _this = this;\n        var clearPatternBtn = document.getElementById('clear-pattern-btn');\n        var savePatternBtn = document.getElementById('save-pattern-btn');\n        var patternSlots = document.getElementById('pattern-builder-slots');\n        if (!patternSlots)\n            return;\n        // Clear pattern button\n        if (clearPatternBtn) {\n            clearPatternBtn.addEventListener('click', function () {\n                _this.clearPatternBuilder();\n            });\n        }\n        // Save pattern button\n        if (savePatternBtn) {\n            savePatternBtn.addEventListener('click', function () {\n                _this.savePatternFromBuilder();\n            });\n        }\n    };\n    ConfigDialog.prototype.clearPatternBuilder = function () {\n        var patternSlots = document.getElementById('pattern-builder-slots');\n        if (!patternSlots)\n            return;\n        // Reset all slots to empty state\n        var slots = patternSlots.querySelectorAll('.pattern-slot');\n        slots.forEach(function (slot) {\n            // Clear content and reset to original state\n            slot.innerHTML = i18n_1.i18n.t('settings.nobleSnipe.clickOrDrop') || '+';\n            slot.className = 'pattern-slot';\n            slot.removeAttribute('data-type');\n        });\n        // Show success message\n        UI.SuccessMessage(i18n_1.i18n.t('settings.nobleSnipe.patternCleared') || 'Pattern cleared.');\n    };\n    ConfigDialog.prototype.savePatternFromBuilder = function () {\n        var patternSlots = document.getElementById('pattern-builder-slots');\n        var targetContainer = document.getElementById('pattern-builder-targets');\n        if (!patternSlots || !targetContainer)\n            return;\n        var slots = patternSlots.querySelectorAll('.pattern-slot.filled');\n        // Build pattern string only from filled slots\n        var patternString = '';\n        var hasFilledSlot = false;\n        slots.forEach(function (slot) {\n            var type = slot.getAttribute('data-type');\n            if (type) {\n                patternString += type;\n                hasFilledSlot = true;\n            }\n        });\n        if (!hasFilledSlot || patternString.length === 0) {\n            UI.ErrorMessage(i18n_1.i18n.t('settings.nobleSnipe.emptyPattern') || 'Pattern cannot be empty. Please add at least one noble.');\n            return;\n        }\n        // Check if pattern already exists\n        var existingPatterns = Object.keys(this.config.NOBLE_TRAIN_PATTERNS || {});\n        if (existingPatterns.includes(patternString)) {\n            UI.ErrorMessage(i18n_1.i18n.t('settings.nobleSnipe.patternExists') || 'This pattern already exists.');\n            return;\n        }\n        // Get selected target positions\n        var selectedPositions = Array.from(targetContainer.querySelectorAll('.target-position.selected'))\n            .map(function (pos) { return parseInt(pos.getAttribute('data-position') || '0', 10); });\n        // If no positions selected, show error\n        if (selectedPositions.length === 0) {\n            UI.ErrorMessage(i18n_1.i18n.t('settings.nobleSnipe.noTargetPositions') || 'Please select at least one target position.');\n            return;\n        }\n        // Create pattern config and add to config\n        var patternConfig = {\n            snipePositions: selectedPositions,\n            action: 'dodge',\n            enabled: true\n        };\n        if (!this.config.NOBLE_TRAIN_PATTERNS) {\n            this.config.NOBLE_TRAIN_PATTERNS = {};\n        }\n        this.config.NOBLE_TRAIN_PATTERNS[patternString] = patternConfig;\n        // Add to UI\n        this.addPatternCard(patternString, patternConfig);\n        // Clear pattern builder\n        this.clearPatternBuilder();\n        // Update count\n        this.updatePatternCount();\n        // Show success message\n        UI.SuccessMessage(i18n_1.i18n.t('settings.nobleSnipe.patternAdded') || 'Pattern added successfully.');\n    };\n    ConfigDialog.prototype.addPatternCard = function (pattern, patternConfig) {\n        var patternsGrid = document.getElementById('patterns-grid');\n        if (!patternsGrid)\n            return;\n        // Remove empty message if it exists\n        var emptyMessage = patternsGrid.querySelector('.empty-patterns');\n        if (emptyMessage) {\n            patternsGrid.removeChild(emptyMessage);\n        }\n        // Create pattern card\n        var card = document.createElement('div');\n        card.className = 'pattern-card';\n        card.setAttribute('data-pattern', pattern);\n        card.innerHTML = \"\\n      <div class=\\\"pattern-card-buttons\\\">\\n        <button class=\\\"pattern-card-btn edit\\\" title=\\\"\".concat(i18n_1.i18n.t('general.edit') || 'Edit', \"\\\">\\u270F\\uFE0F</button>\\n        <button class=\\\"pattern-card-btn delete\\\" title=\\\"\").concat(i18n_1.i18n.t('general.delete') || 'Delete', \"\\\">\\uD83D\\uDDD1\\uFE0F</button>\\n      </div>\\n      <div class=\\\"pattern-card-header\\\">\\n        <div class=\\\"pattern-display\\\">\\n          \").concat(pattern.split('').map(function (letter) { return \"\\n            <div class=\\\"noble-icon-mini \".concat(letter === 'G' ? 'green' : 'full', \"\\\">\").concat(letter, \"</div>\\n          \"); }).join(''), \"\\n        </div>\\n        <div class=\\\"pattern-status\\\">\\n          <label class=\\\"toggle-switch pattern-toggle\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"pattern-enabled\\\" \").concat(patternConfig.enabled !== false ? 'checked' : '', \">\\n            <span class=\\\"toggle-slider\\\"></span>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"pattern-targeting\\\">\\n        <span>\").concat(i18n_1.i18n.t('settings.nobleSnipe.targetPositions') || 'Target', \":</span>\\n        \").concat(pattern.split('').map(function (letter, index) { return \"\\n          <div class=\\\"target-position \".concat(patternConfig.snipePositions.includes(index) ? 'selected' : '', \"\\\" data-position=\\\"\").concat(index, \"\\\">\").concat(index + 1, \"</div>\\n        \"); }).join(''), \"\\n      </div>\\n      <div class=\\\"pattern-card-actions\\\">\\n        <div class=\\\"pattern-action-display\\\">\\n          <span>\").concat(i18n_1.i18n.t('settings.nobleSnipe.otherAction') || 'Action', \":</span>\\n          <span class=\\\"action-badge \").concat(patternConfig.action, \"\\\">\").concat(patternConfig.action === 'dodge' ?\n            i18n_1.i18n.t('general.dodge') || 'Dodge' :\n            i18n_1.i18n.t('general.ignore') || 'Ignore', \"</span>\\n        </div>\\n        <select class=\\\"pattern-action-select\\\">\\n          <option value=\\\"dodge\\\" \").concat(patternConfig.action === 'dodge' ? 'selected' : '', \">\").concat(i18n_1.i18n.t('general.dodge') || 'Dodge', \"</option>\\n          <option value=\\\"ignore\\\" \").concat(patternConfig.action === 'ignore' ? 'selected' : '', \">\").concat(i18n_1.i18n.t('general.ignore') || 'Ignore', \"</option>\\n        </select>\\n      </div>\\n    \");\n        patternsGrid.appendChild(card);\n        // Add event listeners to the new card\n        this.initPatternCardEvents(card);\n    };\n    ConfigDialog.prototype.initPatternCardEvents = function (card) {\n        var _this = this;\n        // Target position selection\n        card.querySelectorAll('.target-position').forEach(function (pos) {\n            pos.addEventListener('click', function () {\n                pos.classList.toggle('selected');\n                _this.updateCardPatternPositions(card);\n            });\n        });\n        // Action select change\n        var actionSelect = card.querySelector('.pattern-action-select');\n        if (actionSelect) {\n            actionSelect.addEventListener('change', function () {\n                var actionBadge = card.querySelector('.action-badge');\n                if (actionBadge) {\n                    actionBadge.className = \"action-badge \".concat(actionSelect.value);\n                    actionBadge.textContent = actionSelect.value === 'dodge'\n                        ? (i18n_1.i18n.t('general.dodge') || 'Dodge')\n                        : (i18n_1.i18n.t('general.ignore') || 'Ignore');\n                }\n                // Update config\n                var pattern = card.getAttribute('data-pattern');\n                if (pattern && _this.config.NOBLE_TRAIN_PATTERNS && _this.config.NOBLE_TRAIN_PATTERNS[pattern]) {\n                    _this.config.NOBLE_TRAIN_PATTERNS[pattern].action = actionSelect.value;\n                }\n            });\n        }\n        // Pattern enabled toggle\n        var enabledToggle = card.querySelector('.pattern-enabled');\n        if (enabledToggle) {\n            enabledToggle.addEventListener('change', function () {\n                // Update config\n                var pattern = card.getAttribute('data-pattern');\n                if (pattern && _this.config.NOBLE_TRAIN_PATTERNS && _this.config.NOBLE_TRAIN_PATTERNS[pattern]) {\n                    _this.config.NOBLE_TRAIN_PATTERNS[pattern].enabled = enabledToggle.checked;\n                    // Visually update the card\n                    if (enabledToggle.checked) {\n                        card.classList.remove('pattern-disabled');\n                    }\n                    else {\n                        card.classList.add('pattern-disabled');\n                    }\n                }\n            });\n            // Set initial disabled state\n            var pattern = card.getAttribute('data-pattern');\n            if (pattern && this.config.NOBLE_TRAIN_PATTERNS && this.config.NOBLE_TRAIN_PATTERNS[pattern]) {\n                var isEnabled = this.config.NOBLE_TRAIN_PATTERNS[pattern].enabled !== false;\n                if (!isEnabled) {\n                    card.classList.add('pattern-disabled');\n                }\n            }\n        }\n        // Delete button\n        var deleteBtn = card.querySelector('.pattern-card-btn.delete');\n        if (deleteBtn) {\n            deleteBtn.addEventListener('click', function () {\n                if (confirm(i18n_1.i18n.t('settings.nobleSnipe.confirmDeletePattern') || 'Are you sure you want to delete this pattern?')) {\n                    _this.deletePattern(card.getAttribute('data-pattern') || '');\n                    card.remove();\n                    _this.updatePatternCount();\n                }\n            });\n        }\n        // Edit button\n        var editBtn = card.querySelector('.pattern-card-btn.edit');\n        if (editBtn) {\n            editBtn.addEventListener('click', function () {\n                _this.editPattern(card.getAttribute('data-pattern') || '');\n            });\n        }\n    };\n    ConfigDialog.prototype.initPatternLibrary = function () {\n        var _this = this;\n        // Initialize pattern card interaction\n        document.querySelectorAll('.pattern-card').forEach(function (card) {\n            // Add listeners to each pattern card\n            _this.initPatternCardEvents(card);\n        });\n    };\n    ConfigDialog.prototype.updateCardPatternPositions = function (card) {\n        var pattern = card.getAttribute('data-pattern');\n        if (!pattern || !this.config.NOBLE_TRAIN_PATTERNS || !this.config.NOBLE_TRAIN_PATTERNS[pattern])\n            return;\n        var selectedPositions = Array.from(card.querySelectorAll('.target-position.selected'))\n            .map(function (pos) { return parseInt(pos.getAttribute('data-position') || '0', 10); });\n        this.config.NOBLE_TRAIN_PATTERNS[pattern].snipePositions = selectedPositions;\n    };\n    ConfigDialog.prototype.deletePattern = function (pattern) {\n        if (!pattern || !this.config.NOBLE_TRAIN_PATTERNS)\n            return;\n        delete this.config.NOBLE_TRAIN_PATTERNS[pattern];\n        // Check if we need to add the empty message\n        var patternsGrid = document.getElementById('patterns-grid');\n        if (patternsGrid && patternsGrid.querySelectorAll('.pattern-card').length === 0) {\n            patternsGrid.innerHTML = \"<div class=\\\"empty-patterns\\\">\".concat(i18n_1.i18n.t('settings.nobleSnipe.noPatterns') || 'No patterns created yet. Use the pattern builder above to create your first pattern.', \"</div>\");\n        }\n    };\n    ConfigDialog.prototype.editPattern = function (pattern) {\n        var _this = this;\n        if (!pattern || !this.config.NOBLE_TRAIN_PATTERNS || !this.config.NOBLE_TRAIN_PATTERNS[pattern])\n            return;\n        var patternConfig = this.config.NOBLE_TRAIN_PATTERNS[pattern];\n        var patternSlots = document.getElementById('pattern-builder-slots');\n        if (!patternSlots)\n            return;\n        // Clear pattern builder first\n        this.clearPatternBuilder();\n        // Get all slots\n        var slots = patternSlots.querySelectorAll('.pattern-slot');\n        // Fill slots with pattern characters\n        pattern.split('').forEach(function (letter, index) {\n            if (index < slots.length) {\n                // Get the corresponding slot for this position\n                var slot = slots[index];\n                // Fill the slot with the correct noble type\n                _this.fillSlot(slot, letter);\n            }\n        });\n        // Scroll to pattern builder\n        var patternBuilder = document.querySelector('.pattern-builder-container');\n        if (patternBuilder) {\n            patternBuilder.scrollIntoView({ behavior: 'smooth' });\n        }\n        // Delete the original pattern\n        this.deletePattern(pattern);\n        // Update UI\n        var card = document.querySelector(\".pattern-card[data-pattern=\\\"\".concat(pattern, \"\\\"]\"));\n        if (card) {\n            card.remove();\n            this.updatePatternCount();\n        }\n        // Show message\n        UI.SuccessMessage(i18n_1.i18n.t('settings.nobleSnipe.patternEditing') || 'Editing pattern... Make your changes and save when ready.');\n    };\n    ConfigDialog.prototype.addNoblePattern = function (patternText) {\n        var patternsList = document.getElementById('patterns-grid');\n        if (!patternsList)\n            return;\n        // Validate pattern (only G and F characters)\n        patternText = patternText.trim().toUpperCase();\n        if (!patternText || !/^[GF]+$/.test(patternText)) {\n            UI.ErrorMessage(i18n_1.i18n.t('settings.nobleSnipe.invalidPattern') || 'Invalid pattern. Use only G and F characters.');\n            return;\n        }\n        // Check if pattern already exists\n        if (this.config.NOBLE_TRAIN_PATTERNS && this.config.NOBLE_TRAIN_PATTERNS[patternText]) {\n            UI.ErrorMessage(i18n_1.i18n.t('settings.nobleSnipe.patternExists') || 'This pattern already exists.');\n            return;\n        }\n        // Default to selecting all positions for snipe\n        var positions = Array.from({ length: patternText.length }, function (_, i) { return i; });\n        // Add to config\n        if (!this.config.NOBLE_TRAIN_PATTERNS) {\n            this.config.NOBLE_TRAIN_PATTERNS = {};\n        }\n        this.config.NOBLE_TRAIN_PATTERNS[patternText] = {\n            snipePositions: positions,\n            action: 'dodge',\n            enabled: true\n        };\n        // Add to UI\n        this.addPatternCard(patternText, this.config.NOBLE_TRAIN_PATTERNS[patternText]);\n        // Update count\n        this.updatePatternCount();\n        // Show success message\n        UI.SuccessMessage(i18n_1.i18n.t('settings.nobleSnipe.patternAdded') || 'Pattern added successfully.');\n    };\n    ConfigDialog.prototype.updatePatternPositions = function (patternItem) {\n        if (!patternItem)\n            return;\n        var selectedItems = patternItem.querySelectorAll('.noble-selector-item.selected');\n        var positions = Array.from(selectedItems).map(function (item) {\n            return parseInt(item.getAttribute('data-position') || '0', 10);\n        });\n        var positionsInput = patternItem.querySelector('.positions-input');\n        if (positionsInput) {\n            positionsInput.value = positions.join(',');\n        }\n    };\n    ConfigDialog.prototype.findClosestSlot = function (x, y) {\n        var slots = document.querySelectorAll('.pattern-slot');\n        var closestSlot = null;\n        var closestDistance = Infinity;\n        slots.forEach(function (slot) {\n            var rect = slot.getBoundingClientRect();\n            var centerX = rect.left + rect.width / 2;\n            var centerY = rect.top + rect.height / 2;\n            var distance = Math.sqrt(Math.pow(x - centerX, 2) + Math.pow(y - centerY, 2));\n            if (distance < closestDistance) {\n                closestDistance = distance;\n                closestSlot = slot;\n            }\n        });\n        return closestSlot;\n    };\n    ConfigDialog.prototype.clearDropHoverClass = function () {\n        document.querySelectorAll('.drop-hover').forEach(function (element) {\n            element.classList.remove('drop-hover');\n        });\n    };\n    return ConfigDialog;\n}());\nexports.openConfigDialog = ConfigDialog.open;\n// Export introduction dialog\nfunction showIntroductionDialog() {\n    var _a;\n    var introHtml = \"\\n    <div id=\\\"autododge_intro_container\\\" class=\\\"popup_box_container\\\">\\n      <div class=\\\"popup_box show\\\" style=\\\"width: 600px;\\\">\\n        <div class=\\\"popup_box_content\\\">\\n          <h3>\".concat(i18n_1.i18n.t('settings.intro.welcome'), \"</h3>\\n          <p>\").concat(i18n_1.i18n.t('settings.intro.description'), \"</p>\\n          <h4>\").concat(i18n_1.i18n.t('settings.intro.features'), \"</h4>\\n          <ul>\\n            <li><strong>\").concat(i18n_1.i18n.t('settings.intro.filters'), \"</strong></li>\\n            <li><strong>\").concat(i18n_1.i18n.t('settings.intro.notifications'), \"</strong></li>\\n            <li><strong>\").concat(i18n_1.i18n.t('settings.intro.autoRename'), \"</strong></li>\\n          </ul>\\n          <h4>\").concat(i18n_1.i18n.t('settings.intro.nextSteps'), \"</h4>\\n          <ol>\\n            <li>\").concat(i18n_1.i18n.t('settings.intro.step1'), \"</li>\\n            <li>\").concat(i18n_1.i18n.t('settings.intro.step2'), \"</li>\\n            <li>\").concat(i18n_1.i18n.t('settings.intro.step3'), \"</li>\\n          </ol>\\n          <p>\").concat(i18n_1.i18n.t('settings.intro.help'), \"</p>\\n          <button id=\\\"autododge_intro_close\\\" class=\\\"btn\\\">\").concat(i18n_1.i18n.t('settings.intro.startConfig'), \"</button>\\n        </div>\\n      </div>\\n    </div>\\n  \");\n    document.body.insertAdjacentHTML('beforeend', introHtml);\n    (_a = document.getElementById('autododge_intro_close')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', function () {\n        var _a;\n        (_a = document.getElementById('autododge_intro_container')) === null || _a === void 0 ? void 0 : _a.remove();\n        storage_1.AutoDodgeStorage.saveFirstTime(false);\n        (0, exports.openConfigDialog)();\n    });\n}\n\n\n//# sourceURL=webpack:///./src/ui/config.ts?")},"./src/ui/dialog.css":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_dialog_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./dialog.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./src/ui/dialog.css");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_dialog_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_dialog_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_dialog_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_dialog_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);\n\n\n//# sourceURL=webpack:///./src/ui/dialog.css?')},"./src/ui/dialog.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.generateDialogHtml = exports.dialogHtml = void 0;\nvar helper_utils_1 = __webpack_require__(/*! ../utils/helper.utils */ "./src/utils/helper.utils.ts");\nvar i18n_1 = __webpack_require__(/*! ../i18n */ "./src/i18n/index.ts");\nvar index_1 = __webpack_require__(/*! ../i18n/index */ "./src/i18n/index.ts");\nvar config_1 = __webpack_require__(/*! ./config */ "./src/ui/config.ts");\nvar tribalkit_1 = __webpack_require__(/*! ../tribalkit */ "./src/tribalkit.ts");\n__webpack_require__(/*! ./dialog.css */ "./src/ui/dialog.css");\nvar dialogHtml = function (config, stats) {\n    var _a, _b;\n    return "\\n    <div id=\\"autodefense_config_container\\" class=\\"fullscreen-dialog-container\\">\\n        <div class=\\"fullscreen-dialog-backdrop\\"></div>\\n        <div class=\\"fullscreen-dialog\\" id=\\"autodefense_config\\">\\n            <div class=\\"dialog-header\\">\\n                <h2> </h2>\\n                <div class=\\"header-controls\\">\\n                    <div class=\\"player-info\\">\\n                        <div class=\\"player-avatar\\"></div>\\n                        <div class=\\"player-name\\">".concat(((_b = (_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.player) === null || _b === void 0 ? void 0 : _b.name) || \'Player\', "</div>\\n                    </div>\\n                    <button id=\\"closeAutoDefenseConfigBtnX\\" class=\\"close-button\\">\\u00D7</button>\\n                </div>\\n            </div>\\n            \\n            <div class=\\"dialog-body\\">\\n                <div class=\\"dialog-sidebar\\">\\n                    <div class=\\"sidebar-header\\">\\n                        <div class=\\"logo-container\\">\\n                            <div class=\\"app-logo\\">AD</div>\\n                            <div class=\\"app-title\\">AutoDefense</div>\\n                        </div>\\n                        <div id=\\"license-info\\" class=\\"license-info\\">\\n                            <div id=\\"license-type\\"></div>\\n                            <div id=\\"license-expiration\\"></div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div class=\\"sidebar-nav\\">\\n                        <button class=\\"nav-button active\\" data-tab=\\"default\\">\\n                            <span class=\\"nav-icon\\">\\uD83C\\uDFE0</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.general\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"filters\\">\\n                            <span class=\\"nav-icon\\">\\uD83D\\uDD0D</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.filters\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"notifications\\">\\n                            <span class=\\"nav-icon\\">\\uD83D\\uDD14</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.notifications\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"renamer\\">\\n                            <span class=\\"nav-icon\\">\\u270F\\uFE0F</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.renamer\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"webhooks\\">\\n                            <span class=\\"nav-icon\\">\\uD83D\\uDD17</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.webhooks\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"statistics\\">\\n                            <span class=\\"nav-icon\\">\\uD83D\\uDCCA</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.statistics\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"tasks\\">\\n                            <span class=\\"nav-icon\\">\\uD83D\\uDCCB</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.tasks\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"modules\\">\\n                            <span class=\\"nav-icon\\">\\uD83E\\uDDE9</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.modules\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button\\" data-tab=\\"advanced\\">\\n                            <span class=\\"nav-icon\\">\\u2699\\uFE0F</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.advanced\'), "</span>\\n                        </button>\\n                        <button class=\\"nav-button highlight-button\\" data-tab=\\"noble-snipe\\">\\n                            <span class=\\"nav-icon\\">\\uD83C\\uDFAF</span>\\n                            <span class=\\"nav-text\\">").concat(i18n_1.i18n.t(\'settings.tabs.nobleSnipe\'), "</span>\\n                        </button>\\n                    </div>\\n\\n                    <div class=\\"sidebar-footer\\">\\n                        <div id=\\"language-settings\\">\\n                            <select id=\\"language_selector\\">\\n                                ").concat((0, index_1.getAvailableLanguages)().map(function (lang) { return "\\n                                    <option value=\\"".concat(lang, "\\" ").concat(config.LANGUAGE === lang ? \'selected\' : \'\', ">\\n                                        ").concat(i18n_1.i18n.t("settings.language.".concat(lang)), "\\n                                    </option>\\n                                "); }).join(\'\'), "\\n                            </select>\\n                        </div>\\n                        <div class=\\"version-info\\">BETA</div>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\"dialog-content\\">\\n                    <div id=\\"default\\" class=\\"tab-content active\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.welcome\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <p>").concat(i18n_1.i18n.t(\'settings.configureMessage\'), "</p>\\n                                \\n                                <div class=\\"quick-stats\\">\\n                                    <div class=\\"stat-card\\">\\n                                        <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalDodges\'), "</div>\\n                                        <div class=\\"stat-value\\">").concat(stats.totalDodges, "</div>\\n                                    </div>\\n                                    <div class=\\"stat-card\\">\\n                                        <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalCancels\'), "</div>\\n                                        <div class=\\"stat-value\\">").concat(stats.totalCancels, "</div>\\n                                    </div>\\n                                    <div class=\\"stat-card\\">\\n                                        <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalSnipes\'), "</div>\\n                                        <div class=\\"stat-value\\">").concat(stats.totalSnipes || 0, "</div>\\n                                    </div>\\n                                    <div class=\\"stat-card\\">\\n                                        <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.commandsProcessed\'), "</div>\\n                                        <div class=\\"stat-value\\">").concat(stats.commandsProcessed, "</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.advanced\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"show_overlay\\">").concat(i18n_1.i18n.t(\'general.showOverlay\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"show_overlay\\" ").concat(config.SHOW_OVERLAY ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"single_tab_lock\\">").concat(i18n_1.i18n.t(\'general.singleTabLock\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"single_tab_lock\\" ").concat(config.SINGLE_TAB_LOCK_ENABLED ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"dev_mode\\">").concat(i18n_1.i18n.t(\'general.devMode\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"dev_mode\\" ").concat(config.DEV_MODE ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"filters\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.filters\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"ignore_own_commands\\">").concat(i18n_1.i18n.t(\'settings.filters.ignoreOwnCommands\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"ignore_own_commands\\" ").concat(config.IGNORE_OWN_COMMANDS ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"allow_night_bonus\\">").concat(i18n_1.i18n.t(\'settings.filters.allowNightBonus\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"allow_night_bonus\\" ").concat(config.ALLOW_NIGHT_BONUS ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"filter-lists\\">\\n                                    <div class=\\"filter-list\\">\\n                                        <div class=\\"list-header\\">\\n                                            <div class=\\"option\\">\\n                                                <label for=\\"dodge_whitelist_enabled\\">").concat(i18n_1.i18n.t(\'settings.filters.enableWhitelist\'), "</label>\\n                                                <div class=\\"toggle-switch\\">\\n                                                    <input type=\\"checkbox\\" id=\\"dodge_whitelist_enabled\\" ").concat(config.DODGE_WHITELIST_ENABLED ? "checked" : "", ">\\n                                                    <span class=\\"toggle-slider\\"></span>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\"description-text\\">").concat(i18n_1.i18n.t(\'settings.filters.whitelistDescription\'), "</div>\\n                                        </div>\\n                                        <div id=\\"dodge_whitelist_container\\" class=\\"list-container\\" style=\\"").concat(config.DODGE_WHITELIST_ENABLED ? "" : "display: none;", "\\">\\n                                            <p>").concat(i18n_1.i18n.t(\'settings.filters.whitelistNames\'), "</p>\\n                                            <div id=\\"dodge_whitelist\\" class=\\"names-list\\"></div>\\n                                            <button id=\\"add_dodge_whitelist\\" class=\\"ad-btn-add\\">").concat(i18n_1.i18n.t(\'settings.filters.addName\'), "</button>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"filter-list\\">\\n                                        <div class=\\"list-header\\">\\n                                            <div class=\\"option\\">\\n                                                <label for=\\"dodge_blacklist_enabled\\">").concat(i18n_1.i18n.t(\'settings.filters.enableBlacklist\'), "</label>\\n                                                <div class=\\"toggle-switch\\">\\n                                                    <input type=\\"checkbox\\" id=\\"dodge_blacklist_enabled\\" ").concat(config.DODGE_BLACKLIST_ENABLED ? "checked" : "", ">\\n                                                    <span class=\\"toggle-slider\\"></span>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\"description-text\\">").concat(i18n_1.i18n.t(\'settings.filters.blacklistDescription\'), "</div>\\n                                        </div>\\n                                        <div id=\\"dodge_blacklist_container\\" class=\\"list-container\\" style=\\"").concat(config.DODGE_BLACKLIST_ENABLED ? "" : "display: none;", "\\">\\n                                            <p>").concat(i18n_1.i18n.t(\'settings.filters.blacklistNames\'), "</p>\\n                                            <div id=\\"dodge_blacklist\\" class=\\"names-list\\"></div>\\n                                            <button id=\\"add_dodge_blacklist\\" class=\\"ad-btn-add\\">").concat(i18n_1.i18n.t(\'settings.filters.addName\'), "</button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"notifications\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.notifications\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\" style=\\"position: relative;\\">\\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"notifications_enabled\\">").concat(i18n_1.i18n.t(\'settings.notifications.enable\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"notifications_enabled\\" ").concat(config.NOTIFICATIONS_ENABLED ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"notification_type\\">").concat(i18n_1.i18n.t(\'settings.notifications.type\'), "</label>\\n                                            <select id=\\"notification_type\\">\\n                                                <option value=\\"desktop\\" ").concat(config.NOTIFICATION_TYPE === "desktop" ? "selected" : "", ">Desktop</option>\\n                                                <option value=\\"sound\\" ").concat(config.NOTIFICATION_TYPE === "sound" ? "selected" : "", ">Som</option>\\n                                                <option value=\\"both\\" ").concat(config.NOTIFICATION_TYPE === "both" ? "selected" : "", ">Ambos</option>\\n                                            </select>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"notification_sound\\">").concat(i18n_1.i18n.t(\'settings.notifications.sound\'), "</label>\\n                                            <select id=\\"notification_sound\\">\\n                                                <option value=\\"default\\" ").concat(config.NOTIFICATION_SOUND === "default" ? "selected" : "", ">Padr\\u00E3o</option>\\n                                                <option value=\\"custom\\" ").concat(config.NOTIFICATION_SOUND !== "default" ? "selected" : "", ">Personalizado</option>\\n                                            </select>\\n                                            <input type=\\"text\\" id=\\"custom_notification_sound\\" value=\\"").concat(config.NOTIFICATION_SOUND !== "default" ? config.NOTIFICATION_SOUND : "", "\\" ").concat(config.NOTIFICATION_SOUND === "default" ? \'style="display:none;"\' : "", ">\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"notify_dodge\\">").concat(i18n_1.i18n.t(\'settings.notifications.notifyDodge\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"notify_dodge\\" ").concat(config.NOTIFY_DODGE ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"notification_seconds_dodge\\">").concat(i18n_1.i18n.t(\'settings.notifications.notifyDodgeSeconds\'), "</label>\\n                                        <input type=\\"number\\" id=\\"notification_seconds_dodge\\" value=\\"").concat(config.NOTIFICATION_SECONDS_DODGE, "\\" min=\\"0\\">\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"notify_cancel\\">").concat(i18n_1.i18n.t(\'settings.notifications.notifyCancel\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"notify_cancel\\" ").concat(config.NOTIFY_CANCEL ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"notification_seconds_cancel\\">").concat(i18n_1.i18n.t(\'settings.notifications.notifyCancelSeconds\'), "</label>\\n                                        <input type=\\"number\\" id=\\"notification_seconds_cancel\\" value=\\"").concat(config.NOTIFICATION_SECONDS_CANCEL, "\\" min=\\"0\\">\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"test_notification\\">").concat(i18n_1.i18n.t(\'settings.notifications.test\'), "</label>\\n                                        <button id=\\"test_notification\\" class=\\"btn-test\\">").concat(i18n_1.i18n.t(\'settings.notifications.test\'), "</button>\\n                                    </div>\\n                                </div>\\n\\n                                \x3c!-- Coming Soon Overlay --\x3e\\n                                ").concat((0, config_1.generateComingSoonOverlay)(\'🔔\', i18n_1.i18n.t(\'general.comingSoon\'), i18n_1.i18n.t(\'general.comingSoonDescription\')), "\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"renamer\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.renamer\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"auto_rename_new_attacks\\">").concat(i18n_1.i18n.t(\'settings.renamer.autoRenameNewAttacks\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"auto_rename_new_attacks\\" ").concat(config.AUTO_RENAME_NEW_ATTACKS ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"rename_completed_commands\\">").concat(i18n_1.i18n.t(\'settings.renamer.renameCompletedCommands\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"rename_completed_commands\\" ").concat(config.RENAME_COMPLETED_COMMANDS ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"completed_command_suffix\\">").concat(i18n_1.i18n.t(\'settings.renamer.completedCommandSuffix\'), "</label>\\n                                        <input type=\\"text\\" id=\\"completed_command_suffix\\" value=\\"").concat(config.COMPLETED_COMMAND_SUFFIX, "\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"completed_snipe_suffix\\">").concat(i18n_1.i18n.t(\'settings.renamer.completedSnipeSuffix\'), "</label>\\n                                        <input type=\\"text\\" id=\\"completed_snipe_suffix\\" value=\\"").concat(config.COMPLETED_SNIPE_SUFFIX, "\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"advanced\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.advanced\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"debug_window_enabled\\">").concat(i18n_1.i18n.t(\'settings.advanced.debugWindow\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"debug_window_enabled\\" ").concat(config.DEBUG_WINDOW_ENABLED ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"dodge_time\\">").concat(i18n_1.i18n.t(\'settings.advanced.dodgeTime\'), "</label>\\n                                        <input type=\\"number\\" id=\\"dodge_time\\" value=\\"").concat(config.DODGE_TIME, "\\" min=\\"0\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"min_cancel_buffer\\">").concat(i18n_1.i18n.t(\'settings.advanced.minCancelBuffer\'), "</label>\\n                                        <input type=\\"number\\" id=\\"min_cancel_buffer\\" value=\\"").concat(config.MIN_CANCEL_BUFFER, "\\" min=\\"0\\">\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"action_delay\\">").concat(i18n_1.i18n.t(\'settings.advanced.actionDelay\'), "</label>\\n                                        <input type=\\"number\\" id=\\"action_delay\\" value=\\"").concat(config.ACTION_DELAY, "\\" min=\\"0\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"redirect_delay\\">").concat(i18n_1.i18n.t(\'settings.advanced.redirectDelay\'), "</label>\\n                                        <input type=\\"number\\" id=\\"redirect_delay\\" value=\\"").concat(config.REDIRECT_DELAY, "\\" min=\\"0\\">\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"planning_window\\">").concat(i18n_1.i18n.t(\'settings.advanced.planningWindow\'), "</label>\\n                                        <input type=\\"number\\" id=\\"planning_window\\" value=\\"").concat(config.PLANNING_WINDOW / 60, "\\" min=\\"0\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"cancel_delay_fraction\\">").concat(i18n_1.i18n.t(\'settings.advanced.cancelDelayFraction\'), "</label>\\n                                        <input type=\\"number\\" id=\\"cancel_delay_fraction\\" value=\\"").concat(config.CANCEL_DELAY_FRACTION, "\\" min=\\"0\\" max=\\"1\\" step=\\"0.1\\">\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"max_cancel_attempts\\">").concat(i18n_1.i18n.t(\'settings.advanced.maxCancelAttempts\'), "</label>\\n                                        <input type=\\"number\\" id=\\"max_cancel_attempts\\" value=\\"").concat(config.MAX_CANCEL_ATTEMPTS, "\\" min=\\"1\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"min_dodge_time\\">").concat(i18n_1.i18n.t(\'settings.advanced.minDodgeTime\'), "</label>\\n                                        <input type=\\"number\\" id=\\"min_dodge_time\\" value=\\"").concat(config.MIN_DODGE_TIME, "\\" min=\\"0\\">\\n                                    </div>\\n                                </div>\\n                                \\n                                \x3c!-- Se\\u00E7\\u00E3o de recursos avan\\u00E7ados com Coming Soon --\x3e\\n                                <div class=\\"content-card\\" style=\\"margin-top: 20px;\\">\\n                                    <div class=\\"card-header\\">\\n                                        <h3>Recursos Avan\\u00E7ados</h3>\\n                                    </div>\\n                                    <div class=\\"card-body\\">\\n                                        ").concat((0, config_1.generateComingSoonOverlay)(\'⚙️\', \'Recursos Avançados\', i18n_1.i18n.t(\'general.comingSoonDescription\')), "\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"webhooks\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.webhooks\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"discord_webhook_enabled\\">").concat(i18n_1.i18n.t(\'settings.webhooks.enable\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"discord_webhook_enabled\\" ").concat(config.DISCORD_WEBHOOK_ENABLED ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"discord_webhook_url\\">").concat(i18n_1.i18n.t(\'settings.webhooks.url\'), "</label>\\n                                        <input type=\\"text\\" id=\\"discord_webhook_url\\" value=\\"").concat(config.DISCORD_WEBHOOK_URL, "\\" style=\\"width: 90%;\\">\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"discord_notify_dodge\\">").concat(i18n_1.i18n.t(\'settings.webhooks.notifyDodge\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"discord_notify_dodge\\" ").concat(config.DISCORD_NOTIFY_DODGE ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"discord_notify_cancel\\">").concat(i18n_1.i18n.t(\'settings.webhooks.notifyCancel\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"discord_notify_cancel\\" ").concat(config.DISCORD_NOTIFY_CANCEL ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"discord_notify_failure\\">").concat(i18n_1.i18n.t(\'settings.webhooks.notifyFailure\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"discord_notify_failure\\" ").concat(config.DISCORD_NOTIFY_FAILURE ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"discord_notify_completion\\">").concat(i18n_1.i18n.t(\'settings.webhooks.notifyCompletion\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"discord_notify_completion\\" ").concat(config.DISCORD_NOTIFY_COMPLETION ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"test_discord_webhook\\">").concat(i18n_1.i18n.t(\'settings.webhooks.test\'), "</label>\\n                                        <button id=\\"test_discord_webhook\\" class=\\"btn-test\\">").concat(i18n_1.i18n.t(\'settings.webhooks.test\'), "</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"statistics\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.statistics\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"stats-header\\">\\n                                    <div class=\\"stats-summary\\">\\n                                        <div class=\\"stat-summary-card primary\\">\\n                                            <div class=\\"stat-icon\\">\\uD83D\\uDEE1\\uFE0F</div>\\n                                            <div class=\\"stat-info\\">\\n                                                <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalDodges\'), "</div>\\n                                                <div class=\\"stat-value\\">").concat(stats.totalDodges, "</div>\\n                                                <div class=\\"stat-rate\\">").concat((0, helper_utils_1.calculateSuccessRate)(stats.successfulDodges, stats.failedDodges), " ").concat(i18n_1.i18n.t(\'settings.statistics.successRate\'), "</div>\\n                                        </div>\\n                                        </div>\\n                                        <div class=\\"stat-summary-card secondary\\">\\n                                            <div class=\\"stat-icon\\">\\u274C</div>\\n                                            <div class=\\"stat-info\\">\\n                                                <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalCancels\'), "</div>\\n                                                <div class=\\"stat-value\\">").concat(stats.totalCancels, "</div>\\n                                                <div class=\\"stat-rate\\">").concat((0, helper_utils_1.calculateSuccessRate)(stats.successfulCancels, stats.failedCancels), " ").concat(i18n_1.i18n.t(\'settings.statistics.successRate\'), "</div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\"stat-summary-card tertiary\\">\\n                                            <div class=\\"stat-icon\\">\\uD83C\\uDFAF</div>\\n                                            <div class=\\"stat-info\\">\\n                                                <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalSnipes\'), "</div>\\n                                                <div class=\\"stat-value\\">").concat(stats.totalSnipes, "</div>\\n                                                <div class=\\"stat-rate\\">").concat((0, helper_utils_1.calculateSuccessRate)(stats.successfulSnipes, stats.failedSnipes), " ").concat(i18n_1.i18n.t(\'settings.statistics.successRate\'), "</div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\"stat-summary-card quaternary\\">\\n                                            <div class=\\"stat-icon\\">\\uD83D\\uDCCB</div>\\n                                            <div class=\\"stat-info\\">\\n                                                <div class=\\"stat-title\\">").concat(i18n_1.i18n.t(\'settings.statistics.commandsProcessed\'), "</div>\\n                                                <div class=\\"stat-value\\">").concat(stats.commandsProcessed, "</div>\\n                                                <div class=\\"stat-rate\\">").concat(stats.totalAttacksReceived ? Math.round((stats.commandsProcessed / stats.totalAttacksReceived) * 100) : 0, "% ").concat(i18n_1.i18n.t(\'settings.statistics.processedRate\'), "</div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"stats-details\\">\\n                                    <div class=\\"stat-detail-section\\">\\n                                        <div class=\\"section-title\\">\\n                                            <div class=\\"section-icon\\">\\uD83D\\uDEE1\\uFE0F</div>\\n                                            <h4>").concat(i18n_1.i18n.t(\'settings.statistics.dodges\'), "</h4>\\n                                        </div>\\n                                        <div class=\\"stats-grid\\">\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalDodges\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.totalDodges, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item success\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.successfulDodges\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.successfulDodges, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item failure\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.failedDodges\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.failedDodges, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.dodgeSuccessRate\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.totalDodges > 0 ? Math.round((stats.successfulDodges / stats.totalDodges) * 100) : 0, "%</div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"stat-detail-section\\">\\n                                        <div class=\\"section-title\\">\\n                                            <div class=\\"section-icon\\">\\u274C</div>\\n                                            <h4>").concat(i18n_1.i18n.t(\'settings.statistics.cancels\'), "</h4>\\n                                </div>\\n                                        <div class=\\"stats-grid\\">\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalCancels\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.totalCancels, "</div>\\n                            </div>\\n                                            <div class=\\"stat-item success\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.successfulCancels\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.successfulCancels, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item failure\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.failedCancels\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.failedCancels, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.cancelSuccessRate\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat((0, helper_utils_1.calculateSuccessRate)(stats.successfulCancels, stats.failedCancels), "</div>\\n                                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                                    <div class=\\"stat-detail-section\\">\\n                                        <div class=\\"section-title\\">\\n                                            <div class=\\"section-icon\\">\\uD83C\\uDFAF</div>\\n                                            <h4>").concat(i18n_1.i18n.t(\'settings.statistics.nobleSnipes\'), "</h4>\\n                            </div>\\n                                        <div class=\\"stats-grid\\">\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalSnipes\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.totalSnipes, "</div>\\n                            </div>\\n                                            <div class=\\"stat-item success\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.successfulSnipes\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.successfulSnipes, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item failure\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.failedSnipes\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.failedSnipes, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.nobleSnipeSuccessRate\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat((0, helper_utils_1.calculateSuccessRate)(stats.successfulSnipes, stats.failedSnipes), "</div>\\n                                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                                    <div class=\\"stat-detail-section\\">\\n                                        <div class=\\"section-title\\">\\n                                            <div class=\\"section-icon\\">\\uD83D\\uDCCB</div>\\n                                            <h4>").concat(i18n_1.i18n.t(\'settings.statistics.commands\'), "</h4>\\n                                        </div>\\n                                        <div class=\\"stats-grid\\">\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.commandsProcessed\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.commandsProcessed, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.commandsRenamed\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.commandsRenamed, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.totalAttacksReceived\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.totalAttacksReceived, "</div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"stat-detail-section\\">\\n                                        <div class=\\"section-title\\">\\n                                            <div class=\\"section-icon\\">\\u26A0\\uFE0F</div>\\n                                            <h4>").concat(i18n_1.i18n.t(\'settings.statistics.additionalInfo\'), "</h4>\\n                                        </div>\\n                                        <div class=\\"stats-grid\\">\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.commandsIgnored\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.commandsIgnored, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.nightBonusSkipped\'), "</div>\\n                                                <div class=\\"stat-number\\">").concat(stats.nightBonusSkipped, "</div>\\n                                            </div>\\n                                            <div class=\\"stat-item span-2\\">\\n                                                <div class=\\"stat-label\\">").concat(i18n_1.i18n.t(\'settings.statistics.lastReset\'), "</div>\\n                                                <div class=\\"stat-text\\">").concat(new Date(stats.lastReset).toLocaleString(), "</div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    \\n                    <div id=\\"modules\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.modules\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"modules-container\\">\\n                                    <p class=\\"modules-description\\">").concat(i18n_1.i18n.t(\'settings.modules.moduleDescription\'), "</p>\\n                                    \\n                                    <div class=\\"modules-section\\">\\n                                        <h4 class=\\"modules-section-title\\">").concat(i18n_1.i18n.t(\'settings.modules.activeModules\'), "</h4>\\n                                        <div class=\\"modules-grid\\">\\n                                            \x3c!-- Noble Filter Module --\x3e\\n                                            <div class=\\"module-card\\">\\n                                                <div class=\\"module-header\\">\\n                                                    <div class=\\"module-title\\">\\n                                                        <div class=\\"module-icon\\">\\uD83C\\uDFAF</div>\\n                                                        <span>").concat(i18n_1.i18n.t(\'settings.modules.nobleFilterTitle\'), "</span>\\n                                                    </div>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"noble_filter_enabled\\" ").concat(config.NOBLE_FILTER_ENABLED ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                                <div class=\\"module-body\\">\\n                                                    <div class=\\"module-description\\">\\n                                                        ").concat(i18n_1.i18n.t(\'settings.modules.nobleFilterDescription\'), "\\n                                </div>\\n                                \\n                                                    <div class=\\"module-actions\\">\\n                                                        <div class=\\"module-status\\">\\n                                                            <div class=\\"status-indicator ").concat(config.NOBLE_FILTER_ENABLED ? \'status-enabled\' : \'status-disabled\', "\\"></div>\\n                                                            <span>").concat(config.NOBLE_FILTER_ENABLED ? i18n_1.i18n.t(\'settings.modules.moduleEnabled\') : i18n_1.i18n.t(\'settings.modules.moduleDisabled\'), "</span>\\n                                                        </div>\\n                                                    </div>\\n                                                    \\n                                                    <div class=\\"module-settings\\" id=\\"noble-filter-settings\\" style=\\"").concat(config.NOBLE_FILTER_ENABLED ? \'\' : \'display: none;\', "\\">\\n                                                        <div class=\\"module-settings-header\\">\\n                                                            <h5 class=\\"module-settings-title\\">").concat(i18n_1.i18n.t(\'settings.modules.moduleSettings\'), "</h5>\\n                                                            <button class=\\"module-toggle-btn\\" id=\\"toggle-noble-settings\\">-</button>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\"module-settings-content expanded\\" id=\\"noble-settings-content\\">\\n                                                            <div class=\\"module-keywords\\">\\n                                                                <div class=\\"keywords-header\\">\\n                                                                    <h6 class=\\"keywords-title\\">").concat(i18n_1.i18n.t(\'settings.modules.nobleKeywords\'), "</h6>\\n                                                                </div>\\n                                                                \\n                                                                <div class=\\"keywords-list\\" id=\\"noble_treated_keywords\\">\\n                                            ").concat(config.NOBLE_TREATED_KEYWORDS.map(function (keyword) { return "\\n                                                                        <div class=\\"keyword-item\\">\\n                                                                            <input type=\\"text\\" class=\\"keyword-input\\" value=\\"".concat(keyword, "\\">\\n                                                                            <a class=\\"keyword-remove remove-noble-keyword\\">\\u00D7</a>\\n                                                </div>\\n                                            "); }).join(\'\'), "\\n                                        </div>\\n                                                                \\n                                                                <button class=\\"keyword-add-btn\\" id=\\"add_noble_keyword\\">").concat(i18n_1.i18n.t(\'general.add\'), "</button>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"modules-section\\">\\n                                        <h4 class=\\"modules-section-title\\">").concat(i18n_1.i18n.t(\'settings.modules.comingSoonModules\'), "</h4>\\n                                        <div class=\\"modules-grid\\">\\n                                            \x3c!-- Reconquer Assistant Module (Coming Soon) --\x3e\\n                                            <div class=\\"module-card module-coming-soon\\">\\n                                                <div class=\\"module-header\\">\\n                                                    <div class=\\"module-title\\">\\n                                                        <div class=\\"module-icon\\">\\uD83C\\uDFF0</div>\\n                                                        <span>").concat(i18n_1.i18n.t(\'settings.modules.reconquerModuleTitle\'), "</span>\\n                                                    </div>\\n                                                    <div class=\\"toggle-switch\\">\\n                                                        <input type=\\"checkbox\\" disabled>\\n                                                        <span class=\\"toggle-slider\\"></span>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\"module-body\\">\\n                                                    <div class=\\"module-description\\">\\n                                                        ").concat(i18n_1.i18n.t(\'settings.modules.reconquerModuleDescription\'), "\\n                                                    </div>\\n                                                    \\n                                                    <div class=\\"module-actions\\">\\n                                                        <div class=\\"module-status\\">\\n                                                            <div class=\\"status-indicator status-disabled\\"></div>\\n                                                            <span>").concat(i18n_1.i18n.t(\'settings.modules.moduleDisabled\'), "</span>\\n                                                        </div>\\n                                                        <button class=\\"module-configure-btn\\" disabled>").concat(i18n_1.i18n.t(\'settings.modules.configureModule\'), "</button>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"tasks\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.sections.tasks\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div id=\\"tasks-container\\">\\n                                    <div class=\\"tasks-summary\\">\\n                                        <div class=\\"summary-card\\">\\n                                            <div class=\\"summary-title\\">").concat(i18n_1.i18n.t(\'settings.tasks.pendingTasks\'), "</div>\\n                                            <div class=\\"summary-value\\" id=\\"pending-tasks-count\\">0</div>\\n                                    </div>\\n                                        <div class=\\"summary-card\\">\\n                                            <div class=\\"summary-title\\">").concat(i18n_1.i18n.t(\'settings.tasks.nextTask\'), "</div>\\n                                            <div class=\\"summary-value\\" id=\\"next-task-time\\">-</div>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"tasks-list-container\\">\\n                                        <h4>").concat(i18n_1.i18n.t(\'settings.tasks.summary\'), "</h4>\\n                                        <div id=\\"next-tasks-list\\" class=\\"tasks-list\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div id=\\"noble-snipe\\" class=\\"tab-content\\">\\n                        <div class=\\"content-card\\">\\n                            <div class=\\"card-header\\">\\n                                <h3>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.title\'), "</h3>\\n                            </div>\\n                            <div class=\\"card-body\\">\\n                                <div class=\\"option-grid\\">\\n                                    <div class=\\"option\\">\\n                                        <label for=\\"noble_snipe_enabled\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.enabled\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"noble_snipe_enabled\\" ").concat(config.NOBLE_SNIPE_ENABLED ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\"option\\">\\n                                        <label for=\\"noble_snipe_auto_mode\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.autoMode\'), "</label>\\n                                        <div class=\\"toggle-switch\\">\\n                                            <input type=\\"checkbox\\" id=\\"noble_snipe_auto_mode\\" ").concat(config.NOBLE_SNIPE_AUTO_MODE ? "checked" : "", ">\\n                                            <span class=\\"toggle-slider\\"></span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\"noble-settings-container\\" id=\\"noble_settings_container\\" style=\\"").concat(config.NOBLE_SNIPE_ENABLED ? "" : "display: none;", "\\">\\n                                    <div class=\\"settings-tabs\\">\\n                                        <button class=\\"settings-tab active\\" data-settings-tab=\\"timing\\">\\u23F1\\uFE0F ").concat(i18n_1.i18n.t(\'general.timing\') || \'Timing\', "</button>\\n                                        <button class=\\"settings-tab\\" data-settings-tab=\\"conditions\\">\\uD83D\\uDD04 ").concat(i18n_1.i18n.t(\'settings.nobleSnipe.conditionsTitle\') || \'Conditions\', "</button>\\n                                        <button class=\\"settings-tab\\" data-settings-tab=\\"patterns\\">\\uD83D\\uDE82 ").concat(i18n_1.i18n.t(\'settings.nobleSnipe.trainPatterns\') || \'Patterns\', "</button>\\n                                    </div>\\n                                    \\n                                    <div class=\\"settings-content\\">\\n                                        \x3c!-- Timing Settings --\x3e\\n                                        <div class=\\"settings-tab-content active\\" id=\\"timing-settings\\">\\n                                            <div class=\\"settings-grid\\">\\n                                                <div class=\\"setting-item\\">\\n                                                    <label for=\\"noble_snipe_offset\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clickOffset\'), "</label>\\n                                                    <div class=\\"input-with-info\\">\\n                                                        <input type=\\"number\\" id=\\"noble_snipe_offset\\" value=\\"").concat(config.CLICK_OFFSET, "\\" min=\\"0\\">\\n                                                        <div class=\\"info-tooltip\\" title=\\"").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clickOffsetHelp\'), "\\">\\u2139\\uFE0F</div>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\"setting-item\\">\\n                                                    <label for=\\"noble_snipe_noble_snipe_offset\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.nobleSnipeOffset\'), "</label>\\n                                                    <div class=\\"input-with-info\\">\\n                                                        <input type=\\"number\\" id=\\"noble_snipe_noble_snipe_offset\\" value=\\"").concat(config.NOBLE_SNIPE_OFFSET, "\\" min=\\"0\\">\\n                                                        <div class=\\"info-tooltip\\" title=\\"").concat(i18n_1.i18n.t(\'settings.nobleSnipe.nobleSnipeOffsetHelp\'), "\\">\\u2139\\uFE0F</div>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\"setting-item\\">\\n                                                    <label for=\\"noble_snipe_time_before_starting\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.snipeTimeBeforeStarting\'), "</label>\\n                                                    <input type=\\"number\\" id=\\"noble_snipe_time_before_starting\\" value=\\"").concat(config.NOBLE_SNIPE_TIME_BEFORE_STARTING / 1000, "\\" min=\\"1\\">\\n                                                </div>\\n                                                \\n                                                <div class=\\"setting-item\\">\\n                                                    <label for=\\"noble_snipe_min_interval_between_snipes\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.snipeMinIntervalBetweenSnipes\'), "</label>\\n                                                    <input type=\\"number\\" id=\\"noble_snipe_min_interval_between_snipes\\" value=\\"").concat(config.NOBLE_SNIPE_MIN_INTERVAL_BETWEEN_SNIPES / 1000, "\\" min=\\"1\\">\\n                                                </div>\\n                                                \\n                                                <div class=\\"setting-item\\">\\n                                                    <label for=\\"noble_snipe_max_attack_proximity\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.maxAttackProximity\'), "</label>\\n                                                    <div class=\\"input-with-info\\">\\n                                                        <input type=\\"number\\" id=\\"noble_snipe_max_attack_proximity\\" value=\\"").concat(config.NOBLE_SNIPE_MAX_ATTACK_PROXIMITY, "\\" min=\\"1\\">\\n                                                        <div class=\\"info-tooltip\\" title=\\"").concat(i18n_1.i18n.t(\'settings.nobleSnipe.maxAttackProximityHelp\'), "\\">\\u2139\\uFE0F</div>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\"setting-item\\">\\n                                                    <label for=\\"noble_snipe_max_attempts\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.maxAttempts\'), "</label>\\n                                                    <input type=\\"number\\" id=\\"noble_snipe_max_attempts\\" value=\\"").concat(config.NOBLE_SNIPE_MAX_ATTEMPTS, "\\" min=\\"1\\">\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        \\n                                        \x3c!-- Conditions Settings --\x3e\\n                                        <div class=\\"settings-tab-content\\" id=\\"conditions-settings\\">\\n                                            <div class=\\"noble-conditions-container\\">\\n                                                <p class=\\"help-text\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.conditionsHelp\'), "</p>\\n                                                \\n                                                <div class=\\"card-like-container\\">\\n                                                    <table class=\\"vis condition-settings\\">\\n                                                        <tr>\\n                                                            <th>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.conditionName\'), "</th>\\n                                                            <th>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.conditionEnabled\'), "</th>\\n                                                            <th>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.conditionPriority\'), "</th>\\n                                                            <th>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.conditionDescription\'), "</th>\\n                                                        </tr>\\n                                                        <tr>\\n                                                            <td>\\n                                                                <div class=\\"condition-name\\">\\n                                                                    <span class=\\"condition-icon icon-train\\">\\uD83D\\uDE82</span>\\n                                                                    ").concat(i18n_1.i18n.t(\'settings.nobleSnipe.nobleTrain\'), "\\n                                                                </div>\\n                                                            </td>\\n                                                            <td>\\n                                                                <label class=\\"condition-toggle\\">\\n                                                                    <input type=\\"checkbox\\" id=\\"condition_nobleTrain\\" ").concat(config.CONDITIONS_ENABLED.nobleTrain ? "checked" : "", ">\\n                                                                    <span class=\\"condition-slider\\"></span>\\n                                                                </label>\\n                                                            </td>\\n                                                            <td><span class=\\"priority-medium\\">Medium</span></td>\\n                                                            <td class=\\"condition-description\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.conditionDescTrain\'), "</td>\\n                                                        </tr>\\n                                                    </table>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        \\n                                        \x3c!-- Patterns Settings --\x3e\\n                                        <div class=\\"settings-tab-content\\" id=\\"patterns-settings\\">\\n                                            <div class=\\"noble-train-patterns\\">\\n                                                <p class=\\"help-text\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.trainPatternsHelp\'), "</p>\\n                                                \\n                                                <div class=\\"pattern-builder-container\\">\\n                                                    <div class=\\"pattern-builder-title\\">\\n                                                        <span class=\\"icon\\">\\uD83D\\uDD04</span> ").concat(i18n_1.i18n.t(\'settings.nobleSnipe.patternBuilder\') || \'Pattern Builder\', "\\n                                                    </div>\\n                                                    \\n                                                    <div class=\\"pattern-preview\\">\\n                                                        <div class=\\"pattern-train-builder\\">\\n                                                            <div class=\\"noble-drag-item green\\" draggable=\\"true\\" data-type=\\"G\\">G</div>\\n                                                            <div class=\\"noble-drag-item full\\" draggable=\\"true\\" data-type=\\"F\\">F</div>\\n                                                            <span class=\\"pattern-builder-text\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.dragNobles\') || \'Drag nobles to create a pattern\', " \\u2192</span>\\n                                                            <div class=\\"pattern-slots\\" id=\\"pattern-builder-slots\\">\\n                                                                <div class=\\"pattern-slot\\" data-position=\\"0\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clickOrDrop\') || \'+\', "</div>\\n                                                                <div class=\\"pattern-slot\\" data-position=\\"1\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clickOrDrop\') || \'+\', "</div>\\n                                                                <div class=\\"pattern-slot\\" data-position=\\"2\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clickOrDrop\') || \'+\', "</div>\\n                                                                <div class=\\"pattern-slot\\" data-position=\\"3\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clickOrDrop\') || \'+\', "</div>\\n                                                                <div class=\\"pattern-slot\\" data-position=\\"4\\">").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clickOrDrop\') || \'+\', "</div>\\n                                                            </div>\\n                                                            <div class=\\"pattern-controls\\">\\n                                                                <button id=\\"clear-pattern-btn\\" class=\\"pattern-control-btn\\" title=\\"").concat(i18n_1.i18n.t(\'settings.nobleSnipe.clearPattern\') || \'Clear pattern\', "\\">\\n                                                                    <span class=\\"pattern-btn-icon\\">\\uD83D\\uDDD1\\uFE0F</span>\\n                                                                </button>\\n                                                            </div>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\"pattern-target-positions\\">\\n                                                            <span>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.targetPositions\') || \'Target Positions\', ":</span>\\n                                                            <div id=\\"pattern-builder-targets\\" class=\\"pattern-targeting\\">\\n                                                                \x3c!-- Target positions will be dynamically added here --\x3e\\n                                                            </div>\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\"pattern-tips\\">\\n                                                            ").concat(i18n_1.i18n.t(\'settings.nobleSnipe.patternTips\') || \'Click on a slot to cycle through noble types, or drag & drop nobles to create your pattern.\', "\\n                                                        </div>\\n                                                        \\n                                                        <div class=\\"pattern-actions\\">\\n                                                            <button id=\\"save-pattern-btn\\" class=\\"add-pattern-btn-large\\">\\n                                                                <span class=\\"icon\\">\\u2713</span>\\n                                                                ").concat(i18n_1.i18n.t(\'settings.nobleSnipe.savePattern\') || \'Save Pattern\', "\\n                                                            </button>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\"pattern-library\\">\\n                                                    <div class=\\"pattern-library-header\\">\\n                                                        <div class=\\"pattern-library-title\\">\\n                                                            <span class=\\"icon\\">\\uD83D\\uDE82</span> ").concat(i18n_1.i18n.t(\'settings.nobleSnipe.patternLibrary\') || \'Pattern Library\', "\\n                                                        </div>\\n                                                        <div class=\\"pattern-library-count\\" id=\\"pattern-count\\">0</div>\\n                                                    </div>\\n                                                    \\n                                                    <div class=\\"patterns-grid\\" id=\\"patterns-grid\\">\\n                                                        ").concat(Object.entries(config.NOBLE_TRAIN_PATTERNS || {}).length === 0 ?\n        "<div class=\\"empty-patterns\\">".concat(i18n_1.i18n.t(\'settings.nobleSnipe.noPatterns\') || \'No patterns created yet. Use the pattern builder above to create your first pattern.\', "</div>") :\n        Object.entries(config.NOBLE_TRAIN_PATTERNS || {}).map(function (_a) {\n            var pattern = _a[0], patternConfig = _a[1];\n            return "\\n                                                                <div class=\\"pattern-card\\" data-pattern=\\"".concat(pattern, "\\">\\n                                                                    <div class=\\"pattern-card-buttons\\">\\n                                                                        <button class=\\"pattern-card-btn edit\\" title=\\"").concat(i18n_1.i18n.t(\'general.edit\') || \'Edit\', "\\">\\u270F\\uFE0F</button>\\n                                                                        <button class=\\"pattern-card-btn delete\\" title=\\"").concat(i18n_1.i18n.t(\'general.delete\') || \'Delete\', "\\">\\uD83D\\uDDD1\\uFE0F</button>\\n                                                                    </div>\\n                                                                    <div class=\\"pattern-card-header\\">\\n                                                                        <div class=\\"pattern-display\\">\\n                                                                            ").concat(pattern.split(\'\').map(function (letter) { return "\\n                                                                                <div class=\\"noble-icon-mini ".concat(letter === \'G\' ? \'green\' : \'full\', "\\">").concat(letter, "</div>\\n                                                                            "); }).join(\'\'), "\\n                                                                        </div>\\n                                                                        <div class=\\"pattern-status\\">\\n                                                                            <label class=\\"toggle-switch pattern-toggle\\">\\n                                                                                <input type=\\"checkbox\\" class=\\"pattern-enabled\\" ").concat(patternConfig.enabled !== false ? \'checked\' : \'\', ">\\n                                                                                <span class=\\"toggle-slider\\"></span>\\n                                                                            </label>\\n                                                                        </div>\\n                                                                    </div>\\n                                                                    <div class=\\"pattern-targeting\\">\\n                                                                        <span>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.targetPositions\') || \'Target\', ":</span>\\n                                                                        ").concat(pattern.split(\'\').map(function (letter, index) { return "\\n                                                                            <div class=\\"target-position ".concat(patternConfig.snipePositions.includes(index) ? \'selected\' : \'\', "\\" data-position=\\"").concat(index, "\\">").concat(index + 1, "</div>\\n                                                                        "); }).join(\'\'), "\\n                                                                    </div>\\n                                                                    <div class=\\"pattern-card-actions\\">\\n                                                                        <div class=\\"pattern-action-display\\">\\n                                                                            <span>").concat(i18n_1.i18n.t(\'settings.nobleSnipe.otherAction\') || \'Action\', ":</span>\\n                                                                            <span class=\\"action-badge ").concat(patternConfig.action, "\\">").concat(patternConfig.action === \'dodge\' ?\n                i18n_1.i18n.t(\'general.dodge\') || \'Dodge\' :\n                i18n_1.i18n.t(\'general.ignore\') || \'Ignore\', "</span>\\n                                                                        </div>\\n                                                                        <select class=\\"pattern-action-select\\">\\n                                                                            <option value=\\"dodge\\" ").concat(patternConfig.action === \'dodge\' ? \'selected\' : \'\', ">").concat(i18n_1.i18n.t(\'general.dodge\') || \'Dodge\', "</option>\\n                                                                            <option value=\\"ignore\\" ").concat(patternConfig.action === \'ignore\' ? \'selected\' : \'\', ">").concat(i18n_1.i18n.t(\'general.ignore\') || \'Ignore\', "</option>\\n                                                                        </select>\\n                                                                    </div>\\n                                                                </div>\\n                                                            ");\n        }).join(\'\'), "\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <div class=\\"dialog-footer\\">\\n                <button class=\\"dialog-button primary-button\\" id=\\"saveAutoDefenseConfigBtn\\">").concat(i18n_1.i18n.t(\'general.save\'), "</button>\\n                <button class=\\"dialog-button secondary-button\\" id=\\"closeAutoDefenseBtn2\\">").concat(i18n_1.i18n.t(\'general.cancel\'), "</button>\\n            </div>\\n        </div>\\n    </div>\\n  ");\n};\nexports.dialogHtml = dialogHtml;\nexports.generateDialogHtml = exports.dialogHtml;\n\n\n//# sourceURL=webpack:///./src/ui/dialog.ts?')},"./src/ui/footer.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addNewFooter = addNewFooter;\nvar storage_1 = __webpack_require__(/*! ../storage */ \"./src/storage.ts\");\nvar config_1 = __webpack_require__(/*! ../ui/config */ \"./src/ui/config.ts\");\nvar nobleFilter_1 = __webpack_require__(/*! ./incomings/nobleFilter */ \"./src/ui/incomings/nobleFilter.ts\");\nvar nobleAttacksCache_1 = __webpack_require__(/*! ../ui/incomings/nobleAttacksCache */ \"./src/ui/incomings/nobleAttacksCache.ts\");\nvar i18n_1 = __webpack_require__(/*! ../i18n */ \"./src/i18n/index.ts\");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ \"./src/utils/serverTime.utils.ts\");\nvar offsetTester_1 = __webpack_require__(/*! ../autosnipe/offsetTester */ \"./src/autosnipe/offsetTester.ts\");\nvar adapter_1 = __webpack_require__(/*! ../TaskManager/adapter */ \"./src/TaskManager/adapter.ts\");\n// Add these functions outside of addNewFooter at the top of the file\nfunction updateCountdown() {\n    var _this = this;\n    var timerElement = document.querySelector('.countdown-timer');\n    if (!timerElement)\n        return;\n    var targetTime = parseInt(timerElement.getAttribute('data-target') || '0');\n    var now = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n    var timeLeft = Math.max(0, targetTime - now);\n    if (timeLeft > 0) {\n        var minutes = Math.floor(timeLeft / (1000 * 60));\n        var seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);\n        timerElement.textContent = \"\".concat(minutes, \"m \").concat(seconds, \"s\");\n        requestAnimationFrame(updateCountdown);\n    }\n    else {\n        timerElement.textContent = 'agora!';\n        setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n            var countdownContainer, nextActions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        countdownContainer = document.querySelector('.countdown-container');\n                        if (!countdownContainer) return [3 /*break*/, 2];\n                        return [4 /*yield*/, (0, adapter_1.getNextActionsWithTaskManager)()];\n                    case 1:\n                        nextActions = _a.sent();\n                        updateCountdownContent(countdownContainer, nextActions);\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        }); }, 200);\n    }\n}\n// New function for updating countdown DOM elements without replacing HTML\nfunction updateCountdownContent(container, nextActions) {\n    if (nextActions.length > 0) {\n        var action = nextActions[0];\n        var actionType = action.type === \"Dodge\" ? \"Desvio\" :\n            action.type === \"NobleSnipe\" ? \"Snipe\" : \"Cancelamento\";\n        var actionColor = getActionColor(action.type);\n        // Check if we need to create or update elements\n        var actionSpan = container.querySelector('span[style*=\"color\"]');\n        var timerSpan = container.querySelector('.countdown-timer');\n        if (!actionSpan || !timerSpan) {\n            // Create new elements if they don't exist\n            container.innerHTML = getActionHTML(action);\n            timerSpan = container.querySelector('.countdown-timer');\n            requestAnimationFrame(updateCountdown);\n        }\n        else {\n            // Update existing elements\n            actionSpan.textContent = \"\".concat(actionType, \" : \");\n            actionSpan.setAttribute('style', \"font-weight: bold; color: \".concat(actionColor));\n            timerSpan.setAttribute('data-target', action.time.getTime().toString());\n            requestAnimationFrame(updateCountdown);\n        }\n    }\n    else if (!container.innerHTML.includes('Nenhuma ação')) {\n        container.innerHTML = '<span style=\"color: #666\">Nenhuma ação agendada</span>';\n    }\n}\nfunction getActionColor(actionType) {\n    switch (actionType) {\n        case \"Dodge\":\n            return \"#d17309\"; // Laranja mais escuro\n        case \"NobleSnipe\":\n            return \"#ff6666\";\n        case \"Cancel\":\n            return \"#0d83dd\";\n        default:\n            return \"#2196F3\";\n    }\n}\nfunction getActionHTML(nextAction) {\n    var actionType = nextAction.type === \"Dodge\" ? \"Desvio\" :\n        nextAction.type === \"NobleSnipe\" ? \"Snipe\" : \"Cancelamento\";\n    var actionColor = getActionColor(nextAction.type);\n    var actionIcon = nextAction.type === \"Dodge\" ? \"🛡️\" :\n        nextAction.type === \"NobleSnipe\" ? \"⚔️\" : \"❌\";\n    return \"<span style=\\\"display: inline-flex; align-items: center; gap: 2px; font-size: 12px;\\\">\".concat(actionIcon, \" <span style=\\\"font-weight: bold; color: \").concat(actionColor, \"\\\">\").concat(actionType, \":</span></span> <span class=\\\"countdown-timer\\\" style=\\\"font-weight: bold; color: #333; font-size: 12px;\\\" data-target=\\\"\").concat(nextAction.time.getTime(), \"\\\">calculando...</span>\");\n}\nfunction createCountdownElement() {\n    return __awaiter(this, void 0, void 0, function () {\n        var countdownContainer;\n        var _this = this;\n        return __generator(this, function (_a) {\n            countdownContainer = document.createElement('span');\n            countdownContainer.className = 'countdown-container';\n            countdownContainer.style.fontWeight = 'bold';\n            countdownContainer.style.display = 'inline-flex';\n            countdownContainer.style.alignItems = 'center';\n            countdownContainer.style.gap = '3px';\n            countdownContainer.style.fontSize = '12px';\n            // Start with a loading indicator, then update asynchronously\n            countdownContainer.innerHTML = '<span style=\"color: #666; font-style: italic\">Carregando...</span>';\n            // Fetch next actions asynchronously after returning the element\n            setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n                var nextActions;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, adapter_1.getNextActionsWithTaskManager)()];\n                        case 1:\n                            nextActions = _a.sent();\n                            if (nextActions.length > 0) {\n                                countdownContainer.innerHTML = getActionHTML(nextActions[0]);\n                                requestAnimationFrame(updateCountdown);\n                            }\n                            else {\n                                countdownContainer.innerHTML = '<span style=\"color: #666; font-style: italic\">Nenhuma ação agendada</span>';\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            }); }, 10);\n            return [2 /*return*/, countdownContainer];\n        });\n    });\n}\nfunction addNewFooter() {\n    return __awaiter(this, void 0, void 0, function () {\n        var isActive, currentOffset, linkContainer, leftSection, centerSection, rightSection, countdownElement, autodefenseText, statusElement, toggleButton, configLink, testOffsetContainer, testOffsetButton, offsetDisplay, divider1, nobleContainer, nobleIcon, nobleFilterLink_1, divider2, notasContainer, notasIcon, notasLink;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    isActive = storage_1.AutoDodgeStorage.loadActive();\n                    currentOffset = storage_1.AutoDodgeStorage.loadConfig().CLICK_OFFSET;\n                    linkContainer = document.getElementById('linkContainer');\n                    if (!linkContainer) {\n                        console.error(\"Elemento linkContainer não encontrado\");\n                        return [2 /*return*/];\n                    }\n                    // Set a flag to indicate the footer is being created\n                    if (!window.footerBeingCreated) {\n                        window.footerBeingCreated = true;\n                    }\n                    else {\n                        // If footer is already being created, don't duplicate the process\n                        return [2 /*return*/];\n                    }\n                    // Maintain compact height but distribute elements better horizontally\n                    linkContainer.style.padding = '1px 8px';\n                    linkContainer.style.display = 'flex';\n                    linkContainer.style.alignItems = 'center';\n                    linkContainer.style.flexWrap = 'nowrap'; // Prevent wrapping\n                    linkContainer.style.justifyContent = 'space-between'; // Spread sections across the width\n                    linkContainer.style.gap = '10px';\n                    linkContainer.style.background = '';\n                    linkContainer.style.borderRadius = '0';\n                    linkContainer.style.borderTop = '';\n                    linkContainer.style.fontSize = '12px';\n                    linkContainer.style.overflowX = 'auto'; // Allow horizontal scrolling if needed\n                    linkContainer.style.whiteSpace = 'nowrap'; // Keep everything on one line\n                    // Clear the existing content\n                    linkContainer.innerHTML = '';\n                    leftSection = document.createElement('div');\n                    leftSection.style.display = 'flex';\n                    leftSection.style.alignItems = 'center';\n                    leftSection.style.gap = '5px';\n                    centerSection = document.createElement('div');\n                    centerSection.style.display = 'flex';\n                    centerSection.style.alignItems = 'center';\n                    centerSection.style.gap = '5px';\n                    centerSection.style.justifyContent = 'center';\n                    rightSection = document.createElement('div');\n                    rightSection.style.display = 'flex';\n                    rightSection.style.alignItems = 'center';\n                    rightSection.style.gap = '5px';\n                    rightSection.style.justifyContent = 'flex-end';\n                    return [4 /*yield*/, createCountdownElement()];\n                case 1:\n                    countdownElement = _a.sent();\n                    leftSection.appendChild(countdownElement);\n                    autodefenseText = document.createElement('span');\n                    autodefenseText.textContent = \"\".concat(i18n_1.i18n.t('footer.title'), \": \");\n                    autodefenseText.style.fontWeight = 'bold';\n                    autodefenseText.style.color = '#555';\n                    centerSection.appendChild(autodefenseText);\n                    statusElement = document.createElement('span');\n                    statusElement.textContent = isActive ? i18n_1.i18n.t('footer.status.on') : i18n_1.i18n.t('footer.status.off');\n                    statusElement.style.color = isActive ? '#4CAF50' : '#F44336';\n                    statusElement.style.fontWeight = 'bold';\n                    statusElement.style.padding = '1px 3px';\n                    statusElement.style.borderRadius = '2px';\n                    statusElement.style.background = isActive ? 'rgba(76, 175, 80, 0.1)' : 'rgba(244, 67, 54, 0.1)';\n                    centerSection.appendChild(statusElement);\n                    // Toggle button\n                    centerSection.appendChild(document.createTextNode(' '));\n                    toggleButton = document.createElement('button');\n                    toggleButton.textContent = isActive ? 'Desligar' : 'Ligar';\n                    toggleButton.className = isActive ? 'btn btn-confirm-no' : 'btn btn-confirm-yes';\n                    toggleButton.style.padding = '1px 5px';\n                    toggleButton.style.fontSize = '11px';\n                    toggleButton.style.margin = '0 3px';\n                    toggleButton.style.lineHeight = '1';\n                    toggleButton.onclick = function (e) {\n                        e.preventDefault();\n                        var newState = !isActive;\n                        storage_1.AutoDodgeStorage.saveActive(newState);\n                        location.reload();\n                    };\n                    centerSection.appendChild(toggleButton);\n                    // Settings link\n                    centerSection.appendChild(document.createTextNode(' '));\n                    configLink = document.createElement('a');\n                    configLink.href = '#';\n                    configLink.className = 'footer-link';\n                    configLink.innerHTML = \"<span style=\\\"vertical-align: text-bottom;\\\">\\u2699\\uFE0F</span> \".concat(i18n_1.i18n.t('footer.settings'));\n                    configLink.style.textDecoration = 'none';\n                    configLink.style.color = '#555';\n                    configLink.onclick = function (e) {\n                        e.preventDefault();\n                        (0, config_1.openConfigDialog)();\n                    };\n                    centerSection.appendChild(configLink);\n                    testOffsetContainer = document.createElement('span');\n                    testOffsetContainer.style.display = 'inline-flex';\n                    testOffsetContainer.style.alignItems = 'center';\n                    testOffsetContainer.style.gap = '3px';\n                    testOffsetButton = document.createElement('a');\n                    testOffsetButton.href = '#';\n                    testOffsetButton.className = 'footer-link';\n                    testOffsetButton.innerHTML = \"<span style=\\\"vertical-align: text-bottom;\\\">\\uD83C\\uDFAF</span> Test Offset\";\n                    testOffsetButton.style.textDecoration = 'none';\n                    testOffsetButton.style.color = '#555';\n                    testOffsetButton.onclick = function (e) {\n                        e.preventDefault();\n                        (0, offsetTester_1.startOffsetTest)();\n                    };\n                    testOffsetContainer.appendChild(testOffsetButton);\n                    offsetDisplay = document.createElement('span');\n                    offsetDisplay.innerHTML = \"<span style=\\\"color:#777\\\">(\".concat(currentOffset, \"ms)</span>\");\n                    testOffsetContainer.appendChild(offsetDisplay);\n                    rightSection.appendChild(testOffsetContainer);\n                    divider1 = document.createElement('span');\n                    divider1.textContent = '|';\n                    divider1.style.color = '#999';\n                    divider1.style.margin = '0 5px';\n                    rightSection.appendChild(divider1);\n                    // Noble filter link if enabled - this part may be async\n                    if ((0, nobleFilter_1.isNobleFilterEnabled)()) {\n                        nobleContainer = document.createElement('span');\n                        nobleContainer.style.display = 'inline-flex';\n                        nobleContainer.style.alignItems = 'center';\n                        nobleContainer.style.gap = '3px';\n                        nobleIcon = document.createElement('span');\n                        nobleIcon.textContent = '👑';\n                        nobleIcon.style.fontSize = '12px';\n                        nobleContainer.appendChild(nobleIcon);\n                        nobleFilterLink_1 = document.createElement('a');\n                        nobleFilterLink_1.href = '#';\n                        nobleFilterLink_1.className = 'footer-link';\n                        nobleFilterLink_1.setAttribute('data-noble-filter', 'true');\n                        nobleFilterLink_1.style.textDecoration = 'none';\n                        nobleFilterLink_1.style.color = '#555';\n                        nobleFilterLink_1.textContent = 'Nobres';\n                        nobleFilterLink_1.onclick = function (e) {\n                            e.preventDefault();\n                            (0, nobleFilter_1.toggleNobleFilter)();\n                            updateNobleFilterLink(nobleFilterLink_1);\n                        };\n                        nobleContainer.appendChild(nobleFilterLink_1);\n                        // Update async after initial render\n                        setTimeout(function () {\n                            updateNobleFilterLink(nobleFilterLink_1);\n                        }, 100);\n                        // Setup polling for other pages\n                        (0, nobleAttacksCache_1.setupCachePolling)(function () {\n                            var linkElement = document.querySelector('.footer-link[data-noble-filter]');\n                            if (linkElement) {\n                                updateNobleFilterLink(linkElement);\n                            }\n                        });\n                        rightSection.appendChild(nobleContainer);\n                        divider2 = document.createElement('span');\n                        divider2.textContent = '|';\n                        divider2.style.color = '#999';\n                        divider2.style.margin = '0 5px';\n                        rightSection.appendChild(divider2);\n                    }\n                    notasContainer = document.createElement('span');\n                    notasContainer.style.display = 'inline-flex';\n                    notasContainer.style.alignItems = 'center';\n                    notasContainer.style.gap = '3px';\n                    notasIcon = document.createElement('span');\n                    notasIcon.textContent = '📝';\n                    notasIcon.style.fontSize = '12px';\n                    notasContainer.appendChild(notasIcon);\n                    notasLink = document.createElement('a');\n                    notasLink.href = \"\".concat(game_data.link_base_pure, \"memo\");\n                    notasLink.className = 'footer-link';\n                    notasLink.textContent = 'Notas';\n                    notasLink.style.textDecoration = 'none';\n                    notasLink.style.color = '#555';\n                    notasContainer.appendChild(notasLink);\n                    rightSection.appendChild(notasContainer);\n                    // Add all sections to the main container\n                    linkContainer.appendChild(leftSection);\n                    linkContainer.appendChild(centerSection);\n                    linkContainer.appendChild(rightSection);\n                    // Reset creation flag after a short delay\n                    setTimeout(function () {\n                        window.footerBeingCreated = false;\n                    }, 500);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Call immediately when script loads to ensure footer appears ASAP\nsetTimeout(addNewFooter, 10);\n// Keep the simplified updateNobleFilterLink that takes the link as a parameter\nfunction updateNobleFilterLink(nobleFilterLink) {\n    return __awaiter(this, void 0, void 0, function () {\n        var counts, isFiltering, content;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!nobleFilterLink)\n                        return [2 /*return*/];\n                    // Start simple, then update\n                    nobleFilterLink.textContent = 'Nobres';\n                    return [4 /*yield*/, (0, nobleAttacksCache_1.getNobleAttacksCounts)()];\n                case 1:\n                    counts = _a.sent();\n                    isFiltering = (0, nobleFilter_1.getFilterState)();\n                    // Simple string formatting but with better visual cues\n                    if (isFiltering) {\n                        nobleFilterLink.textContent = i18n_1.i18n.t('footer.nobles.showAll');\n                        return [2 /*return*/];\n                    }\n                    if (counts.treated === 0 && counts.new === 0) {\n                        nobleFilterLink.style.display = 'none';\n                        return [2 /*return*/];\n                    }\n                    nobleFilterLink.style.display = '';\n                    content = \"\".concat(i18n_1.i18n.t('footer.nobles.title'), \": \");\n                    if (counts.treated > 0) {\n                        content += \"<span style=\\\"color:green\\\">\".concat(counts.treated, \"</span> \").concat(counts.treated === 1 ? i18n_1.i18n.t('footer.nobles.treated') : i18n_1.i18n.t('footer.nobles.treatedPlural'));\n                        if (counts.new > 0) {\n                            content += ', ';\n                        }\n                    }\n                    if (counts.new > 0) {\n                        content += \"<span style=\\\"color:red\\\">\".concat(counts.new, \"</span> \").concat(counts.new === 1 ? i18n_1.i18n.t('footer.nobles.new') : i18n_1.i18n.t('footer.nobles.newPlural'));\n                    }\n                    nobleFilterLink.innerHTML = content;\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Observer interval with improved logic to prevent unnecessary redraws\nvar observerInterval = setInterval(function () { return __awaiter(void 0, void 0, void 0, function () {\n    var linkContainer, countdownExists, autodefenseExists, leftSection, countdownElement;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                linkContainer = document.getElementById('linkContainer');\n                // Don't interrupt if footer is currently being created\n                if (window.footerBeingCreated)\n                    return [2 /*return*/];\n                if (!linkContainer)\n                    return [2 /*return*/];\n                if (linkContainer.innerHTML.trim() === '') {\n                    recreateFooter();\n                    addNewFooter();\n                    return [2 /*return*/];\n                }\n                countdownExists = linkContainer.querySelector('.countdown-container');\n                autodefenseExists = linkContainer.textContent &&\n                    linkContainer.textContent.includes(i18n_1.i18n.t('footer.title'));\n                if (!!autodefenseExists) return [3 /*break*/, 1];\n                addNewFooter();\n                return [3 /*break*/, 3];\n            case 1:\n                if (!!countdownExists) return [3 /*break*/, 3];\n                leftSection = linkContainer.firstElementChild;\n                if (!leftSection) return [3 /*break*/, 3];\n                return [4 /*yield*/, createCountdownElement()];\n            case 2:\n                countdownElement = _a.sent();\n                leftSection.prepend(countdownElement);\n                _a.label = 3;\n            case 3: return [2 /*return*/];\n        }\n    });\n}); }, 3000);\n// Reduced frequency and improved update logic\nvar countdownRefreshInterval = setInterval(function () { return __awaiter(void 0, void 0, void 0, function () {\n    var countdownContainer, nextActions, timerSpan, currentTarget, newTarget, actionSpan, currentActionType, newActionType;\n    var _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                if (window.footerBeingCreated)\n                    return [2 /*return*/];\n                countdownContainer = document.querySelector('.countdown-container');\n                if (!countdownContainer)\n                    return [2 /*return*/];\n                return [4 /*yield*/, (0, adapter_1.getNextActionsWithTaskManager)()];\n            case 1:\n                nextActions = _b.sent();\n                // Only update if we have actions\n                if (nextActions.length > 0) {\n                    timerSpan = countdownContainer.querySelector('.countdown-timer');\n                    if (!timerSpan) {\n                        updateCountdownContent(countdownContainer, nextActions);\n                        return [2 /*return*/];\n                    }\n                    currentTarget = timerSpan.getAttribute('data-target');\n                    newTarget = nextActions[0].time.getTime().toString();\n                    actionSpan = countdownContainer.querySelector('span[style*=\"color\"]');\n                    currentActionType = (_a = actionSpan === null || actionSpan === void 0 ? void 0 : actionSpan.textContent) === null || _a === void 0 ? void 0 : _a.split(' : ')[0];\n                    newActionType = nextActions[0].type === \"Dodge\" ? \"Desvio\" :\n                        nextActions[0].type === \"NobleSnipe\" ? \"Snipe\" : \"Cancelamento\";\n                    // Only update if necessary - time changed or action type changed\n                    if (currentTarget !== newTarget || currentActionType !== newActionType) {\n                        updateCountdownContent(countdownContainer, nextActions);\n                    }\n                }\n                else if (!countdownContainer.innerHTML.includes('Nenhuma ação')) {\n                    countdownContainer.innerHTML = '<span style=\"color: #666\">Nenhuma ação agendada</span>';\n                }\n                return [2 /*return*/];\n        }\n    });\n}); }, 2000); // Every 2 seconds is sufficient\n// Add this line to ensure the interval is cleared when the page is unloaded\nwindow.addEventListener(\"beforeunload\", function () {\n    clearInterval(observerInterval);\n    clearInterval(countdownRefreshInterval);\n});\nfunction recreateFooter() {\n    var linkContainer = document.getElementById('linkContainer');\n    if (!linkContainer) {\n        console.error(\"Elemento linkContainer não encontrado\");\n        return;\n    }\n    // Recriar o conteúdo original do footer\n    linkContainer.innerHTML = \"\";\n}\n\n\n//# sourceURL=webpack:///./src/ui/footer.ts?")},"./src/ui/incomings/nobleAttacksCache.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.getNobleAttacksCounts = getNobleAttacksCounts;\nexports.updateNobleAttacksCache = updateNobleAttacksCache;\nexports.setupCachePolling = setupCachePolling;\nexports.setupNobleAttacksObserver = setupNobleAttacksObserver;\nvar nobleAttacksService_1 = __webpack_require__(/*! ../../storage/services/nobleAttacksService */ "./src/storage/services/nobleAttacksService.ts");\nvar nobleFilter_1 = __webpack_require__(/*! ./nobleFilter */ "./src/ui/incomings/nobleFilter.ts");\nvar nobleFilter_2 = __webpack_require__(/*! ./nobleFilter */ "./src/ui/incomings/nobleFilter.ts");\nvar i18n_1 = __webpack_require__(/*! ../../i18n */ "./src/i18n/index.ts");\nvar logging_utils_1 = __webpack_require__(/*! ../../utils/logging.utils */ "./src/utils/logging.utils.ts");\nvar storage_1 = __webpack_require__(/*! ../../storage */ "./src/storage.ts");\nvar CACHE_CHECK_INTERVAL = 10000; // 10 segundos\nvar cacheCheckInterval = null;\nvar nobleAttacksCache = null;\nvar observerRef = null;\nvar pollingInterval = null;\n// Versão atualizada do IndexedDB para evitar erros de versão\nvar DB_VERSION = 5;\n/**\n * Obter contagem de ataques de nobre (tratados e novos)\n */\nfunction getNobleAttacksCounts() {\n    return nobleAttacksCache || { treated: 0, new: 0, lastUpdate: 0 };\n}\n/**\n * Atualizar cache de ataques de nobre\n */\nfunction updateNobleAttacksCache() {\n    return __awaiter(this, void 0, void 0, function () {\n        var config_1, rows, treated_1, newAttacks_1, updatedCache, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    config_1 = storage_1.AutoDodgeStorage.loadConfig();\n                    // Verificar se o recurso está ativado\n                    if (!config_1.NOBLE_FILTER_ENABLED) {\n                        return [2 /*return*/];\n                    }\n                    rows = document.querySelectorAll("#incomings_table tr");\n                    treated_1 = 0;\n                    newAttacks_1 = 0;\n                    rows.forEach(function (row, index) {\n                        var _a;\n                        if (index === 0)\n                            return; // Pular linha de cabeçalho\n                        var nameCell = row.querySelector(".quickedit-label");\n                        if (nameCell && ((_a = nameCell.textContent) === null || _a === void 0 ? void 0 : _a.includes("Nobre"))) {\n                            // Verificar se alguma das palavras-chave de tratamento está presente no nome do comando\n                            var isCommandTreated = config_1.NOBLE_TREATED_KEYWORDS.some(function (keyword) { var _a; return (_a = nameCell.textContent) === null || _a === void 0 ? void 0 : _a.includes(keyword); });\n                            if (isCommandTreated) {\n                                treated_1++;\n                            }\n                            else {\n                                newAttacks_1++;\n                            }\n                        }\n                    });\n                    updatedCache = {\n                        treated: treated_1,\n                        new: newAttacks_1,\n                        lastUpdate: Date.now()\n                    };\n                    // Salvar no storage\n                    return [4 /*yield*/, (0, nobleAttacksService_1.saveNobleAttacksCache)(updatedCache)];\n                case 1:\n                    // Salvar no storage\n                    _a.sent();\n                    // Atualizar referência local\n                    nobleAttacksCache = updatedCache;\n                    return [2 /*return*/, updatedCache];\n                case 2:\n                    error_1 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao atualizar cache de ataques de nobre: ".concat(error_1), "error");\n                    return [2 /*return*/];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n// Função para iniciar o polling do cache em outras páginas\nfunction setupCachePolling(updateCallback) {\n    var _this = this;\n    if (window.location.href.includes("mode=incomings"))\n        return;\n    var lastUpdate = 0;\n    var checkCache = function () { return __awaiter(_this, void 0, void 0, function () {\n        var cache;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, nobleAttacksService_1.getNobleAttacksCache)()];\n                case 1:\n                    cache = _a.sent();\n                    if (cache.lastUpdate > lastUpdate) {\n                        lastUpdate = cache.lastUpdate;\n                        updateCallback();\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    // Limpa intervalo existente se houver\n    if (cacheCheckInterval) {\n        clearInterval(cacheCheckInterval);\n    }\n    // Inicia novo intervalo\n    cacheCheckInterval = window.setInterval(checkCache, CACHE_CHECK_INTERVAL);\n    // Cleanup quando a página for fechada\n    window.addEventListener("beforeunload", function () {\n        if (cacheCheckInterval) {\n            clearInterval(cacheCheckInterval);\n        }\n    });\n}\n// Set up real-time updates using MutationObserver\nfunction setupNobleAttacksObserver() {\n    if (!window.location.href.includes("mode=incomings"))\n        return;\n    var observer = new MutationObserver(function () {\n        updateNobleAttacksCache();\n        // Update only the noble filter link if it exists\n        var nobleFilterLink = document.querySelector(\'.footer-link[data-noble-filter]\');\n        if (nobleFilterLink) {\n            var counts = (0, nobleFilter_1.countNobleAttacks)();\n            updateFooterWithCounts(counts);\n            // Reset cache if no nobles are found\n            if (counts.treated === 0 && counts.new === 0) {\n                (0, nobleAttacksService_1.resetNobleAttacksCache)();\n            }\n        }\n    });\n    var incomingsTable = document.getElementById(\'incomings_table\');\n    if (incomingsTable) {\n        observer.observe(incomingsTable, {\n            childList: true,\n            subtree: true,\n            characterData: true\n        });\n    }\n    // Initial cache update\n    updateNobleAttacksCache();\n    return observer;\n}\n// Nova função para atualizar o footer\nfunction updateFooterWithCounts(counts) {\n    var nobleFilterLink = document.querySelector(\'.footer-link[data-noble-filter]\');\n    if (!nobleFilterLink)\n        return;\n    var isFiltering = (0, nobleFilter_2.getFilterState)();\n    if (isFiltering) {\n        nobleFilterLink.textContent = i18n_1.i18n.t(\'footer.nobles.showAll\');\n        return;\n    }\n    if (counts.treated === 0 && counts.new === 0) {\n        nobleFilterLink.style.display = \'none\';\n        return;\n    }\n    nobleFilterLink.style.display = \'\';\n    // Use more targeted DOM updates instead of innerHTML\n    // First clear current content\n    while (nobleFilterLink.firstChild) {\n        nobleFilterLink.removeChild(nobleFilterLink.firstChild);\n    }\n    // Add title text\n    var titleText = document.createTextNode("".concat(i18n_1.i18n.t(\'footer.nobles.title\'), ": "));\n    nobleFilterLink.appendChild(titleText);\n    // Add treated count if needed\n    if (counts.treated > 0) {\n        var treatedSpan = document.createElement(\'span\');\n        treatedSpan.style.color = \'green\';\n        treatedSpan.textContent = counts.treated.toString();\n        nobleFilterLink.appendChild(treatedSpan);\n        var treatedText = document.createTextNode(" ".concat(counts.treated === 1 ? i18n_1.i18n.t(\'footer.nobles.treated\') : i18n_1.i18n.t(\'footer.nobles.treatedPlural\')));\n        nobleFilterLink.appendChild(treatedText);\n        if (counts.new > 0) {\n            nobleFilterLink.appendChild(document.createTextNode(\', \'));\n        }\n    }\n    // Add new count if needed\n    if (counts.new > 0) {\n        var newSpan = document.createElement(\'span\');\n        newSpan.style.color = \'red\';\n        newSpan.textContent = counts.new.toString();\n        nobleFilterLink.appendChild(newSpan);\n        var newText = document.createTextNode(" ".concat(counts.new === 1 ? i18n_1.i18n.t(\'footer.nobles.new\') : i18n_1.i18n.t(\'footer.nobles.newPlural\')));\n        nobleFilterLink.appendChild(newText);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/ui/incomings/nobleAttacksCache.ts?')},"./src/ui/incomings/nobleFilter.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.countNobleAttacks = countNobleAttacks;\nexports.toggleNobleFilter = toggleNobleFilter;\nexports.getFilterState = getFilterState;\nexports.isNobleFilterEnabled = isNobleFilterEnabled;\nvar storage_1 = __webpack_require__(/*! ../../storage */ "./src/storage.ts");\nvar isFiltering = false;\nfunction countNobleAttacks() {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    var rows = document.querySelectorAll("#incomings_table tr");\n    var treated = 0;\n    var newAttacks = 0;\n    rows.forEach(function (row, index) {\n        var _a;\n        if (index === 0)\n            return; // Skip header row\n        var nameCell = row.querySelector(".quickedit-label");\n        if (nameCell && ((_a = nameCell.textContent) === null || _a === void 0 ? void 0 : _a.includes("Nobre"))) {\n            // Check if any of the keywords from config are present in the command name\n            var isCommandTreated = config.NOBLE_TREATED_KEYWORDS.some(function (keyword) { var _a; return (_a = nameCell.textContent) === null || _a === void 0 ? void 0 : _a.includes(keyword); });\n            if (isCommandTreated) {\n                treated++;\n            }\n            else {\n                newAttacks++;\n            }\n        }\n    });\n    return { treated: treated, new: newAttacks };\n}\nfunction toggleNobleFilter() {\n    isFiltering = !isFiltering;\n    var rows = document.querySelectorAll(\'#incomings_table tr\');\n    var nobleCount = 0;\n    rows.forEach(function (row, index) {\n        var _a;\n        if (index === 0)\n            return; // Skip header row\n        var nameCell = row.querySelector(\'.quickedit-label\');\n        if (nameCell) {\n            var isNoble = ((_a = nameCell.textContent) === null || _a === void 0 ? void 0 : _a.includes("Nobre")) || false;\n            if (isNoble)\n                nobleCount++;\n            row.style.display = isFiltering ? (isNoble ? "" : "none") : "";\n        }\n    });\n    return { isFiltering: isFiltering, nobleCount: nobleCount };\n}\nfunction getFilterState() {\n    return isFiltering;\n}\nfunction isNobleFilterEnabled() {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    return config.NOBLE_FILTER_ENABLED;\n}\n\n\n//# sourceURL=webpack:///./src/ui/incomings/nobleFilter.ts?')},"./src/ui/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.updateDocumentTitle = updateDocumentTitle;\nexports.closeAutoDefenseConfig = closeAutoDefenseConfig;\nexports.addNameToList = addNameToList;\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nfunction updateDocumentTitle(nextActionTime) {\n    var updateTitle = function () {\n        var now = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n        var timeLeft = Math.max(0, (nextActionTime.getTime() - now) / 1000);\n        var hours = Math.floor(timeLeft / 3600);\n        var minutes = Math.floor((timeLeft % 3600) / 60);\n        var seconds = Math.floor(timeLeft % 60);\n        var timeString;\n        if (hours > 0) {\n            timeString = "".concat(hours.toString().padStart(2, "0"), ":").concat(minutes\n                .toString()\n                .padStart(2, "0"), ":").concat(seconds.toString().padStart(2, "0"));\n        }\n        else {\n            timeString = "".concat(minutes.toString().padStart(2, "0"), ":").concat(seconds\n                .toString()\n                .padStart(2, "0"));\n        }\n        var originalTitle = "Tribal Wars";\n        document.title = "Next Task in ".concat(timeString, " | ").concat(originalTitle);\n        if (timeLeft > 0) {\n            requestAnimationFrame(updateTitle);\n        }\n        else {\n            document.title = originalTitle;\n        }\n    };\n    updateTitle();\n}\n// Função para fechar o diálogo de configuração\nfunction closeAutoDefenseConfig() {\n    var dialogContainer = document.getElementById("autodefense_config_container");\n    if (dialogContainer && dialogContainer.parentNode) {\n        dialogContainer.parentNode.removeChild(dialogContainer);\n    }\n}\nfunction addNameToList(name, listType) {\n    var _a;\n    var listElement = document.getElementById("dodge_".concat(listType));\n    var nameContainer = document.createElement("div");\n    nameContainer.className = "dodge-name-container";\n    nameContainer.innerHTML = "\\n            <input type=\\"text\\" class=\\"dodge-name-input\\" value=\\"".concat(name, "\\" style=\\"width:80%;\\">\\n            <a href=\\"#\\" class=\\"remove-dodge-name btn btn-danger\\">-</a>\\n        ");\n    listElement === null || listElement === void 0 ? void 0 : listElement.appendChild(nameContainer);\n    // Adicionar evento para remover o nome\n    (_a = nameContainer\n        .querySelector(".remove-dodge-name")) === null || _a === void 0 ? void 0 : _a.addEventListener("click", function (e) {\n        e.preventDefault();\n        listElement === null || listElement === void 0 ? void 0 : listElement.removeChild(nameContainer);\n    });\n}\n\n\n//# sourceURL=webpack:///./src/ui/index.ts?')},"./src/ui/overlay.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.showOverlay = showOverlay;\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\nfunction showOverlay(message_1) {\n    return __awaiter(this, arguments, void 0, function (message, fullScreen, ignoreSessionCheck) {\n        var config, currentScriptState, existingOverlay, container, fader, loaders, preventDefaultAction, resizeOverlay;\n        if (fullScreen === void 0) { fullScreen = true; }\n        if (ignoreSessionCheck === void 0) { ignoreSessionCheck = false; }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    config = storage_1.AutoDodgeStorage.loadConfig();\n                    if (!config.SHOW_OVERLAY) {\n                        return [2 /*return*/, null];\n                    }\n                    if (!(ignoreSessionCheck !== true)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, (0, service_1.getScriptState)()];\n                case 1:\n                    currentScriptState = _a.sent();\n                    if (!currentScriptState) {\n                        return [2 /*return*/, null]; // Se não houver estado de script ativo, não mostra o overlay\n                    }\n                    _a.label = 2;\n                case 2:\n                    existingOverlay = document.getElementById("autoDodgeOverlayContainer");\n                    if (existingOverlay) {\n                        existingOverlay.remove();\n                    }\n                    container = document.createElement("div");\n                    container.id = "autoDodgeOverlayContainer";\n                    if (fullScreen) {\n                        // Full screen overlay style\n                        container.style.cssText = "\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      z-index: 2147483647;\\n    ";\n                        fader = document.createElement("div");\n                        fader.id = "fader";\n                        fader.style.cssText = "\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      background-color: rgba(0, 0, 0, ".concat(message.includes("Confirming in:") ? "0.25" : "0.5", ");\\n    ");\n                        loaders = document.createElement("div");\n                        loaders.id = "loaders";\n                        loaders.style.cssText = "\\n      position: fixed;\\n      width: 300px;\\n      height: auto;\\n      top: 50%;\\n      left: 50%;\\n      transform: translate(-50%, -50%);\\n      text-align: center;\\n      z-index: 13000;\\n    ";\n                        loaders.innerHTML = "\\n      <img src=\\"graphic/throbber.gif\\" height=\\"24\\" width=\\"24\\">\\n      <div style=\\"color: white; margin-top: 10px; font-size: 16px;\\">".concat(message, "</div>\\n    ");\n                        container.appendChild(fader);\n                        container.appendChild(loaders);\n                        preventDefaultAction = function (event) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            return false;\n                        };\n                        // Add event listeners to prevent default actions\n                        document.addEventListener("keydown", preventDefaultAction, true);\n                        document.addEventListener("keyup", preventDefaultAction, true);\n                        document.addEventListener("keypress", preventDefaultAction, true);\n                        // Store event functions for later removal\n                        container.preventDefaultAction = preventDefaultAction;\n                        // Prevent clicks\n                        container.addEventListener("click", preventDefaultAction, true);\n                        resizeOverlay = function () {\n                            container.style.width = "".concat(Math.max(document.documentElement.clientWidth, window.innerWidth || 0), "px");\n                            container.style.height = "".concat(Math.max(document.documentElement.clientHeight, window.innerHeight || 0), "px");\n                        };\n                        window.addEventListener("resize", resizeOverlay);\n                        resizeOverlay();\n                    }\n                    else {\n                        // Minimal overlay style with adjusted opacity\n                        container.style.cssText = "\\n      position: fixed;\\n      top: 10px;\\n      right: 10px;\\n      padding: 10px 20px;\\n      background: rgba(0, 0, 0, 0.85);\\n      border-radius: 5px;\\n      z-index: 12000;\\n      color: white;\\n      font-size: 16px;\\n      font-weight: bold;\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n    ";\n                        container.innerHTML = message;\n                    }\n                    document.body.appendChild(container);\n                    return [2 /*return*/, container];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/ui/overlay.ts?')},"./src/ui/tasks.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.updateTasksList = updateTasksList;\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\nfunction updateTasksList(actions) {\n    var container = document.getElementById(\'next-tasks-list\');\n    if (!container)\n        return;\n    var currentTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n    var pendingTasks = actions.filter(function (action) {\n        return action.time.getTime() > currentTime.getTime();\n    });\n    // Atualizar contadores com o número total de tarefas pendentes\n    document.getElementById(\'pending-tasks-count\').textContent =\n        pendingTasks.length.toString();\n    if (pendingTasks.length > 0) {\n        var nextTask = pendingTasks[0];\n        document.getElementById(\'next-task-time\').textContent =\n            nextTask.time.toLocaleString();\n        // Mostrar as próximas 3 tarefas\n        var tasksHtml = pendingTasks\n            .slice(0, 3)\n            .map(function (task) { return createTaskElement(task); })\n            .join(\'\');\n        if (pendingTasks.length > 3) {\n            tasksHtml += "\\n                <div style=\\"text-align: right; margin-top: 10px; color: #666;\\">\\n                    <i>+ ".concat(pendingTasks.length - 3, " outras tarefas agendadas</i>\\n                </div>");\n        }\n        container.innerHTML = tasksHtml;\n    }\n    else {\n        document.getElementById(\'next-task-time\').textContent = \'-\';\n        container.innerHTML = "<div class=\\"no-tasks\\" style=\\"text-align: center; padding: 20px; color: #666;\\">\\n            <i>Nenhuma tarefa agendada no momento</i>\\n        </div>";\n    }\n}\nfunction createTaskElement(task) {\n    var timeLeft = calculateTimeLeft(task.time);\n    var taskType = task.type === "Dodge" ? \'Desvio\' : \'Cancelamento\';\n    return "\\n        <div class=\\"task-item\\" style=\\"margin-bottom: 10px; padding: 10px; border: 1px solid #ccc; border-radius: 4px;\\">\\n            <div style=\\"display: flex; justify-content: space-between;\\">\\n                <span><strong>Tipo:</strong> ".concat(taskType, "</span>\\n                <span><strong>Aldeia:</strong> ").concat(task.targetVillage, "</span>\\n            </div>\\n            <div style=\\"margin-top: 5px;\\">\\n                <span><strong>Agendado para:</strong> ").concat(task.time.toLocaleString(), "</span>\\n                <span style=\\"float: right;\\"><strong>Tempo restante:</strong> ").concat(timeLeft, "</span>\\n            </div>\\n        </div>\\n    ");\n}\nfunction calculateTimeLeft(scheduledTime) {\n    var currentTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n    var diff = scheduledTime.getTime() - currentTime;\n    var minutes = Math.floor(diff / (1000 * 60));\n    var seconds = Math.floor((diff % (1000 * 60)) / 1000);\n    return "".concat(minutes, "m ").concat(seconds, "s");\n}\n\n\n//# sourceURL=webpack:///./src/ui/tasks.ts?')},"./src/ui/whatsNewDialog.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.showWhatsNewDialog = showWhatsNewDialog;\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/constants.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar changelog_1 = __webpack_require__(/*! ../changelog */ "./src/changelog.ts");\nvar i18n_1 = __webpack_require__(/*! ../i18n */ "./src/i18n/index.ts");\nfunction getTypeIcon(type) {\n    switch (type) {\n        case \'new\':\n            return \'🆕\';\n        case \'improvement\':\n            return \'⭐\';\n        case \'fix\':\n            return \'🔧\';\n        case \'security\':\n            return \'🔒\';\n        default:\n            return \'•\';\n    }\n}\nfunction generateChangelogHtml() {\n    var currentChangelog = changelog_1.changelog.find(function (log) { return log.version === constants_1.CURRENT_VERSION; });\n    var previousVersions = changelog_1.changelog.filter(function (log) { return log.version !== constants_1.CURRENT_VERSION; });\n    var content;\n    if (!currentChangelog) {\n        content = "<p>".concat(i18n_1.i18n.t(\'whatsNew.noChangelog\'), "</p>");\n    }\n    else {\n        content = "\\n          <div class=\\"changelog-header\\">\\n            <h2>".concat(i18n_1.i18n.t(\'whatsNew.updateNotes\'), "</h2>\\n            <div class=\\"version-selector\\">\\n              <span class=\\"version-badge current\\" id=\\"current_version\\">v").concat(currentChangelog.version, "</span>\\n              ").concat(previousVersions.length > 0 ? "".concat(updateVersionDropdown(currentChangelog.version)) : \'\', "\\n            </div>\\n          </div>\\n          \\n          <div id=\\"changelog_content\\">\\n            ").concat(generateVersionContent(currentChangelog), "\\n          </div>");\n    }\n    return "\\n    <div id=\\"autododge_whatsnew_container\\" class=\\"popup_box_container\\">\\n      <div class=\\"popup_box show\\" style=\\"width: 800px;\\">\\n        <div class=\\"popup_box_content\\">\\n          ".concat(content, "\\n          <div class=\\"changelog-footer\\">\\n            <button id=\\"autododge_whatsnew_close\\" class=\\"btn\\">").concat(i18n_1.i18n.t(\'whatsNew.understood\'), "</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\"fader\\"></div>\\n    </div>\\n  ");\n}\nfunction generateVersionContent(versionData) {\n    var entriesByType = versionData.entries.reduce(function (acc, entry) {\n        if (!acc[entry.type]) {\n            acc[entry.type] = [];\n        }\n        acc[entry.type].push(entry);\n        return acc;\n    }, {});\n    return "\\n    <div class=\\"changes-container\\">\\n      ".concat(Object.entries(entriesByType).map(function (_a) {\n        var type = _a[0], entries = _a[1];\n        return "\\n        <div class=\\"changelog-section\\">\\n          <h4>".concat(getTypeIcon(type), " ").concat(getTypeName(type), "</h4>\\n          ").concat(entries.map(function (entry) { return "\\n            <div class=\\"change-entry ".concat(type, "\\">\\n              <div class=\\"change-header\\">\\n                <strong>").concat(entry.title, "</strong>\\n              </div>\\n              <p>").concat(entry.description, "</p>\\n              ").concat(entry.details ? "\\n                <ul class=\\"change-details\\">\\n                  ".concat(entry.details.map(function (detail) { return "<li>".concat(detail, "</li>"); }).join(\'\'), "\\n                </ul>\\n              ") : \'\', "\\n            </div>\\n          "); }).join(\'\'), "\\n        </div>\\n      ");\n    }).join(\'\'), "\\n    </div>\\n  ");\n}\nfunction getTypeName(type) {\n    switch (type) {\n        case \'new\':\n            return i18n_1.i18n.t(\'whatsNew.changeTypes.new\');\n        case \'improvement\':\n            return i18n_1.i18n.t(\'whatsNew.changeTypes.improvement\');\n        case \'fix\':\n            return i18n_1.i18n.t(\'whatsNew.changeTypes.fix\');\n        case \'security\':\n            return i18n_1.i18n.t(\'whatsNew.changeTypes.security\');\n        default:\n            return type;\n    }\n}\nfunction updateVersionDropdown(currentVersion) {\n    var otherVersions = changelog_1.changelog.filter(function (log) { return log.version !== currentVersion; });\n    return "\\n    <div class=\\"version-dropdown\\">\\n      <div class=\\"version-dropdown-content\\">\\n        ".concat(otherVersions.map(function (version) { return "\\n          <div class=\\"version-item\\" data-version=\\"".concat(version.version, "\\">\\n            <span class=\\"version-number\\">v").concat(version.version, "</span>\\n            <span class=\\"version-date\\">").concat(version.date, "</span>\\n          </div>\\n        "); }).join(\'\'), "\\n      </div>\\n    </div>\\n  ");\n}\nfunction showWhatsNewDialog() {\n    var lastVersion = storage_1.AutoDodgeStorage.loadLastVersion();\n    if (lastVersion !== constants_1.CURRENT_VERSION) {\n        GM_addStyle("\\n      .changelog-container { \\n        padding: 20px; \\n        max-height: 80vh; \\n        overflow-y: auto; \\n      }\\n      .changelog-header { \\n        display: flex; \\n        align-items: center; \\n        justify-content: space-between;\\n        border-bottom: 2px solid #6e4b27;\\n        margin-bottom: 20px;\\n        padding-bottom: 10px;\\n      }\\n      .version-selector {\\n        position: relative;\\n        display: inline-block;\\n      }\\n      .version-badge {\\n        background: #6e4b27;\\n        color: white;\\n        padding: 5px 10px;\\n        border-radius: 15px;\\n        font-weight: bold;\\n        cursor: pointer;\\n      }\\n      .version-dropdown {\\n        display: none;\\n        position: absolute;\\n        right: 0;\\n        top: 100%;\\n        background: white;\\n        border: 1px solid #ddd;\\n        border-radius: 4px;\\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\\n        z-index: 1000;\\n        min-width: 200px;\\n        margin-top: 5px;\\n      }\\n      .version-selector:hover .version-dropdown {\\n        display: block;\\n      }\\n      .version-dropdown-content {\\n        max-height: 300px;\\n        overflow-y: auto;\\n      }\\n      .version-item {\\n        padding: 8px 12px;\\n        cursor: pointer;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n        border-bottom: 1px solid #eee;\\n      }\\n      .version-item:hover {\\n        background: #f5f5f5;\\n      }\\n      .version-item:last-child {\\n        border-bottom: none;\\n      }\\n      .version-number {\\n        color: #6e4b27;\\n        font-weight: bold;\\n      }\\n      .version-date {\\n        font-size: 0.9em;\\n        color: #666;\\n      }\\n      .changes-container {\\n        display: grid;\\n        gap: 15px;\\n      }\\n      .change-entry {\\n        padding: 10px;\\n        border-radius: 6px;\\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n      }\\n      .change-header {\\n        font-size: 1.1em;\\n        margin-bottom: 8px;\\n        color: #6e4b27;\\n      }\\n      .change-details {\\n        margin-top: 8px;\\n        padding-left: 25px;\\n        font-size: 0.95em;\\n      }\\n      .change-entry.new { border-left: 4px solid #2196F3; }\\n      .change-entry.improvement { border-left: 4px solid #4CAF50; }\\n      .change-entry.fix { border-left: 4px solid #FF9800; }\\n      .change-entry.security { border-left: 4px solid #F44336; }\\n      .changelog-footer {\\n        margin-top: 20px;\\n        text-align: right;\\n        border-top: 1px solid #ddd;\\n        padding-top: 15px;\\n      }\\n      #old_version_changelog {\\n        position: fixed;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\n        z-index: 1001;\\n      }\\n      .fader {\\n        position: fixed;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        bottom: 0;\\n        background: rgba(0,0,0,0.5);\\n        z-index: 1000;\\n      }\\n    ");\n        $("body").append(generateChangelogHtml());\n        // Evento para versões anteriores\n        $(document).on(\'click\', \'.version-item\', function () {\n            var version = $(this).data(\'version\');\n            var versionData = changelog_1.changelog.find(function (log) { return log.version === version; });\n            if (versionData) {\n                $(\'.changelog-header h2\').text("".concat(i18n_1.i18n.t(\'whatsNew.updateNotes\'), " ").concat(version));\n                $(\'#current_version\').text("v".concat(version));\n                $(\'#changelog_content\').html(generateVersionContent(versionData));\n                $(\'.version-dropdown\').replaceWith(updateVersionDropdown(version));\n            }\n        });\n        $("#autododge_whatsnew_close").click(function () {\n            $("#autododge_whatsnew_container").remove();\n            storage_1.AutoDodgeStorage.saveLastVersion(constants_1.CURRENT_VERSION);\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./src/ui/whatsNewDialog.ts?')},"./src/utils/command.utils.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.updateCommandState = updateCommandState;\nexports.createNewCommand = createNewCommand;\nexports.populateCommandDetails = populateCommandDetails;\nexports.reprocessCommandsWithNewConfig = reprocessCommandsWithNewConfig;\nexports.getAllCommandsFromStorage = getAllCommandsFromStorage;\nexports.resetCommand = resetCommand;\nexports.isCommandInFinalState = isCommandInFinalState;\nexports.resetAllCommands = resetAllCommands;\nexports.updateCommandName = updateCommandName;\nexports.renameCommand = renameCommand;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar script_states_1 = __webpack_require__(/*! ../script-states */ "./src/script-states.ts");\nvar stats_1 = __webpack_require__(/*! ../stats */ "./src/stats.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar helper_utils_1 = __webpack_require__(/*! ./helper.utils */ "./src/utils/helper.utils.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./logging.utils */ "./src/utils/logging.utils.ts");\nvar time_utils_1 = __webpack_require__(/*! ./time.utils */ "./src/utils/time.utils.ts");\nvar tribalkit_1 = __webpack_require__(/*! ../tribalkit */ "./src/tribalkit.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ./serverTime.utils */ "./src/utils/serverTime.utils.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\nfunction updateCommandState(command, config) {\n    var _a, _b;\n    if (config.IGNORE_OWN_COMMANDS && command.attackerId == ((_b = (_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.player) === null || _b === void 0 ? void 0 : _b.id)) {\n        command.state = command_1.COMMAND_STATE.OWNER_COMMAND;\n        command.dodgeTime = null;\n        (0, stats_1.updateStat)("commandsIgnored");\n        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " marked as OWNER_COMMAND"), "info");\n        return;\n    }\n    var isNightBonus = !config.ALLOW_NIGHT_BONUS && (0, helper_utils_1.isWithinNightBonusPeriod)(command.landingTime);\n    var nameMatchesBlacklist = config.DODGE_BLACKLIST_ENABLED &&\n        config.DODGE_BLACKLIST.some(function (name) {\n            var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n            return regex.test(command.name);\n        });\n    var nameMatchesWhitelist = config.DODGE_WHITELIST_ENABLED &&\n        config.DODGE_WHITELIST.some(function (name) {\n            var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n            return regex.test(command.name);\n        });\n    if (isNightBonus) {\n        command.state = command_1.COMMAND_STATE.NIGHT_BONUS;\n        command.dodgeTime = null;\n        (0, stats_1.updateStat)("nightBonusSkipped");\n        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " marked as NIGHT_BONUS"), "info");\n    }\n    else if (nameMatchesBlacklist) {\n        command.state = command_1.COMMAND_STATE.IGNORED_BLACKLISTED;\n        command.dodgeTime = null;\n        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " ignored due to blacklist match"), "info");\n    }\n    else if (config.DODGE_WHITELIST_ENABLED) {\n        if (nameMatchesWhitelist) {\n            command.state = command_1.COMMAND_STATE.PLANNING;\n            command.dodgeTime = new Date(command.landingTime.getTime() - config.DODGE_TIME * 1000);\n        }\n        else {\n            command.state = command_1.COMMAND_STATE.IGNORED_WHITELIST;\n            command.dodgeTime = null;\n            (0, logging_utils_1.sendLog)("Command ".concat(command.id, " ignored due to whitelist criteria"), "info");\n        }\n    }\n    else {\n        command.state = command_1.COMMAND_STATE.PLANNING;\n        command.dodgeTime = new Date(command.landingTime.getTime() - config.DODGE_TIME * 1000);\n    }\n}\nfunction createNewCommand(commandId_1, destinationVillageId_1, attackLandingTime_1, timeLeft_1, nearest_1, _a) {\n    return __awaiter(this, arguments, void 0, function (commandId, destinationVillageId, attackLandingTime, timeLeft, nearest, _b) {\n        var command, currentServerTime, isValidCoords, isValidId, response, data, lines, villageInfo, _c, id, _, x, y, error_1, response, data, village, externalError_1, currentVillage;\n        var MIN_DODGE_TIME = _b.MIN_DODGE_TIME, DODGE_TIME = _b.DODGE_TIME;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    command = new command_1.Command(commandId, destinationVillageId || "1", attackLandingTime);\n                    currentServerTime = (0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime());\n                    if (timeLeft <= MIN_DODGE_TIME) {\n                        command.state = command_1.COMMAND_STATE.IGNORED;\n                        command.dodgeTime = null;\n                        (0, stats_1.updateStat)("commandsIgnored");\n                    }\n                    else if (timeLeft <= DODGE_TIME) {\n                        command.state = command_1.COMMAND_STATE.DODGING;\n                        command.dodgeTime = new Date(currentServerTime);\n                    }\n                    else {\n                        command.state = command_1.COMMAND_STATE.PLANNING;\n                        command.dodgeTime = new Date(attackLandingTime.getTime() - DODGE_TIME * 1000);\n                    }\n                    isValidCoords = function (x, y) { return x >= 0 && x <= 999 && y >= 0 && y <= 999; };\n                    isValidId = function (id) { return /^\\d+$/.test(id.toString()); };\n                    if (!(nearest && isValidCoords(nearest.x, nearest.y) && isValidId(nearest.id))) return [3 /*break*/, 1];\n                    command.dodgeDestination = "".concat(nearest.x, "|").concat(nearest.y);\n                    command.dodgeDestinationId = nearest.id.toString();\n                    return [3 /*break*/, 10];\n                case 1:\n                    _d.trys.push([1, 4, , 10]);\n                    return [4 /*yield*/, fetch("https://".concat(game_data.world, ".tribalwars.com.pt/map/village.txt"))];\n                case 2:\n                    response = _d.sent();\n                    return [4 /*yield*/, response.text()];\n                case 3:\n                    data = _d.sent();\n                    lines = data.split(\'\\n\');\n                    villageInfo = lines.find(function (line) { return line.startsWith((nearest === null || nearest === void 0 ? void 0 : nearest.id) + \',\'); });\n                    if (villageInfo) {\n                        _c = villageInfo.split(\',\'), id = _c[0], _ = _c[1], x = _c[2], y = _c[3];\n                        command.dodgeDestination = "".concat(x, "|").concat(y);\n                        command.dodgeDestinationId = id;\n                    }\n                    else {\n                        throw new Error(\'Village not found in game API\');\n                    }\n                    return [3 /*break*/, 10];\n                case 4:\n                    error_1 = _d.sent();\n                    console.error("Erro ao buscar informações da aldeia na API do jogo:", error_1);\n                    _d.label = 5;\n                case 5:\n                    _d.trys.push([5, 8, , 9]);\n                    return [4 /*yield*/, fetch("https://twhelp.app/api/v2/versions/pt/servers/".concat(game_data.world, "/villages?limit=500"))];\n                case 6:\n                    response = _d.sent();\n                    return [4 /*yield*/, response.json()];\n                case 7:\n                    data = _d.sent();\n                    village = data.data.find(function (v) { return v.id === (nearest === null || nearest === void 0 ? void 0 : nearest.id); });\n                    if (village) {\n                        command.dodgeDestination = "".concat(village.x, "|").concat(village.y);\n                        command.dodgeDestinationId = village.id.toString();\n                    }\n                    else {\n                        throw new Error(\'Village not found in external API\');\n                    }\n                    return [3 /*break*/, 9];\n                case 8:\n                    externalError_1 = _d.sent();\n                    console.error("Erro ao buscar informações da aldeia na API externa:", externalError_1);\n                    currentVillage = tribalkit_1.TribalKitService.village || { x: 0, y: 0, id: \'0\' };\n                    command.dodgeDestination = "".concat(currentVillage.x, "|").concat(currentVillage.y);\n                    command.dodgeDestinationId = currentVillage.id.toString();\n                    (0, logging_utils_1.sendLog)("N\\u00E3o foi poss\\u00EDvel encontrar uma aldeia pr\\u00F3xima para desvio. Usando a aldeia atual.", "error");\n                    return [3 /*break*/, 9];\n                case 9: return [3 /*break*/, 10];\n                case 10:\n                    (0, logging_utils_1.sendLog)("Command created: ID: ".concat(command.id, ", State: ").concat(command.state, ", Landing Time: ").concat(command.landingTime.toLocaleString(), ", Dodge Time: ").concat(command.dodgeTime ? command.dodgeTime.toLocaleString() : "N/A"), "info");\n                    return [2 /*return*/, command];\n            }\n        });\n    });\n}\nfunction populateCommandDetails(command, row) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    command.name = (_b = (_a = row\n        .querySelector(".quickedit-label")) === null || _a === void 0 ? void 0 : _a.textContent) === null || _b === void 0 ? void 0 : _b.trim();\n    command.targetName = (_d = (_c = row\n        .querySelector("td:nth-child(2)")) === null || _c === void 0 ? void 0 : _c.textContent) === null || _d === void 0 ? void 0 : _d.trim();\n    command.originName = (_f = (_e = row\n        .querySelector("td:nth-child(3) a")) === null || _e === void 0 ? void 0 : _e.textContent) === null || _f === void 0 ? void 0 : _f.trim();\n    command.originId = (_g = row.querySelector("td:nth-child(3) a").href.match(/id=(\\d+)/)) === null || _g === void 0 ? void 0 : _g[1];\n    command.attackerName = (_j = (_h = row.querySelector("td:nth-child(4) a")) === null || _h === void 0 ? void 0 : _h.textContent) === null || _j === void 0 ? void 0 : _j.trim();\n    command.attackerId = (_k = row.querySelector("td:nth-child(4) a").href.match(/id=(\\d+)/)) === null || _k === void 0 ? void 0 : _k[1];\n    command.distance = parseFloat((_m = (_l = row.querySelector("td:nth-child(5)")) === null || _l === void 0 ? void 0 : _l.textContent) === null || _m === void 0 ? void 0 : _m.trim());\n}\n// Function to reprocess commands with the new configuration\nfunction reprocessCommandsWithNewConfig(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var allCommands, _loop_1, _i, allCommands_1, command;\n        var _a, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Starting to reprocess commands with new configuration", "info");\n                    return [4 /*yield*/, getAllCommandsFromStorage()];\n                case 1:\n                    allCommands = _c.sent();\n                    (0, logging_utils_1.sendLog)("Total commands to process: ".concat(allCommands.length), "info");\n                    _loop_1 = function (command) {\n                        var isOwnCommand, nameMatchesBlacklist, nameMatchesWhitelist, isNightBonus, newState, newDodgeTime;\n                        return __generator(this, function (_d) {\n                            switch (_d.label) {\n                                case 0:\n                                    (0, logging_utils_1.sendLog)("Processing command ".concat(command.id), "info");\n                                    (0, logging_utils_1.sendLog)("Current state: ".concat(command.state, ", Current dodge time: ").concat(command.dodgeTime), "info");\n                                    // Only process commands in states that can be affected by configuration changes\n                                    if (![\n                                        command_1.COMMAND_STATE.PLANNING,\n                                        command_1.COMMAND_STATE.IGNORED_WHITELIST,\n                                        command_1.COMMAND_STATE.IGNORED_BLACKLISTED,\n                                        command_1.COMMAND_STATE.NIGHT_BONUS,\n                                        command_1.COMMAND_STATE.OWNER_COMMAND,\n                                        command_1.COMMAND_STATE.NOBLE_SNIPE_IGNORED,\n                                    ].includes(command.state)) {\n                                        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " skipped: Not in a state affected by config changes"), "info");\n                                        return [2 /*return*/, "continue"];\n                                    }\n                                    isOwnCommand = config.IGNORE_OWN_COMMANDS && command.attackerId == ((_b = (_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.player) === null || _b === void 0 ? void 0 : _b.id);\n                                    (0, logging_utils_1.sendLog)("Command ".concat(command.id, " is own command: ").concat(isOwnCommand), "info");\n                                    nameMatchesBlacklist = config.DODGE_BLACKLIST_ENABLED &&\n                                        config.DODGE_BLACKLIST.some(function (name) {\n                                            var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n                                            return regex.test(command.name);\n                                        });\n                                    (0, logging_utils_1.sendLog)("Command ".concat(command.id, " matches blacklist: ").concat(nameMatchesBlacklist), "info");\n                                    nameMatchesWhitelist = config.DODGE_WHITELIST_ENABLED &&\n                                        config.DODGE_WHITELIST.some(function (name) {\n                                            var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n                                            return regex.test(command.name);\n                                        });\n                                    (0, logging_utils_1.sendLog)("Command ".concat(command.id, " matches whitelist: ").concat(nameMatchesWhitelist), "info");\n                                    isNightBonus = !config.ALLOW_NIGHT_BONUS &&\n                                        (0, helper_utils_1.isWithinNightBonusPeriod)(command.landingTime);\n                                    (0, logging_utils_1.sendLog)("Command ".concat(command.id, " is within night bonus period: ").concat(isNightBonus), "info");\n                                    newState = command.state;\n                                    newDodgeTime = command.dodgeTime;\n                                    if (isOwnCommand) {\n                                        newState = command_1.COMMAND_STATE.OWNER_COMMAND;\n                                        newDodgeTime = null;\n                                        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " marked as OWNER_COMMAND"), "info");\n                                    }\n                                    else if (isNightBonus) {\n                                        newState = command_1.COMMAND_STATE.NIGHT_BONUS;\n                                        newDodgeTime = null;\n                                        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " set to NIGHT_BONUS"), "info");\n                                    }\n                                    else if (nameMatchesBlacklist) {\n                                        newState = command_1.COMMAND_STATE.IGNORED_BLACKLISTED;\n                                        newDodgeTime = null;\n                                        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " set to IGNORED_BLACKLISTED due to blacklist match"), "info");\n                                    }\n                                    else if (config.DODGE_WHITELIST_ENABLED) {\n                                        if (nameMatchesWhitelist) {\n                                            newState = command_1.COMMAND_STATE.PLANNING;\n                                            newDodgeTime = new Date(command.landingTime.getTime() - config.DODGE_TIME * 1000);\n                                            (0, logging_utils_1.sendLog)("Command ".concat(command.id, " set to PLANNING due to whitelist match"), "info");\n                                        }\n                                        else {\n                                            newState = command_1.COMMAND_STATE.IGNORED_WHITELIST;\n                                            newDodgeTime = null;\n                                            (0, logging_utils_1.sendLog)("Command ".concat(command.id, " set to IGNORED_WHITELIST due to not being in whitelist"), "info");\n                                        }\n                                    }\n                                    else {\n                                        newState = command_1.COMMAND_STATE.PLANNING;\n                                        newDodgeTime = new Date(command.landingTime.getTime() - config.DODGE_TIME * 1000);\n                                        (0, logging_utils_1.sendLog)("Command ".concat(command.id, " set to PLANNING (whitelist disabled, not in blacklist)"), "info");\n                                    }\n                                    if (!(newState !== command.state || newDodgeTime !== command.dodgeTime)) return [3 /*break*/, 2];\n                                    (0, logging_utils_1.sendLog)("Updating command ".concat(command.id, ":"), "info");\n                                    (0, logging_utils_1.sendLog)("Old state: ".concat(command.state, ", New state: ").concat(newState), "info");\n                                    (0, logging_utils_1.sendLog)("Old dodge time: ".concat(command.dodgeTime, ", New dodge time: ").concat(newDodgeTime), "info");\n                                    command.state = newState;\n                                    command.dodgeTime = newDodgeTime;\n                                    return [4 /*yield*/, command.save()];\n                                case 1:\n                                    _d.sent();\n                                    (0, logging_utils_1.sendLog)("Command ".concat(command.id, " updated and saved"), "info");\n                                    if (newState === command_1.COMMAND_STATE.NIGHT_BONUS) {\n                                        (0, stats_1.updateStat)("nightBonusSkipped");\n                                    }\n                                    else if (newState === command_1.COMMAND_STATE.OWNER_COMMAND) {\n                                        (0, stats_1.updateStat)("commandsIgnored");\n                                    }\n                                    return [3 /*break*/, 3];\n                                case 2:\n                                    (0, logging_utils_1.sendLog)("No changes needed for command ".concat(command.id), "info");\n                                    _d.label = 3;\n                                case 3: return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _i = 0, allCommands_1 = allCommands;\n                    _c.label = 2;\n                case 2:\n                    if (!(_i < allCommands_1.length)) return [3 /*break*/, 5];\n                    command = allCommands_1[_i];\n                    return [5 /*yield**/, _loop_1(command)];\n                case 3:\n                    _c.sent();\n                    _c.label = 4;\n                case 4:\n                    _i++;\n                    return [3 /*break*/, 2];\n                case 5:\n                    (0, logging_utils_1.sendLog)("Finished reprocessing commands with new configuration", "info");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getAllCommandsFromStorage() {\n    return __awaiter(this, void 0, void 0, function () {\n        var currentTime, commands, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    currentTime = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, (0, service_1.getAllCommands)()];\n                case 2:\n                    commands = _a.sent();\n                    return [2 /*return*/, commands.filter(function (command) { return command.landingTime > currentTime; })];\n                case 3:\n                    error_2 = _a.sent();\n                    console.error(\'Error loading commands from IndexedDB:\', error_2);\n                    (0, logging_utils_1.sendLog)(\'Failed to load commands from storage\', \'error\');\n                    return [2 /*return*/, []];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n// Add this function to reset a single command\nfunction resetCommand(commandId) {\n    return __awaiter(this, void 0, void 0, function () {\n        var command;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 1:\n                    command = _a.sent();\n                    if (!command) return [3 /*break*/, 3];\n                    command.name = "";\n                    command.state = command_1.COMMAND_STATE.PLANNING;\n                    command.targetName = "";\n                    command.targetCoord = "";\n                    command.originName = "";\n                    command.originId = "";\n                    command.attackerName = "";\n                    command.attackerId = "";\n                    command.distance = 0;\n                    command.dodgeTime = null;\n                    command.dodgeDestination = null;\n                    command.dodgeDestinationId = null;\n                    command.cancelTime = null;\n                    command.cancelAttempts = 0;\n                    command.dodgeCommandId = null;\n                    command.dodgeCommandLandingTime = null;\n                    command.noTroops = false;\n                    command.cancelFailed = false;\n                    command.annexedTo = null;\n                    command.annexedCommands = [];\n                    command.renamed = false;\n                    command.processed = false;\n                    command.annexed = false;\n                    command.snipeInfo = null;\n                    // Maintain the manuallySelected field\n                    return [4 /*yield*/, command.save()];\n                case 2:\n                    // Maintain the manuallySelected field\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Reset command ".concat(commandId), "info");\n                    return [3 /*break*/, 4];\n                case 3:\n                    (0, logging_utils_1.sendLog)("Command ".concat(commandId, " not found"), "error");\n                    _a.label = 4;\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n// Add this function to check if a command is in a final state\nfunction isCommandInFinalState(command) {\n    return [\n        command_1.COMMAND_STATE.COMPLETED,\n        command_1.COMMAND_STATE.IGNORED,\n        command_1.COMMAND_STATE.IGNORED_BLACKLISTED,\n        command_1.COMMAND_STATE.IGNORED_WHITELIST,\n    ].includes(command.state);\n}\n// Add this function to reset all commands\nfunction resetAllCommands() {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, allCommands, stats, _loop_2, _i, allCommands_2, command;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logging_utils_1.sendLog)("Resetting and reprocessing all commands", "info");\n                    config = storage_1.AutoDodgeStorage.loadConfig();\n                    return [4 /*yield*/, getAllCommandsFromStorage()];\n                case 1:\n                    allCommands = _a.sent();\n                    stats = storage_1.AutoDodgeStorage.loadStats();\n                    stats.commandsProcessed = 0;\n                    stats.commandsAnnexed = 0;\n                    storage_1.AutoDodgeStorage.saveStats(stats);\n                    _loop_2 = function (command) {\n                        var nameMatchesBlacklist, nameMatchesWhitelist;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    nameMatchesBlacklist = config.DODGE_BLACKLIST_ENABLED &&\n                                        config.DODGE_BLACKLIST.some(function (name) {\n                                            var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n                                            return regex.test(command.name);\n                                        });\n                                    nameMatchesWhitelist = config.DODGE_WHITELIST_ENABLED &&\n                                        config.DODGE_WHITELIST.some(function (name) {\n                                            var regex = new RegExp("\\\\b".concat(name.trim(), "\\\\b"), "i");\n                                            return regex.test(command.name);\n                                        });\n                                    if (nameMatchesBlacklist) {\n                                        command.state = command_1.COMMAND_STATE.IGNORED_BLACKLISTED;\n                                        command.dodgeTime = null;\n                                        (0, stats_1.updateStat)("commandsBlacklisted");\n                                    }\n                                    else if (config.DODGE_WHITELIST_ENABLED) {\n                                        if (nameMatchesWhitelist) {\n                                            command.state = command_1.COMMAND_STATE.PLANNING;\n                                            command.dodgeTime = new Date(command.landingTime.getTime() - config.DODGE_TIME * 1000);\n                                        }\n                                        else {\n                                            command.state = command_1.COMMAND_STATE.IGNORED_WHITELIST;\n                                            command.dodgeTime = null;\n                                            (0, stats_1.updateStat)("commandsNotWhitelisted");\n                                        }\n                                    }\n                                    else {\n                                        command.state = command_1.COMMAND_STATE.PLANNING;\n                                        command.dodgeTime = new Date(command.landingTime.getTime() - config.DODGE_TIME * 1000);\n                                    }\n                                    // Reset other properties\n                                    command.annexedTo = null;\n                                    command.annexedCommands = [];\n                                    command.cancelAttempts = 0;\n                                    command.cancelFailed = false;\n                                    command.renamed = false;\n                                    command.processed = false;\n                                    command.annexed = false;\n                                    return [4 /*yield*/, command.save()];\n                                case 1:\n                                    _b.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _i = 0, allCommands_2 = allCommands;\n                    _a.label = 2;\n                case 2:\n                    if (!(_i < allCommands_2.length)) return [3 /*break*/, 5];\n                    command = allCommands_2[_i];\n                    return [5 /*yield**/, _loop_2(command)];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4:\n                    _i++;\n                    return [3 /*break*/, 2];\n                case 5: return [4 /*yield*/, resetProcessedStatus()];\n                case 6:\n                    _a.sent();\n                    return [4 /*yield*/, resetAnnexedStatus()];\n                case 7:\n                    _a.sent();\n                    (0, logging_utils_1.sendLog)("Reset and reprocessed ".concat(allCommands.length, " commands"), "info");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction updateCommandName(row, command) {\n    var _a, _b, _c, _d, _e, _f;\n    var quickeditLabel = row.querySelector(".quickedit-label");\n    if (quickeditLabel) {\n        // Remove existing state column\n        var existingStateColumn = row.querySelector(".command-state-column");\n        if (existingStateColumn) {\n            existingStateColumn.remove();\n        }\n        // Create new state column\n        var stateColumn = document.createElement("td");\n        stateColumn.className = "command-state-column";\n        var stateInfo = script_states_1.STATE_INFO[command.state];\n        var stateText = stateInfo.text;\n        if (command.state === command_1.COMMAND_STATE.PLANNING) {\n            stateText += " | Dodge at ".concat((0, time_utils_1.formatTime)(command.dodgeTime));\n        }\n        else if (command.state === command_1.COMMAND_STATE.WAITING_TO_CANCEL) {\n            stateText += " | Cancel at ".concat((0, time_utils_1.formatTime)(command.cancelTime));\n        }\n        else if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING) {\n            var snipeCount = ((_a = command.snipeInfo) === null || _a === void 0 ? void 0 : _a.possibleSnipesCount) || 0;\n            var snipeTime = ((_b = command.snipeInfo) === null || _b === void 0 ? void 0 : _b.launchTime) ? (0, time_utils_1.formatTime)(command.snipeInfo.launchTime) : \'Unknown\';\n            stateText += " at ".concat(snipeTime, " | ").concat(snipeCount - 1, " other options");\n        }\n        else if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED) {\n            stateText += " | Offset: ".concat((_c = command.snipeInfo) === null || _c === void 0 ? void 0 : _c.finalOffset, " ms");\n        }\n        else if (command.state === command_1.COMMAND_STATE.COMPLETED &&\n            command.cancelFailed) {\n            stateText = "OK - Cancel Failed";\n        }\n        stateColumn.textContent = stateText;\n        stateColumn.style.cssText = "\\n                background-color: ".concat(stateInfo.color, " !important;\\n                color: white !important;\\n                text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000 !important;\\n                padding: 2px 5px;\\n                border-radius: 3px;\\n            ");\n        // Insert new column after the command name column\n        var nameColumn = row.querySelector("td:first-child");\n        (_d = nameColumn === null || nameColumn === void 0 ? void 0 : nameColumn.parentNode) === null || _d === void 0 ? void 0 : _d.insertBefore(stateColumn, nameColumn.nextSibling);\n        // Check if completed commands need to be renamed\n        if (command.state === command_1.COMMAND_STATE.COMPLETED) {\n            var config = storage_1.AutoDodgeStorage.loadConfig();\n            if (config.RENAME_COMPLETED_COMMANDS && !command.renamed) {\n                var currentName = (_e = quickeditLabel === null || quickeditLabel === void 0 ? void 0 : quickeditLabel.textContent) === null || _e === void 0 ? void 0 : _e.trim();\n                var newName = "".concat(currentName === null || currentName === void 0 ? void 0 : currentName.split(" ")[0], " ").concat(config.COMPLETED_COMMAND_SUFFIX);\n                renameCommand(row, newName);\n                command.renamed = true;\n                command.save();\n            }\n        }\n        // Check if completed snipes need to be renamed\n        if (command.state === command_1.COMMAND_STATE.NOBLE_SNIPE_COMPLETED) {\n            var config = storage_1.AutoDodgeStorage.loadConfig();\n            if (config.RENAME_COMPLETED_COMMANDS && !command.renamed) {\n                var currentName = (_f = quickeditLabel === null || quickeditLabel === void 0 ? void 0 : quickeditLabel.textContent) === null || _f === void 0 ? void 0 : _f.trim();\n                var newName = "".concat(currentName === null || currentName === void 0 ? void 0 : currentName.split(" ")[0], " ").concat(config.COMPLETED_SNIPE_SUFFIX);\n                renameCommand(row, newName);\n                command.renamed = true;\n                command.save();\n            }\n        }\n    }\n}\n// Add this new function to rename the command\nfunction renameCommand(row, newName) {\n    var renameIcon = row.querySelector(".rename-icon");\n    if (renameIcon) {\n        renameIcon.click();\n        var inputField = row.querySelector("input[type=text]");\n        if (inputField) {\n            inputField.value = newName;\n            var confirmButton = row.querySelector("input[type=button]");\n            if (confirmButton) {\n                confirmButton.click();\n            }\n        }\n    }\n}\nfunction resetProcessedStatus() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            // Implement the async version\n            console.error("Function not implemented.");\n            return [2 /*return*/];\n        });\n    });\n}\nfunction resetAnnexedStatus() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            // Implement the async version\n            console.error("Function not implemented.");\n            return [2 /*return*/];\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/utils/command.utils.ts?')},"./src/utils/debug-window.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.DebugWindow = void 0;\nexports.initializeDebugWindow = initializeDebugWindow;\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar command_utils_1 = __webpack_require__(/*! ./command.utils */ "./src/utils/command.utils.ts");\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar DebugWindow = /** @class */ (function () {\n    function DebugWindow() {\n        this.isDragging = false;\n        this.dragOffset = { x: 0, y: 0 };\n        this.window = document.createElement(\'div\');\n        this.window.id = \'autododge-debug\';\n        this.window.style.cssText = "\\n      position: fixed;\\n      width: 300px;\\n      max-height: 400px;\\n      background: rgba(0, 0, 0, 0.8);\\n      color: #fff;\\n      padding: 10px;\\n      border: 1px solid #666;\\n      border-radius: 4px;\\n      font-family: monospace;\\n      font-size: 12px;\\n      overflow-y: auto;\\n      z-index: 9999;\\n      cursor: move;\\n      top: 20px;\\n      right: 20px;\\n    ";\n        this.initializeDragAndDrop();\n    }\n    DebugWindow.prototype.initializeDragAndDrop = function () {\n        var _this = this;\n        this.window.addEventListener(\'mousedown\', function (e) {\n            _this.isDragging = true;\n            var rect = _this.window.getBoundingClientRect();\n            _this.dragOffset = {\n                x: e.clientX - rect.left,\n                y: e.clientY - rect.top\n            };\n        });\n        document.addEventListener(\'mousemove\', function (e) {\n            if (!_this.isDragging)\n                return;\n            var x = e.clientX - _this.dragOffset.x;\n            var y = e.clientY - _this.dragOffset.y;\n            _this.window.style.left = "".concat(x, "px");\n            _this.window.style.top = "".concat(y, "px");\n        });\n        document.addEventListener(\'mouseup\', function () {\n            _this.isDragging = false;\n        });\n    };\n    DebugWindow.getInstance = function () {\n        if (!DebugWindow.instance) {\n            DebugWindow.instance = new DebugWindow();\n        }\n        return DebugWindow.instance;\n    };\n    DebugWindow.prototype.show = function () {\n        if (!document.body.contains(this.window)) {\n            document.body.appendChild(this.window);\n        }\n        this.window.style.display = \'block\';\n    };\n    DebugWindow.prototype.hide = function () {\n        this.window.style.display = \'none\';\n    };\n    DebugWindow.prototype.updateContent = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var commands, config;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, (0, command_utils_1.getAllCommandsFromStorage)()];\n                    case 1:\n                        commands = _a.sent();\n                        config = storage_1.AutoDodgeStorage.loadConfig();\n                        this.window.innerHTML = "\\n      <div style=\\"margin-bottom: 10px;\\">\\n        <strong>Active Commands:</strong> ".concat(commands.length, "<br>\\n        <strong>Dev Mode:</strong> ").concat(config.DEV_MODE ? \'ON\' : \'OFF\', "<br>\\n        <strong>Memory Usage:</strong> ").concat(this.getMemoryUsage(), "\\n      </div>\\n      <div style=\\"border-top: 1px solid #666; padding-top: 10px;\\">\\n        <strong>Recent Logs:</strong><br>\\n        ").concat(this.getRecentLogs(), "\\n      </div>\\n    ");\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DebugWindow.prototype.getMemoryUsage = function () {\n        var _a;\n        var used = ((_a = performance.memory) === null || _a === void 0 ? void 0 : _a.usedJSHeapSize) || 0;\n        return "".concat(Math.round(used / 1024 / 1024), " MB");\n    };\n    DebugWindow.prototype.getRecentLogs = function () {\n        var snipeInfo = this.getSnipeDebugInfo();\n        return "\\n      <div style=\\"margin-bottom: 10px;\\">\\n        <strong>\\uD83C\\uDFAF Snipe Debug:</strong><br>\\n        ".concat(snipeInfo, "\\n      </div>\\n    ");\n    };\n    DebugWindow.prototype.getSnipeDebugInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var commands, snipeCommands;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, (0, command_utils_1.getAllCommandsFromStorage)()];\n                    case 1:\n                        commands = _a.sent();\n                        snipeCommands = commands.filter(function (cmd) {\n                            return cmd.snipeInfo &&\n                                (cmd.state === command_1.COMMAND_STATE.NOBLE_SNIPE_PENDING ||\n                                    cmd.state === command_1.COMMAND_STATE.NOBLE_SNIPE_IN_PROGRESS);\n                        });\n                        if (snipeCommands.length === 0) {\n                            return [2 /*return*/, "No active snipes"];\n                        }\n                        return [2 /*return*/, snipeCommands.map(function (cmd) {\n                                var _a, _b, _c, _d;\n                                return "\\n        Command ".concat(cmd.id, ":<br>\\n        - Target Time: ").concat((_a = cmd.landingTime) === null || _a === void 0 ? void 0 : _a.toISOString(), "<br>\\n        - Launch Time: ").concat((_b = cmd.snipeInfo) === null || _b === void 0 ? void 0 : _b.launchTime, "<br>\\n        - Required Offset: ").concat((_c = cmd.snipeInfo) === null || _c === void 0 ? void 0 : _c.requiredOffset, "ms<br>\\n        - Final Offset: ").concat((_d = cmd.snipeInfo) === null || _d === void 0 ? void 0 : _d.finalOffset, "ms<br>\\n        - State: ").concat(cmd.state, "<br>\\n        <br>\\n    ");\n                            }).join(\'\')];\n                }\n            });\n        });\n    };\n    DebugWindow.instance = null;\n    return DebugWindow;\n}());\nexports.DebugWindow = DebugWindow;\n// Initialize debug window when dev mode is enabled\nfunction initializeDebugWindow() {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    if (config.DEV_MODE && config.DEBUG_WINDOW_ENABLED) {\n        var debugWindow_1 = DebugWindow.getInstance();\n        debugWindow_1.show();\n        // Update content periodically\n        setInterval(function () {\n            debugWindow_1.updateContent();\n        }, 1000);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/utils/debug-window.ts?')},"./src/utils/dom.utils.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.addDodgeScriptInfo = addDodgeScriptInfo;\nexports.createResetButton = createResetButton;\nexports.isConfirmationPage = isConfirmationPage;\nexports.areAllTroopsZero = areAllTroopsZero;\nexports.initializeUI = initializeUI;\nvar constants_1 = __webpack_require__(/*! ../constants */ "./src/constants.ts");\nvar command_utils_1 = __webpack_require__(/*! ./command.utils */ "./src/utils/command.utils.ts");\nvar population_utils_1 = __webpack_require__(/*! ./population.utils */ "./src/utils/population.utils.ts");\nvar footer_1 = __webpack_require__(/*! ../ui/footer */ "./src/ui/footer.ts");\nfunction addDodgeScriptInfo(version) {\n    var serverTimeElement = document.getElementById("serverTime");\n    if (serverTimeElement && serverTimeElement.parentNode) {\n        var scriptInfoText = "DodgeScript (v".concat(version, ") development by C3real and Ganso | ");\n        var scriptInfoNode = document.createTextNode(scriptInfoText);\n        serverTimeElement.parentNode.insertBefore(scriptInfoNode, serverTimeElement.previousSibling);\n    }\n}\n// Add this function to create a reset button for a single command\nfunction createResetButton(commandId, row) {\n    if (!constants_1.DEV_MODE)\n        return;\n    var resetButton = document.createElement("button");\n    resetButton.textContent = "Reset";\n    resetButton.className = "btn";\n    resetButton.style.marginRight = "5px";\n    resetButton.onclick = function () {\n        (0, command_utils_1.resetCommand)(commandId);\n        // refresh\n        location.reload();\n    };\n    var firstCell = row.querySelector("td");\n    firstCell === null || firstCell === void 0 ? void 0 : firstCell.insertBefore(resetButton, firstCell.firstChild);\n}\nfunction isConfirmationPage() {\n    return document.querySelector("#troop_confirm_submit") !== null;\n}\nfunction areAllTroopsZero() {\n    var villagePopulation = (0, population_utils_1.calculateVillagePopulation)();\n    console.log("villagePopulation", villagePopulation);\n    return villagePopulation < 200;\n}\nfunction initializeUI(config, villages) {\n    (0, footer_1.addNewFooter)();\n}\n\n\n//# sourceURL=webpack:///./src/utils/dom.utils.ts?')},"./src/utils/helper.utils.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.isWithinNightBonusPeriod = isWithinNightBonusPeriod;\nexports.calculateSuccessRate = calculateSuccessRate;\nexports.parseCountdown = parseCountdown;\nexports.parseAndSaveCommandFromRow = parseAndSaveCommandFromRow;\nexports.resetFirstTimeFlag = resetFirstTimeFlag;\nexports.extractCoordinatesFromName = extractCoordinatesFromName;\nexports.parseCommandFromRow = parseCommandFromRow;\nvar command_1 = __webpack_require__(/*! ../command */ "./src/command.ts");\nvar data_1 = __webpack_require__(/*! ../data */ "./src/data.ts");\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar logging_utils_1 = __webpack_require__(/*! ./logging.utils */ "./src/utils/logging.utils.ts");\nvar tribalkit_1 = __webpack_require__(/*! ../tribalkit */ "./src/tribalkit.ts");\nfunction isWithinNightBonusPeriod(date) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nightBonusInfo, startHour, endHour, checkDate, isWithin;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0, data_1.getNightBonusInfo)()];\n                case 1:\n                    nightBonusInfo = _a.sent();\n                    if (!nightBonusInfo) {\n                        console.error("Night bonus info not available");\n                        return [2 /*return*/, false];\n                    }\n                    startHour = new Date(nightBonusInfo.startHour);\n                    endHour = new Date(nightBonusInfo.endHour);\n                    checkDate = new Date(date);\n                    // Ajustar as datas para o mesmo dia da data de verificação\n                    startHour.setFullYear(checkDate.getFullYear(), checkDate.getMonth(), checkDate.getDate());\n                    endHour.setFullYear(checkDate.getFullYear(), checkDate.getMonth(), checkDate.getDate());\n                    // Se o período do bônus noturno atravessa a meia-noite\n                    if (startHour > endHour) {\n                        if (checkDate < endHour) {\n                            startHour.setDate(startHour.getDate() - 1);\n                        }\n                        else {\n                            endHour.setDate(endHour.getDate() + 1);\n                        }\n                    }\n                    isWithin = checkDate >= startHour && checkDate < endHour;\n                    return [2 /*return*/, isWithin];\n            }\n        });\n    });\n}\n// Helper functions\nfunction calculateDistance(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\n// Função para calcular a taxa de sucesso\nfunction calculateSuccessRate(successful, failed) {\n    var total = successful + failed;\n    if (total === 0)\n        return "0.00%";\n    return ((successful / total) * 100).toFixed(2) + "%";\n}\nfunction findNearestVillageByDistance(villages, targetX, targetY, desiredDistance) {\n    return villages.reduce(function (nearest, village) {\n        if (village.x === targetX && village.y === targetY)\n            return nearest;\n        var distance = calculateDistance(targetX, targetY, village.x, village.y);\n        var distanceDiff = Math.abs(distance - desiredDistance);\n        return distanceDiff < nearest.distanceDiff\n            ? __assign(__assign({}, village), { distance: distance, distanceDiff: distanceDiff }) : nearest;\n    }, { distanceDiff: Infinity });\n}\nfunction parseCountdown(countdown) {\n    var parts = countdown.split(":").map(Number);\n    return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\nfunction parseAndSaveCommandFromRow(row, villages, currentServerTime) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nameCell, attackerCell, targetCell, originCell, timeCell, quickedit, commandId, commandName, attackerName, targetName, originName, timeText, landingSeconds, landingTime, targetCoord, originCoord, targetLink, originLink, villageIdMatch, villageId_1, targetVillageByLink, coordsFromLink, linkText, match, fallbackVillage, targetVillage, command, error_1, dodgeTime, savedCommand, error_2, error_3;\n        var _a, _b, _c, _d, _e, _f;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    _g.trys.push([0, 10, , 11]);\n                    (0, logging_utils_1.sendLog)("Analisando linha da tabela...", "debug");\n                    nameCell = row.querySelector(".quickedit-label");\n                    attackerCell = row.querySelector("td:nth-child(3)");\n                    targetCell = row.querySelector("td:nth-child(4)");\n                    originCell = row.querySelector("td:nth-child(5)");\n                    timeCell = row.querySelector("td:nth-child(7) span, td:nth-child(8) span");\n                    quickedit = row.querySelector(".quickedit");\n                    // Verificar elementos necessários\n                    if (!nameCell || !attackerCell || !targetCell || !originCell || !timeCell || !quickedit) {\n                        (0, logging_utils_1.sendLog)("Linha de tabela incompleta, pulando", "warning");\n                        return [2 /*return*/, null];\n                    }\n                    commandId = quickedit.getAttribute("data-id");\n                    if (!commandId) {\n                        (0, logging_utils_1.sendLog)("Linha sem ID de comando válido", "warning");\n                        return [2 /*return*/, null];\n                    }\n                    commandName = ((_a = nameCell.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || "";\n                    attackerName = ((_b = attackerCell.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || "";\n                    targetName = ((_c = targetCell.textContent) === null || _c === void 0 ? void 0 : _c.trim()) || "";\n                    originName = ((_d = originCell.textContent) === null || _d === void 0 ? void 0 : _d.trim()) || "";\n                    timeText = ((_e = timeCell.textContent) === null || _e === void 0 ? void 0 : _e.trim()) || "";\n                    (0, logging_utils_1.sendLog)("Dados extra\\u00EDdos - Nome: \\"".concat(commandName, "\\", Atacante: \\"").concat(attackerName, "\\", Alvo: \\"").concat(targetName, "\\", Origem: \\"").concat(originName, "\\", Tempo: \\"").concat(timeText, "\\""), "debug");\n                    landingSeconds = parseCountdown(timeText);\n                    if (isNaN(landingSeconds) || landingSeconds < 0) {\n                        (0, logging_utils_1.sendLog)("Tempo de chegada inv\\u00E1lido: ".concat(timeText), "warning");\n                        return [2 /*return*/, null];\n                    }\n                    landingTime = new Date(currentServerTime.getTime() + landingSeconds * 1000);\n                    targetCoord = "";\n                    originCoord = "";\n                    // 1. Tentar extrair do texto do nome\n                    targetCoord = extractCoordinatesFromName(targetName);\n                    originCoord = extractCoordinatesFromName(originName);\n                    targetLink = targetCell.querySelector("a");\n                    originLink = originCell.querySelector("a");\n                    if (!targetCoord && targetLink) {\n                        villageIdMatch = (_f = targetLink.getAttribute("href")) === null || _f === void 0 ? void 0 : _f.match(/village=(\\d+)/);\n                        villageId_1 = villageIdMatch ? villageIdMatch[1] : null;\n                        if (villageId_1) {\n                            targetVillageByLink = villages.find(function (v) { return v.id.toString() === villageId_1; });\n                            if (targetVillageByLink) {\n                                targetCoord = "".concat(targetVillageByLink.x, "|").concat(targetVillageByLink.y);\n                                (0, logging_utils_1.sendLog)("Coordenadas do alvo extra\\u00EDdas do link: ".concat(targetCoord), "debug");\n                            }\n                        }\n                        // Também podemos tentar extrair diretamente do texto do link com regex\n                        if (!targetCoord) {\n                            coordsFromLink = extractCoordinatesFromName(targetLink.textContent || "");\n                            if (coordsFromLink) {\n                                targetCoord = coordsFromLink;\n                                (0, logging_utils_1.sendLog)("Coordenadas do alvo extra\\u00EDdas do texto do link: ".concat(targetCoord), "debug");\n                            }\n                        }\n                    }\n                    // Se mesmo assim não conseguiu extrair coordenadas do alvo, tentar extrair do texto do link\n                    if (!targetCoord && targetLink && targetLink.textContent) {\n                        linkText = targetLink.textContent.trim();\n                        (0, logging_utils_1.sendLog)("Tentando extrair coordenadas do texto do link: \\"".concat(linkText, "\\""), "debug");\n                        match = linkText.match(/\\((\\d+\\|\\d+)\\)/);\n                        if (match && match[1]) {\n                            targetCoord = match[1];\n                            (0, logging_utils_1.sendLog)("Coordenadas extra\\u00EDdas do texto do link: ".concat(targetCoord), "debug");\n                        }\n                    }\n                    // Se ainda não temos coordenadas válidas\n                    if (!targetCoord) {\n                        (0, logging_utils_1.sendLog)("N\\u00E3o foi poss\\u00EDvel extrair coordenadas v\\u00E1lidas para o alvo. Nome: \\"".concat(targetName, "\\""), "warning");\n                        // Vamos tentar criar um comando mesmo sem as coordenadas exatas\n                        // Usaremos o ID da primeira vila do jogador como fallback\n                        if (villages.length > 0) {\n                            fallbackVillage = villages[0];\n                            targetCoord = "".concat(fallbackVillage.x, "|").concat(fallbackVillage.y);\n                            (0, logging_utils_1.sendLog)("Usando coordenadas fallback para o alvo: ".concat(targetCoord), "warning");\n                        }\n                        else {\n                            (0, logging_utils_1.sendLog)("Sem vilas dispon\\u00EDveis para usar como fallback, imposs\\u00EDvel criar comando", "error");\n                            return [2 /*return*/, null];\n                        }\n                    }\n                    targetVillage = findVillageByCoord(villages, targetCoord);\n                    if (!targetVillage && villages.length > 0) {\n                        // Se não encontrou a vila específica, use a primeira vila como fallback\n                        targetVillage = villages[0];\n                        (0, logging_utils_1.sendLog)("Vila alvo n\\u00E3o encontrada para coordenadas: ".concat(targetCoord, ", usando primeira vila como fallback"), "warning");\n                    }\n                    else if (!targetVillage) {\n                        (0, logging_utils_1.sendLog)("Vila alvo n\\u00E3o encontrada para coordenadas: ".concat(targetCoord, " e n\\u00E3o h\\u00E1 vilas dispon\\u00EDveis"), "error");\n                        return [2 /*return*/, null];\n                    }\n                    command = null;\n                    _g.label = 1;\n                case 1:\n                    _g.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 2:\n                    command = _g.sent();\n                    if (command) {\n                        (0, logging_utils_1.sendLog)("Comando existente encontrado para ID ".concat(commandId), "info");\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_1 = _g.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao tentar carregar comando existente: ".concat(error_1), "warning");\n                    return [3 /*break*/, 4];\n                case 4:\n                    // Se o comando não existir, criar um novo\n                    if (!command) {\n                        (0, logging_utils_1.sendLog)("Criando novo comando para ID ".concat(commandId), "info");\n                        command = new command_1.Command(commandId, targetVillage.id, landingTime);\n                        // Definir dados básicos\n                        command.name = commandName;\n                        command.targetName = targetName;\n                        command.targetCoord = targetCoord;\n                        command.originName = originName;\n                        command.originId = originCoord || "desconhecido";\n                        command.attackerName = attackerName;\n                        command.attackerId = "";\n                        command.state = command_1.COMMAND_STATE.PLANNING;\n                        dodgeTime = new Date(landingTime.getTime() - 20 * 1000);\n                        command.dodgeTime = dodgeTime;\n                        // Verificar se é um comando do próprio jogador\n                        if (isOwnerCommand(attackerName)) {\n                            command.state = command_1.COMMAND_STATE.OWNER_COMMAND;\n                            (0, logging_utils_1.sendLog)("Comando ".concat(commandId, " marcado como comando pr\\u00F3prio"), "info");\n                        }\n                    }\n                    else {\n                        // Atualizar dados do comando existente\n                        command.name = commandName;\n                        command.targetName = targetName;\n                        command.originName = originName;\n                        command.attackerName = attackerName;\n                        command.landingTime = landingTime;\n                        // Manter estado e outras propriedades\n                        (0, logging_utils_1.sendLog)("Comando ".concat(commandId, " atualizado com novos dados da tabela"), "info");\n                    }\n                    _g.label = 5;\n                case 5:\n                    _g.trys.push([5, 8, , 9]);\n                    return [4 /*yield*/, command.save()];\n                case 6:\n                    _g.sent();\n                    return [4 /*yield*/, command_1.Command.load(commandId)];\n                case 7:\n                    savedCommand = _g.sent();\n                    if (!savedCommand) {\n                        (0, logging_utils_1.sendLog)("ERRO CR\\u00CDTICO: Comando ".concat(commandId, " n\\u00E3o p\\u00F4de ser verificado ap\\u00F3s salvamento"), "error");\n                    }\n                    else {\n                        (0, logging_utils_1.sendLog)("Comando ".concat(commandId, " salvo e verificado com sucesso: estado=").concat(savedCommand.state), "info");\n                    }\n                    return [3 /*break*/, 9];\n                case 8:\n                    error_2 = _g.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao salvar comando ".concat(commandId, ": ").concat(error_2), "error");\n                    return [2 /*return*/, null];\n                case 9: return [2 /*return*/, command];\n                case 10:\n                    error_3 = _g.sent();\n                    (0, logging_utils_1.sendLog)("Erro ao processar linha da tabela: ".concat(error_3), "error");\n                    return [2 /*return*/, null];\n                case 11: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Verifica se um comando é do próprio jogador com base no nome do atacante\n */\nfunction isOwnerCommand(attackerName) {\n    var _a;\n    try {\n        var player = (_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.player;\n        if (!player || !player.name)\n            return false;\n        // Verificar se o atacante é o próprio jogador ou seu sitter\n        return attackerName.toLowerCase() === player.name.toLowerCase();\n    }\n    catch (error) {\n        (0, logging_utils_1.sendLog)("Erro ao verificar se comando \\u00E9 pr\\u00F3prio: ".concat(error), "warning");\n        return false;\n    }\n}\n/**\n * Encontrar uma vila nas vilas carregadas baseado nas coordenadas\n */\nfunction findVillageByCoord(villages, coord) {\n    return villages.find(function (v) { return "".concat(v.x, "|").concat(v.y) === coord; });\n}\nfunction resetFirstTimeFlag() {\n    storage_1.AutoDodgeStorage.saveFirstTime(true);\n}\nfunction extractCoordinatesFromName(name) {\n    if (!name)\n        return \'\';\n    // Padrão principal: extrai coordenadas no formato (X|Y)\n    var coordRegex = /\\((\\d+\\|\\d+)\\)/;\n    var match = name.match(coordRegex);\n    if (match && match[1]) {\n        (0, logging_utils_1.sendLog)("Coordenadas extra\\u00EDdas de \\"".concat(name, "\\": ").concat(match[1]), "debug");\n        return match[1];\n    }\n    // Tentar padrão alternativo para algumas versões do jogo\n    var alternativeRegex = /(\\d+)\\|(\\d+)/;\n    var altMatch = name.match(alternativeRegex);\n    if (altMatch && altMatch[1] && altMatch[2]) {\n        var coords = "".concat(altMatch[1], "|").concat(altMatch[2]);\n        (0, logging_utils_1.sendLog)("Coordenadas alternativas extra\\u00EDdas de \\"".concat(name, "\\": ").concat(coords), "debug");\n        return coords;\n    }\n    (0, logging_utils_1.sendLog)("N\\u00E3o foi poss\\u00EDvel extrair coordenadas de \\"".concat(name, "\\""), "debug");\n    return \'\';\n}\n/**\n * Adapta a função parseAndSaveCommandFromRow para a interface esperada em actions/index.ts\n */\nfunction parseCommandFromRow(villages, row, currentServerTime, parsedCount) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, parseAndSaveCommandFromRow(row, villages, currentServerTime)];\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/utils/helper.utils.ts?')},"./src/utils/lock.utils.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.setLock = setLock;\nexports.releaseLock = releaseLock;\nexports.isLocked = isLocked;\nexports.isSessionActive = isSessionActive;\nexports.isLockedInAnotherTab = isLockedInAnotherTab;\nvar LockService = __importStar(__webpack_require__(/*! ../storage/services/lockService */ "./src/storage/services/lockService.ts"));\nfunction setLock(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, LockService.setLock(config)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction releaseLock(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, LockService.releaseLock(config)];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction isLocked(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, LockService.isLocked(config)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction isSessionActive(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, LockService.isSessionActive(config)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction isLockedInAnotherTab(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, LockService.isLockedInAnotherTab(config)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/utils/lock.utils.ts?')},"./src/utils/logging.utils.ts":function(__unused_webpack_module,exports){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.sendLog = sendLog;\n// Add this function near the beginning of your script, after the config loading\nfunction sendLog(message_1) {\n    return __awaiter(this, arguments, void 0, function (message, level) {\n        var safeLevel, logData, sendToExternalAPI;\n        if (level === void 0) { level = "info"; }\n        return __generator(this, function (_a) {\n            safeLevel = typeof level === "string" ? level : "info";\n            console.log("[".concat(level, "] ").concat(message));\n            logData = {\n                player_id: game_data.player.id,\n                world: game_data.world,\n                message: Array.isArray(message) ? JSON.stringify(message) : message,\n                level: safeLevel,\n                timestamp: getCurrentServerTime().toISOString(),\n            };\n            sendToExternalAPI = false;\n            if (sendToExternalAPI) {\n                fetch("https://ptc1.tribalkit.com/api/desviador/logs", {\n                    method: "POST",\n                    headers: {\n                        "Content-Type": "application/json",\n                    },\n                    body: JSON.stringify(logData),\n                }).catch(function () {\n                    // Silently ignore any errors from the API\n                });\n            }\n            return [2 /*return*/];\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/utils/logging.utils.ts?')},"./src/utils/population.utils.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.calculateVillagePopulation = calculateVillagePopulation;\nexports.hasNobles = hasNobles;\nvar unitsPop = {\n    spear: 1,\n    sword: 1,\n    axe: 1,\n    archer: 1,\n    spy: 2,\n    light: 4,\n    marcher: 5,\n    heavy: 6,\n    ram: 5,\n    catapult: 8,\n    snob: 100\n};\nfunction calculateVillagePopulation() {\n    var totalPopulation = 0;\n    Object.entries(unitsPop).forEach(function (_a) {\n        var unit = _a[0], pop = _a[1];\n        var input = document.getElementById("unit_input_".concat(unit));\n        if (input) {\n            var unitCount = parseInt(input.getAttribute(\'data-all-count\') || \'0\', 10);\n            totalPopulation += unitCount * pop;\n        }\n    });\n    return totalPopulation;\n}\nfunction hasNobles() {\n    var nobleInput = document.getElementById("unit_input_snob");\n    return nobleInput\n        ? parseInt(nobleInput.getAttribute("data-all-count") || "0", 10) > 0\n        : false;\n}\n\n\n//# sourceURL=webpack:///./src/utils/population.utils.ts?')},"./src/utils/serverTime.utils.ts":(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.adjustServerTime = adjustServerTime;\nfunction adjustServerTime(serverTimestamp) {\n    // Pega a diferença de horas entre local e UTC\n    var localOffset = new Date().getTimezoneOffset() / 60;\n    // Converte para milissegundos (1 hora = 3600000 ms)\n    var offsetMs = localOffset * 3600000;\n    // Ajusta o timestamp do servidor\n    return serverTimestamp + offsetMs; // Changed from - to + to subtract an hour instead of adding\n}\n\n\n//# sourceURL=webpack:///./src/utils/serverTime.utils.ts?')},"./src/utils/time.utils.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.formatTime = formatTime;\nexports.calculateCancelTime = calculateCancelTime;\nexports.parseCommandArrivalTime = parseCommandArrivalTime;\nexports.getCurrentServerTime = getCurrentServerTime;\nexports.ensureValidDate = ensureValidDate;\nvar storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");\nvar serverTime_utils_1 = __webpack_require__(/*! ../utils/serverTime.utils */ "./src/utils/serverTime.utils.ts");\n// Add this helper function to format time\nfunction formatTime(date) {\n    var _a;\n    var serverDateElement = document.getElementById("serverDate");\n    if (serverDateElement) {\n        var _b = (_a = serverDateElement === null || serverDateElement === void 0 ? void 0 : serverDateElement.textContent) === null || _a === void 0 ? void 0 : _a.split("/"), day = _b[0], month = _b[1], year = _b[2];\n        var formattedDate = new Date(date);\n        formattedDate.setFullYear(parseInt(year));\n        formattedDate.setMonth(parseInt(month) - 1);\n        formattedDate.setDate(parseInt(day));\n        var now = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n        var isToday = formattedDate.toDateString() === now.toDateString();\n        var isTomorrow = formattedDate.toDateString() === new Date(now.setDate(now.getDate() + 1)).toDateString();\n        var timeString = formattedDate.toTimeString().split(" ")[0]; // HH:MM:SS\n        if (isToday) {\n            return timeString; // HH:MM:SS\n        }\n        else if (isTomorrow) {\n            return "Amanh\\u00E3, ".concat(timeString); // Amanhã, HH:MM:SS\n        }\n        else {\n            return "".concat(formattedDate.getDate(), ".").concat(formattedDate.getMonth() + 1, ", ").concat(timeString); // DD.MM, HH:MM:SS\n        }\n    }\n    return date.toTimeString().split(" ")[0]; // Fallback\n}\nfunction calculateCancelTime(dodgeTime, landingTime) {\n    var config = storage_1.AutoDodgeStorage.loadConfig();\n    var travelTimeMs = landingTime.getTime() - dodgeTime.getTime();\n    var cancelDelayMs = travelTimeMs * config.CANCEL_DELAY_FRACTION;\n    var proposedCancelTimeMs = dodgeTime.getTime() + travelTimeMs / 2 + cancelDelayMs;\n    var latestPossibleCancelTimeMs = landingTime.getTime() - config.MIN_CANCEL_BUFFER * 1000;\n    return new Date(Math.min(proposedCancelTimeMs, latestPossibleCancelTimeMs));\n}\nfunction parseCommandArrivalTime(arrivalTimeText) {\n    // Remove any potential whitespace\n    arrivalTimeText = arrivalTimeText.trim();\n    // Split into date and time parts\n    var _a = arrivalTimeText.split(" às "), datePart = _a[0], timePart = _a[1];\n    // Initialize base date with server time\n    var arrivalDate;\n    if (datePart.toLowerCase() === "hoje") {\n        arrivalDate = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n    }\n    else if (datePart.toLowerCase() === "amanhã") {\n        arrivalDate = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n        arrivalDate.setDate(arrivalDate.getDate() + 1);\n    }\n    else {\n        // Assuming the date format is DD/MM\n        var _b = datePart.split("/"), day = _b[0], month = _b[1];\n        arrivalDate = new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n        arrivalDate.setMonth(parseInt(month) - 1);\n        arrivalDate.setDate(parseInt(day));\n    }\n    // Parse time with milliseconds\n    var _c = timePart.split(":"), hours = _c[0], minutes = _c[1], seconds = _c[2], ms = _c[3];\n    // Fazer tudo numa operação só\n    var totalMs = (parseInt(hours) * 3600000 + // horas para ms\n        parseInt(minutes) * 60000 + // minutos para ms\n        parseInt(seconds) * 1000 + // segundos para ms\n        (ms ? parseInt(ms) : 0) // milissegundos\n    );\n    // Reset time to midnight\n    arrivalDate.setHours(0, 0, 0, 0);\n    // Add all milliseconds at once\n    arrivalDate.setTime(arrivalDate.getTime() + totalMs);\n    return arrivalDate;\n}\nfunction ensureValidDate(date) {\n    if (!date) {\n        console.warn(\'Data inválida detectada, usando data atual como fallback\');\n        return new Date((0, serverTime_utils_1.adjustServerTime)(Timing.getCurrentServerTime()));\n    }\n    return date;\n}\n\n\n//# sourceURL=webpack:///./src/utils/time.utils.ts?')},"./src/utils/url.utils.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.getIncomingsUrl = getIncomingsUrl;\nexports.getBaseUrl = getBaseUrl;\nexports.getDodgeUrl = getDodgeUrl;\nexports.getCancelUrl = getCancelUrl;\nexports.getSnipeUrl = getSnipeUrl;\nexports.getVillageOverviewUrl = getVillageOverviewUrl;\nvar tribalkit_1 = __webpack_require__(/*! ../tribalkit */ "./src/tribalkit.ts");\nvar service_1 = __webpack_require__(/*! ../storage/service */ "./src/storage/service.ts");\n// Add this function to get the incomings URL\nfunction getIncomingsUrl() {\n    return __awaiter(this, void 0, void 0, function () {\n        var incomingsUrl, incomingsLink, url, fallbackUrl;\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, (0, service_1.getIncomingsUrlStorage)()];\n                case 1:\n                    incomingsUrl = _b.sent();\n                    if (incomingsUrl) {\n                        return [2 /*return*/, incomingsUrl];\n                    }\n                    incomingsLink = document.querySelector("#incomings_cell a");\n                    if (!incomingsLink) return [3 /*break*/, 3];\n                    url = incomingsLink.href;\n                    return [4 /*yield*/, (0, service_1.setIncomingsUrlStorage)(url)];\n                case 2:\n                    _b.sent(); // Save the URL when we find it\n                    return [2 /*return*/, url];\n                case 3:\n                    fallbackUrl = "".concat((_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.link_base_pure, "screen=overview_villages&mode=incomings&type=unignored&subtype=attacks");\n                    return [2 /*return*/, fallbackUrl];\n            }\n        });\n    });\n}\nfunction getBaseUrl(villageId) {\n    var _a;\n    var baseUrl = ((_a = tribalkit_1.TribalKitService.tribalKit) === null || _a === void 0 ? void 0 : _a.link_base_pure) || "";\n    // Remove the \'screen=\' part if it exists\n    baseUrl = baseUrl.replace(/&screen=$/, "");\n    // Replace the village ID in the URL with our custom village ID\n    baseUrl = baseUrl.replace(/village=\\d+/, "village=".concat(villageId));\n    return baseUrl;\n}\nfunction getDodgeUrl(villageId, targetId, tParam) {\n    return "".concat(getBaseUrl(villageId), "&screen=place&target=").concat(targetId).concat(tParam ? "&t=".concat(tParam) : "");\n}\nfunction getCancelUrl(villageId) {\n    return "".concat(getBaseUrl(villageId), "&screen=place");\n}\nfunction getSnipeUrl(targetID, snipeVillageId) {\n    return "".concat(getBaseUrl(snipeVillageId), "&screen=place&target=").concat(targetID);\n}\n/**\n * Gets the URL for a village\'s overview page\n * @param villageId The ID of the village\n * @returns The URL for the village overview page\n */\nfunction getVillageOverviewUrl(villageId) {\n    // Get current URL to extract t parameter if it exists\n    var currentUrl = window.location.href;\n    var tMatch = currentUrl.match(/[?&]t=(\\d+)/);\n    var tParam = tMatch ? "&t=".concat(tMatch[1]) : \'\';\n    return "".concat(getBaseUrl(villageId)).concat(tParam, "&screen=overview");\n}\n\n\n//# sourceURL=webpack:///./src/utils/url.utils.ts?')},"./src/utils/village.utils.ts":function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);\n    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.getWorldConfig = getWorldConfig;\nexports.getTroopInfo = getTroopInfo;\nexports.getAllVillagesWithTroops = getAllVillagesWithTroops;\nexports.calculateDistance = calculateDistance;\nexports.calculateTravelTime = calculateTravelTime;\nexports.findTargetVillageForOffsetTest = findTargetVillageForOffsetTest;\nexports.calculateLandingTime = calculateLandingTime;\nvar logging_utils_1 = __webpack_require__(/*! ./logging.utils */ "./src/utils/logging.utils.ts");\n// Anti-spam: Cache para getAllVillagesWithTroops\nvar villagesWithTroopsCache = null;\nvar VILLAGES_CACHE_DURATION = 5 * 60 * 1000; // 5 minutos\n/**\n * Fetches world configuration data from the game\n * @returns World configuration including game speed, unit speed, and available unit types\n */\nfunction getWorldConfig() {\n    return __awaiter(this, void 0, void 0, function () {\n        var response, data, parser, xml;\n        var _a, _b, _c, _d;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0: return [4 /*yield*/, fetch(\'/interface.php?func=get_config\')];\n                case 1:\n                    response = _e.sent();\n                    return [4 /*yield*/, response.text()];\n                case 2:\n                    data = _e.sent();\n                    parser = new DOMParser();\n                    xml = parser.parseFromString(data, "text/xml");\n                    return [2 /*return*/, {\n                            velocidade_jogo: Number(((_a = xml.querySelector("config speed")) === null || _a === void 0 ? void 0 : _a.textContent) || 0),\n                            velocidade_tropas: Number(((_b = xml.querySelector("config unit_speed")) === null || _b === void 0 ? void 0 : _b.textContent) || 0),\n                            arqueiros: Number(((_c = xml.querySelector("game archer")) === null || _c === void 0 ? void 0 : _c.textContent) || 0),\n                            paladino: Number(((_d = xml.querySelector("game knight")) === null || _d === void 0 ? void 0 : _d.textContent) || 0)\n                        }];\n            }\n        });\n    });\n}\n/**\n * Get troop names and images based on world configuration\n * @param config World configuration\n * @returns Object containing troop names, images, and speeds\n */\nfunction getTroopInfo(config) {\n    var velocidades = [18, 22, 18, 18, 9, 10, 10, 11, 30, 30, 10, 35];\n    var nomesTropas = ["Lanceiro", "Espadachim", "Viking", "Arqueiro", "Batedor", "Cavalaria leve", "Arqueiro a cavalo", "Cavalaria Pesada", "Aríete", "Catapulta", "Paladino", "Nobre"];\n    var imagens = ["spear", "sword", "axe", "archer", "spy", "light", "marcher", "heavy", "ram", "catapult", "knight", "snob"];\n    // Adjust units based on world config\n    if (!config.paladino) {\n        var index = imagens.indexOf("knight");\n        velocidades.splice(index, 1);\n        nomesTropas.splice(index, 1);\n        imagens.splice(index, 1);\n    }\n    if (!config.arqueiros) {\n        var indexArcher = imagens.indexOf("archer");\n        velocidades.splice(indexArcher, 1);\n        nomesTropas.splice(indexArcher, 1);\n        imagens.splice(indexArcher, 1);\n        var indexMarcher = imagens.indexOf("marcher");\n        velocidades.splice(indexMarcher, 1);\n        nomesTropas.splice(indexMarcher, 1);\n        imagens.splice(indexMarcher, 1);\n    }\n    // Adjust for world speed\n    var velocidade_mundo = Number((config.velocidade_jogo * config.velocidade_tropas).toFixed(5));\n    var adjustedVelocidades = velocidades.map(function (v) { return v / velocidade_mundo; });\n    return {\n        nomesTropas: nomesTropas,\n        imagens: imagens,\n        velocidades: adjustedVelocidades,\n        rawVelocidades: velocidades\n    };\n}\n/**\n * Fetches all villages and their troops without any filtering\n * This function iterates through pages of the village overview\n * @returns Array of villages with their troop counts\n */\nfunction getAllVillagesWithTroops() {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, imagens, villages, currentPage, lastFirstVillageId, response, html, doc, table, rows, firstVillageSpan, currentFirstVillageId, _loop_1, _i, rows_1, row, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    // Anti-spam: Verificar cache primeiro\n                    if (villagesWithTroopsCache && (Date.now() - villagesWithTroopsCache.timestamp) < VILLAGES_CACHE_DURATION) {\n                        console.log("[Villages] Using cached village data, age:", Math.round((Date.now() - villagesWithTroopsCache.timestamp) / 1000), "seconds");\n                        return [2 /*return*/, villagesWithTroopsCache.data];\n                    }\n                    console.log("[Villages] Cache expired or not available, fetching fresh data...");\n                    return [4 /*yield*/, getWorldConfig()];\n                case 1:\n                    config = _a.sent();\n                    imagens = getTroopInfo(config).imagens;\n                    villages = [];\n                    currentPage = -1;\n                    lastFirstVillageId = null;\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 9, , 10]);\n                    _a.label = 3;\n                case 3:\n                    if (false) {}\n                    currentPage++;\n                    if (!(currentPage > 0)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 100); })];\n                case 4:\n                    _a.sent();\n                    _a.label = 5;\n                case 5: return [4 /*yield*/, fetch("".concat(game_data.link_base_pure, "overview_villages&mode=units&type=own_home&page=").concat(currentPage))];\n                case 6:\n                    response = _a.sent();\n                    return [4 /*yield*/, response.text()];\n                case 7:\n                    html = _a.sent();\n                    doc = new DOMParser().parseFromString(html, "text/html");\n                    table = doc.querySelector(\'#units_table\') || doc.querySelector(\'.vis\');\n                    if (!table) {\n                        throw new Error("Could not find the units table");\n                    }\n                    rows = Array.from(table.rows).slice(1);\n                    if (rows.length === 0)\n                        return [3 /*break*/, 8]; // No more villages\n                    firstVillageSpan = rows[0].cells[0].querySelector(\'span[data-id]\');\n                    currentFirstVillageId = (firstVillageSpan === null || firstVillageSpan === void 0 ? void 0 : firstVillageSpan.getAttribute(\'data-id\')) || null;\n                    if (currentFirstVillageId && currentFirstVillageId === lastFirstVillageId) {\n                        return [3 /*break*/, 8]; // We\'ve reached a page we\'ve seen before, stop pagination\n                    }\n                    lastFirstVillageId = currentFirstVillageId;\n                    _loop_1 = function (row) {\n                        try {\n                            var cells_1 = row.cells;\n                            if (cells_1.length < 2)\n                                return "continue";\n                            // Get village information\n                            var villageCell = cells_1[0];\n                            var villageSpan = villageCell.querySelector(\'span[data-id]\');\n                            if (!(villageSpan instanceof HTMLSpanElement))\n                                return "continue";\n                            var villageId = villageSpan.dataset.id;\n                            var coordsText = villageSpan.textContent || \'\';\n                            var coordsMatch = coordsText.match(/\\((\\d+\\|\\d+)\\)/);\n                            if (!coordsMatch)\n                                return "continue";\n                            var _b = coordsMatch[1].split(\'|\').map(Number), x = _b[0], y = _b[1];\n                            var villageName = coordsText.split(\'(\')[0].trim();\n                            // Get unit counts for this village\n                            var units_1 = {};\n                            imagens.forEach(function (unit, index) {\n                                units_1[unit] = Number(cells_1[index + 2].textContent || 0);\n                            });\n                            // Add this village to our results\n                            villages.push({\n                                villageId: villageId,\n                                villageName: villageName,\n                                coordinates: "".concat(x, "|").concat(y),\n                                x: x,\n                                y: y,\n                                units: units_1\n                            });\n                        }\n                        catch (error) {\n                            (0, logging_utils_1.sendLog)("Error processing village: ".concat(error), \'error\');\n                            return "continue";\n                        }\n                    };\n                    // Process each village row\n                    for (_i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                        row = rows_1[_i];\n                        _loop_1(row);\n                    }\n                    return [3 /*break*/, 3];\n                case 8:\n                    // Anti-spam: Salvar no cache\n                    villagesWithTroopsCache = {\n                        data: villages,\n                        timestamp: Date.now()\n                    };\n                    console.log("[Villages] Cached", villages.length, "villages");\n                    return [2 /*return*/, villages];\n                case 9:\n                    error_1 = _a.sent();\n                    (0, logging_utils_1.sendLog)("Error fetching villages: ".concat(error_1), \'error\');\n                    throw error_1;\n                case 10: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Calculates the distance between two coordinates\n * @param x1 X coordinate of the first point\n * @param y1 Y coordinate of the first point\n * @param x2 X coordinate of the second point\n * @param y2 Y coordinate of the second point\n * @returns Euclidean distance between the two points\n */\nfunction calculateDistance(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\n/**\n * Calculates the travel time in seconds for a troop type between two points\n * @param distance Distance between points\n * @param unitSpeed Unit\'s speed factor\n * @param worldConfig World configuration\n * @returns Travel time in seconds\n */\nfunction calculateTravelTime(distance, unitSpeed, worldConfig) {\n    var worldSpeed = Number((worldConfig.velocidade_jogo * worldConfig.velocidade_tropas).toFixed(5));\n    var adjustedSpeed = unitSpeed / worldSpeed;\n    return Math.round(distance * adjustedSpeed * 60);\n}\n/**\n * Finds a suitable target village for offset testing\n * @param currentVillageCoords Coordinates of the current village\n * @returns The closest village different from the current one, or null if none found\n */\nfunction findTargetVillageForOffsetTest(currentVillageCoords) {\n    return __awaiter(this, void 0, void 0, function () {\n        var villages, otherVillages, _a, currentX_1, currentY_1, error_2;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, getAllVillagesWithTroops()];\n                case 1:\n                    villages = _b.sent();\n                    otherVillages = villages.filter(function (v) { return v.coordinates !== currentVillageCoords; });\n                    if (otherVillages.length === 0) {\n                        return [2 /*return*/, null];\n                    }\n                    _a = currentVillageCoords.split(\'|\').map(Number), currentX_1 = _a[0], currentY_1 = _a[1];\n                    // Sort by distance (closest first)\n                    otherVillages.sort(function (a, b) {\n                        var distA = calculateDistance(currentX_1, currentY_1, a.x, a.y);\n                        var distB = calculateDistance(currentX_1, currentY_1, b.x, b.y);\n                        return distA - distB;\n                    });\n                    // Return the closest village\n                    return [2 /*return*/, otherVillages[0]];\n                case 2:\n                    error_2 = _b.sent();\n                    (0, logging_utils_1.sendLog)("Error finding target village: ".concat(error_2), \'error\');\n                    return [2 /*return*/, null];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Calculates the expected landing time for a troop from source to target\n * @param sourceCoords Source village coordinates (x|y)\n * @param targetCoords Target village coordinates (x|y)\n * @param unitType Type of unit (e.g., \'spear\', \'light\')\n * @param launchTime Time when the command is launched (ms timestamp)\n * @param worldConfig World configuration data\n * @returns Expected landing time as a Date object\n */\nfunction calculateLandingTime(sourceCoords, targetCoords, unitType, launchTime, worldConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, imagens, velocidades, unitIndex, unitSpeed, _b, sourceX, sourceY, _c, targetX, targetY, distance, travelTimeSeconds, landingTime;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    if (!!worldConfig) return [3 /*break*/, 2];\n                    return [4 /*yield*/, getWorldConfig()];\n                case 1:\n                    worldConfig = _d.sent();\n                    _d.label = 2;\n                case 2:\n                    _a = getTroopInfo(worldConfig), imagens = _a.imagens, velocidades = _a.velocidades;\n                    unitIndex = imagens.indexOf(unitType);\n                    if (unitIndex === -1) {\n                        throw new Error("Unknown unit type: ".concat(unitType));\n                    }\n                    unitSpeed = velocidades[unitIndex];\n                    _b = sourceCoords.split(\'|\').map(Number), sourceX = _b[0], sourceY = _b[1];\n                    _c = targetCoords.split(\'|\').map(Number), targetX = _c[0], targetY = _c[1];\n                    distance = calculateDistance(sourceX, sourceY, targetX, targetY);\n                    travelTimeSeconds = Math.round(distance * unitSpeed * 60);\n                    landingTime = new Date(launchTime + (travelTimeSeconds * 1000));\n                    return [2 /*return*/, landingTime];\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack:///./src/utils/village.utils.ts?')},"?9157":()=>{eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?")}},__webpack_module_cache__={};function __webpack_require__(n){var e=__webpack_module_cache__[n];if(void 0!==e)return e.exports;var t=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n].call(t.exports,t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(n,e)=>{for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),__webpack_require__.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__("./src/index.ts")})();